{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\containers\\\\Board\\\\ResultPage.js\";\nimport { connect } from 'react-redux';\nimport React, { Component } from \"react\";\nimport * as actions from '../../store/actions/index';\nimport Results from '../../components/gameHistory/results/results';\nimport { Spinner } from 'react-bootstrap';\nimport firebase from '../../config/firebase/firebase';\n\nclass ResultPage extends Component {\n  componentDidMount() {\n    if (!this.props.loading) this.props.onFetchResults(this.props.numberofResultsDisplayed);\n  }\n\n  componentWillUnmount() {\n    firebase.database().ref(\"match-results\").off();\n  }\n\n  render() {\n    return !this.props.loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Results, {\n        daysResults: this.props.currentResults,\n        basePrice: this.props.basePrice,\n        isLoggedIn: this.props.isLoggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 52\n    }, this);\n  }\n\n}\n\nconst mapstateToProps = state => {\n  return {\n    //Config\n    basePrice: state.config.basePrice,\n    loading: state.config.loading,\n    currentResults: state.config.currentResults,\n    numberofResultsDisplayed: state.config.numberofResultsDisplayed,\n    insertResult: state.config.insertResult,\n    //Login\n    isLoggedIn: state.login.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchResults: startDate => dispatch(actions.fetchResults(startDate))\n  };\n};\n\nexport default connect(mapstateToProps, mapDispatchToProps)(ResultPage);","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/containers/Board/ResultPage.js"],"names":["connect","React","Component","actions","Results","Spinner","firebase","ResultPage","componentDidMount","props","loading","onFetchResults","numberofResultsDisplayed","componentWillUnmount","database","ref","off","render","currentResults","basePrice","isLoggedIn","mapstateToProps","state","config","insertResult","login","mapDispatchToProps","dispatch","startDate","fetchResults"],"mappings":";;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,8CAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,QAAP,MAAqB,gCAArB;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAC/BM,EAAAA,iBAAiB,GAAE;AACf,QAAG,CAAC,KAAKC,KAAL,CAAWC,OAAf,EACA,KAAKD,KAAL,CAAWE,cAAX,CAA0B,KAAKF,KAAL,CAAWG,wBAArC;AACH;;AACDC,EAAAA,oBAAoB,GAAE;AAClBP,IAAAA,QAAQ,CAACQ,QAAT,GAAoBC,GAApB,CAAwB,eAAxB,EAAyCC,GAAzC;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,WAAQ,CAAC,KAAKR,KAAL,CAAWC,OAAZ,gBAAqB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAArB,gBAAmC;AAAA,6BACvC,QAAC,OAAD;AAAS,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWS,cAAjC;AAAiD,QAAA,SAAS,EAAE,KAAKT,KAAL,CAAWU,SAAvE;AACI,QAAA,UAAU,EAAE,KAAKV,KAAL,CAAWW;AAD3B;AAAA;AAAA;AAAA;AAAA;AADuC;AAAA;AAAA;AAAA;AAAA,YAA3C;AAKH;;AAd8B;;AAkBnC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAEH;AACAH,IAAAA,SAAS,EAAEG,KAAK,CAACC,MAAN,CAAaJ,SAHrB;AAIHT,IAAAA,OAAO,EAAEY,KAAK,CAACC,MAAN,CAAab,OAJnB;AAKHQ,IAAAA,cAAc,EAAEI,KAAK,CAACC,MAAN,CAAaL,cAL1B;AAMHN,IAAAA,wBAAwB,EAAEU,KAAK,CAACC,MAAN,CAAaX,wBANpC;AAOHY,IAAAA,YAAY,EAAEF,KAAK,CAACC,MAAN,CAAaC,YAPxB;AASH;AACAJ,IAAAA,UAAU,EAAEE,KAAK,CAACG,KAAN,CAAYL;AAVrB,GAAP;AAaH,CAdD;;AAgBA,MAAMM,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHhB,IAAAA,cAAc,EAAGiB,SAAD,IAAcD,QAAQ,CAACxB,OAAO,CAAC0B,YAAR,CAAqBD,SAArB,CAAD;AADnC,GAAP;AAGH,CAJD;;AAKA,eAAe5B,OAAO,CAACqB,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CnB,UAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\r\nimport React, { Component } from \"react\";\r\nimport * as actions from '../../store/actions/index';\r\nimport Results from '../../components/gameHistory/results/results';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport firebase from '../../config/firebase/firebase';\r\n\r\nclass ResultPage extends Component {\r\n    componentDidMount(){\r\n        if(!this.props.loading)\r\n        this.props.onFetchResults(this.props.numberofResultsDisplayed);\r\n    }\r\n    componentWillUnmount(){\r\n        firebase.database().ref(\"match-results\").off();\r\n    }\r\n    render() {\r\n        return  !this.props.loading? <Spinner /> : <div>\r\n            <Results daysResults={this.props.currentResults} basePrice={this.props.basePrice}\r\n                isLoggedIn={this.props.isLoggedIn}\r\n            />\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nconst mapstateToProps = (state) => {\r\n    return {\r\n\r\n        //Config\r\n        basePrice: state.config.basePrice,\r\n        loading: state.config.loading,\r\n        currentResults: state.config.currentResults,\r\n        numberofResultsDisplayed: state.config.numberofResultsDisplayed,\r\n        insertResult: state.config.insertResult,\r\n\r\n        //Login\r\n        isLoggedIn: state.login.isLoggedIn\r\n\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchResults: (startDate)=> dispatch(actions.fetchResults(startDate)),\r\n    }\r\n}\r\nexport default connect(mapstateToProps, mapDispatchToProps)(ResultPage);"]},"metadata":{},"sourceType":"module"}