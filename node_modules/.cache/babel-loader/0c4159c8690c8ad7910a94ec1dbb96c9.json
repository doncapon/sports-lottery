{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\containers\\\\Transfers\\\\Transfers.js\";\nimport React, { Component } from \"react\";\nimport classes from './Transfers.module.css';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport ToWallet from \"../../components/Payments/ToWallet/ToWallet\";\nimport ToBank from \"../../components/Payments/ToBank/ToBank\";\nimport * as actions from '../../store/actions/index';\n\nclass Transfers extends Component {\n  render() {\n    if (!this.props.isLoggedIn) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    }\n\n    let toWallet = [classes.ToWalletHeader];\n    let toBank = [classes.ToBankHeader];\n\n    if (this.props.isToWallet) {\n      toWallet.push(classes.Selected);\n    } else {\n      toBank.push(classes.Selected);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.CardWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Top,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: toWallet.join(\" \"),\n          onClick: () => this.props.onSetIsToWallet(true),\n          children: \"To Wallet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: toBank.join(\" \"),\n          onClick: () => this.props.onSetIsToWallet(false),\n          children: \"To Bank Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.Main,\n        children: this.props.isToWallet ? /*#__PURE__*/_jsxDEV(ToWallet, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 42\n        }, this) : /*#__PURE__*/_jsxDEV(ToBank, {\n          user: this.props.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapstateToProps = state => {\n  return {\n    isToWallet: state.board.isToWallet,\n    isLoggedIn: state.login.isLoggedIn,\n    user: state.login.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetIsToWallet: isToWallet => dispatch(actions.setIsToWallet(isToWallet))\n  };\n};\n\nexport default connect(mapstateToProps, mapDispatchToProps)(Transfers);","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/containers/Transfers/Transfers.js"],"names":["React","Component","classes","Redirect","connect","ToWallet","ToBank","actions","Transfers","render","props","isLoggedIn","toWallet","ToWalletHeader","toBank","ToBankHeader","isToWallet","push","Selected","CardWrapper","Top","join","onSetIsToWallet","Main","user","mapstateToProps","state","board","login","mapDispatchToProps","dispatch","setIsToWallet"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,6CAArB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAO,KAAMC,OAAb,MAA0B,2BAA1B;;AACA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAC9BQ,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKC,KAAL,CAAWC,UAAhB,EAA4B;AACxB,0BACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AACD,QAAIC,QAAQ,GAAG,CAACV,OAAO,CAACW,cAAT,CAAf;AACA,QAAIC,MAAM,GAAG,CAACZ,OAAO,CAACa,YAAT,CAAb;;AACA,QAAI,KAAKL,KAAL,CAAWM,UAAf,EAA2B;AACvBJ,MAAAA,QAAQ,CAACK,IAAT,CAAcf,OAAO,CAACgB,QAAtB;AACH,KAFD,MAEO;AACHJ,MAAAA,MAAM,CAACG,IAAP,CAAYf,OAAO,CAACgB,QAApB;AACH;;AACD,wBAAQ;AAAK,MAAA,SAAS,EAAEhB,OAAO,CAACiB,WAAxB;AAAA,8BACJ;AAAK,QAAA,SAAS,EAAEjB,OAAO,CAACkB,GAAxB;AAAA,gCACI;AAAK,UAAA,SAAS,EAAER,QAAQ,CAACS,IAAT,CAAc,GAAd,CAAhB;AAAoC,UAAA,OAAO,EAAE,MAAM,KAAKX,KAAL,CAAWY,eAAX,CAA2B,IAA3B,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAER,MAAM,CAACO,IAAP,CAAY,GAAZ,CAAhB;AAAkC,UAAA,OAAO,EAAE,MAAM,KAAKX,KAAL,CAAWY,eAAX,CAA2B,KAA3B,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAMJ;AAAK,QAAA,SAAS,EAAEpB,OAAO,CAACqB,IAAxB;AAAA,kBACK,KAAKb,KAAL,CAAWM,UAAX,gBAAwB,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,gBAAxB,gBACM,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAI,KAAKN,KAAL,CAAWc;AAA3B;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,cANI;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAWH;;AAzB6B;;AA8BlC,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AAEHV,IAAAA,UAAU,EAAEU,KAAK,CAACC,KAAN,CAAYX,UAFrB;AAIHL,IAAAA,UAAU,EAAEe,KAAK,CAACE,KAAN,CAAYjB,UAJrB;AAKHa,IAAAA,IAAI,EAAEE,KAAK,CAACE,KAAN,CAAYJ;AALf,GAAP;AAQH,CATD;;AAWA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHR,IAAAA,eAAe,EAAGN,UAAD,IAAgBc,QAAQ,CAACvB,OAAO,CAACwB,aAAR,CAAsBf,UAAtB,CAAD;AADtC,GAAP;AAGH,CAJD;;AAKA,eAAeZ,OAAO,CAACqB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CrB,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport classes from './Transfers.module.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport ToWallet from \"../../components/Payments/ToWallet/ToWallet\";\r\nimport ToBank from \"../../components/Payments/ToBank/ToBank\";\r\nimport * as  actions from '../../store/actions/index';\r\nclass Transfers extends Component {\r\n    render() {\r\n        if (!this.props.isLoggedIn) {\r\n            return (\r\n                <Redirect to=\"/\" />\r\n            )\r\n        }\r\n        let toWallet = [classes.ToWalletHeader];\r\n        let toBank = [classes.ToBankHeader];\r\n        if (this.props.isToWallet) {\r\n            toWallet.push(classes.Selected);\r\n        } else {\r\n            toBank.push(classes.Selected);\r\n        }\r\n        return (<div className={classes.CardWrapper}>\r\n            <div className={classes.Top}>\r\n                <div className={toWallet.join(\" \")} onClick={() => this.props.onSetIsToWallet(true)}>To Wallet</div>\r\n                <div className={toBank.join(\" \")} onClick={() => this.props.onSetIsToWallet(false)}>To Bank Account</div>\r\n\r\n            </div>\r\n            <div className={classes.Main}>\r\n                {this.props.isToWallet ? <ToWallet />\r\n                    :  <ToBank user = {this.props.user} />}\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapstateToProps = (state) => {\r\n    return {\r\n\r\n        isToWallet: state.board.isToWallet,\r\n\r\n        isLoggedIn: state.login.isLoggedIn,\r\n        user: state.login.user,\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetIsToWallet: (isToWallet) => dispatch(actions.setIsToWallet(isToWallet)),\r\n    }\r\n}\r\nexport default connect(mapstateToProps, mapDispatchToProps)(Transfers);"]},"metadata":{},"sourceType":"module"}