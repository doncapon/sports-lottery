{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\containers\\\\Board\\\\Board.js\";\nimport React, { Component } from \"react\";\nimport classes from \"./Board.module.css\";\nimport Button from \"react-bootstrap/Button\";\nimport PlayRow from \"../PlayRow/PlayRow\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport Betslips from \"../Betslips/Betslips\";\nimport TopBoard from \"../../components/topBoard/topBoard\";\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/withErrorHandler';\nimport axios from '../../axios-fixtures';\nimport Payment from '../../components/board/payment/payment';\nimport { ArrowRight } from \"react-bootstrap-icons\";\nimport Receipts from '../../components/board/receipts/receipts/receipts';\nimport { addCommaToAmounts, dateInYYYYMMDD, getNextPlayDate } from '../../shared/utility';\nimport firebase from '../../config/firebase/firebase';\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport LoginModal from '../../components/loginLogout/modalLogin/loginModal';\n\nclass Board extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModalSignin: false,\n      funds: 0,\n      isGamesAvailable: true,\n      loading: false,\n      eventDate: null\n    };\n\n    this.togglePaymentButton = (paying, paid) => {\n      firebase.auth().onAuthStateChanged(user => {\n        if (user && user.emailVerified) {\n          this.props.onSetIsPaying(paying);\n          this.props.onSetIsPaid(paid);\n        } else {\n          this.setState({\n            showModalSignin: true\n          });\n        }\n      });\n    };\n\n    this.cancelLoginPopup = () => {\n      this.setState({\n        showModalSignin: false\n      });\n    };\n\n    this.confirmPurchase = () => {\n      this.ExecutePurchase();\n      this.props.onSetReceipt(this.state.eventDate);\n      this.togglePaymentButton(false, true);\n    };\n\n    this.ExecutePurchase = () => {\n      let userId = firebase.auth().currentUser.uid;\n      this.updateJackpot(this.props.totalPrice);\n      let userRef = firebase.database().ref(\"users\").child(userId);\n      userRef.child('funds').transaction(funds => {\n        this.props.onSetFunds(funds - this.props.totalPrice);\n        return funds - this.props.totalPrice;\n      });\n      userRef.off();\n    };\n\n    this.updateJackpot = totalPrice => {\n      firebase.database().ref(\"jackpots\").child(dateInYYYYMMDD(this.props.gameDate)).child(\"jackpot\").transaction(Jackpots => {\n        return Jackpots + totalPrice / 2;\n      });\n    };\n\n    if (!this.props.loading) {\n      this.props.onSetBoard(this.props.basePrice);\n      this.state.funds = this.props.user.funds;\n    }\n  }\n\n  componentDidMount() {\n    if (!this.state.loading) {\n      setTimeout(() => {\n        this.setState({\n          funds: this.props.user.funds\n        });\n      }, 1000);\n      firebase.database().ref(\"board\").orderByChild(\"dateKey\").limitToLast(1).once(\"value\").then(snapshot => {\n        let key = Object.keys(snapshot.val())[0];\n        let kickOffDate;\n        kickOffDate = getNextPlayDate(this.props.daysOffset, this.props.hourToNextDay);\n\n        if (new Date(key + \"T\" + this.props.kickOffTime) < new Date(kickOffDate)) {\n          this.setState({\n            isGamesAvailable: false\n          });\n        }\n\n        this.setState({\n          eventDate: key + \"T\" + this.props.kickOffTime\n        });\n      });\n    }\n\n    this.setState({\n      loading: true\n    });\n  }\n\n  componentWillUnmount() {\n    firebase.database().ref(\"jackpots\").off();\n    firebase.database().ref(\"board\").off();\n  }\n\n  render() {\n    return this.props.loading ?\n    /*#__PURE__*/\n    // this.state.isGamesAvailable? \n    _jsxDEV(\"div\", {\n      className: classes.Board,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.BoardLeft,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.TopBoard,\n          children: /*#__PURE__*/_jsxDEV(TopBoard, {\n            isStarted: this.props.isStarted,\n            clicked: this.props.onEmptyEditingISlip,\n            generateSlip: this.props.ongenerateSlip,\n            editIndex: this.props.editIndex,\n            basePrice: this.props.basePrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.PlayRow,\n          children: /*#__PURE__*/_jsxDEV(PlayRow, {\n            loading: this.props.loading,\n            fetchPredictionsAll: this.props.onFetchPredictionsAll,\n            predictions: this.props.predictions,\n            toggleSelectedTile: this.props.ontoggleSelectedTile,\n            slips: this.props.slips,\n            basePrice: this.props.basePrice,\n            checkPurchasable: this.props.onIsPurchasing,\n            setPurchaseAll: this.props.onSetPurchaseAll,\n            playingGames: this.props.playingGames,\n            editIndex: this.props.editIndex,\n            CalculateOverAllPrice: this.props.onCalculateOverAllPrice,\n            toggleShowHistory: this.props.onToggleShowHistory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.BoardRight,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Betslip,\n          children: /*#__PURE__*/_jsxDEV(Betslips, {\n            slips: this.props.slips,\n            setAdding: this.props.onSetAdding,\n            setRemoving: this.props.onSetRemoving,\n            setPurchaseAll: this.props.onSetPurchaseAll,\n            checkPurchasable: this.props.onCheckPurchasable,\n            setTotalPrice: this.props.onSetTotalPrice,\n            deleteAndResetAll: this.props.onDeleteAndResetAll,\n            addEmptySlip: this.props.onAddEmptySlip,\n            removeSlipSingle: this.props.onRemoveRowFromBetSlip,\n            purchaseAll: this.props.purchaseAll,\n            setEditIndex: this.props.onSetEditIndex,\n            addBetSlip: this.props.ononCopyBetslip,\n            editIndex: this.props.editIndex,\n            funds: this.state.funds,\n            totalPrice: this.props.totalPrice,\n            basePrice: this.props.basePrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Payment,\n          children: this.props.isPaying || this.props.isPaid ? /*#__PURE__*/_jsxDEV(Payment, {\n            totalPrice: this.props.totalPrice,\n            toggleshowShowReceipt: this.props.onToggleIsShowReceipt,\n            isPaid: this.props.isPaid,\n            closePayment: this.togglePaymentButton,\n            isShowReceipt: this.props.isShowReceipt,\n            gamesCount: this.props.slips.length,\n            setIsPaying: this.props.onSetIsPaying,\n            receipts: this.props.receipts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.ButtonsAndReceipt,\n          children: !this.props.isPaying && !this.props.isPaid ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.PayButtons,\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                disabled: this.props.totalPrice <= 0 || this.props.isLoggedIn && this.state.funds < this.props.totalPrice,\n                variant: \"success\",\n                className: classes.PayButton,\n                onClick: () => this.togglePaymentButton(true, false),\n                children: [\"PAY\", \" \", \"â‚¦\" + addCommaToAmounts(this.props.totalPrice.toString(10))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), this.state.funds < this.props.totalPrice && this.props.isLoggedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    color: 'red',\n                    textAlign: 'center',\n                    background: 'grey',\n                    padding: '10px 0',\n                    marginBottom: '10px'\n                  },\n                  children: \"Sorry, you do not have enough funds to make the purchase\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    className: classes.TransferButton,\n                    onClick: () => this.props.history.push(\"/transfers\"),\n                    children: [\" \", /*#__PURE__*/_jsxDEV(ArrowRight, {\n                      style: {\n                        fontWeight: 'bolder'\n                      },\n                      size: \"20\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 78\n                    }, this), \" GO TO FUNDS TRANSFER\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 24\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 88\n              }, this) : null, /*#__PURE__*/_jsxDEV(Modal, {\n                show: this.state.showModalSignin,\n                modalClosed: this.cancelLoginPopup,\n                children: /*#__PURE__*/_jsxDEV(LoginModal, {\n                  setLoggedInUser: this.props.onSetLoggedInUser,\n                  setIsPaying: this.props.onSetIsPaying,\n                  setIsLoggedIn: this.props.onSetIsLoggedIn,\n                  setIsPaid: this.props.onSetIsPaid,\n                  cancelLoginPopup: this.cancelLoginPopup\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this) : this.props.isPaying ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(Button, {\n              disabled: !this.props.purchaseAll,\n              variant: \"success\",\n              onClick: this.confirmPurchase,\n              className: classes.ConfrimePayments,\n              children: [\"CONFIRM \", \" \", this.props.purchaseAll ? \"â‚¦\" + addCommaToAmounts(this.props.totalPrice.toString(10)) : \"â‚¦0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this) : this.props.isShowReceipt ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.Receipts,\n            children: /*#__PURE__*/_jsxDEV(Receipts, {\n              receipts: this.props.receipts,\n              basePrice: this.props.basePrice,\n              gameDate: this.props.gameDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }, this) // : <div style={{background: 'skyblue', paddingLeft: '10vw'}}>Sorry there are no games available for this week</div>\n    :\n    /*#__PURE__*/\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst mapstateToProps = state => {\n  return {\n    hourToNextDay: state.config.hourToNextDay,\n    isFACupNextWeek: state.config.isFACupNextWeek,\n    daysOffset: state.config.daysOffset,\n    kickOffTime: state.config.kickOffTime,\n    gameDate: state.board.gameDate,\n    evaluationDate: state.board.evaluationDate,\n    gameDateRaw: state.board.gameDateRaw,\n    loading: state.board.loading,\n    showFunds: state.board.showFunds,\n    isShowReceipt: state.board.isShowReceipt,\n    receipts: state.board.receipts,\n    basePrice: state.config.basePrice,\n    slips: state.board.slips,\n    playingGames: state.board.playingGames,\n    totalPrice: state.board.totalPrice,\n    editIndex: state.board.editIndex,\n    purchaseAll: state.board.purchaseAll,\n    isStarted: state.board.isStarted,\n    isPaying: state.board.isPaying,\n    isPaid: state.board.isPaid,\n    predictions: state.pred.predictions,\n    isLoggedIn: state.login.isLoggedIn,\n    user: state.login.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetFunds: funds => dispatch(actions.setFunds(funds)),\n    onSetBoard: basePrice => dispatch(actions.setBoard(basePrice)),\n    onResetReduxBoard: () => dispatch(actions.resetReduxBoard()),\n    // onToggleShowFunds: () => dispatch(actions.toggleShowFunds()),\n    onToggleIsShowReceipt: () => dispatch(actions.toggleIsShowReceipt()),\n    onSetReceipt: () => dispatch(actions.setReceipt()),\n    ontoggleSelectedTile: (slipIndex, gameIndex, sideIndex, side) => dispatch(actions.toggleSelectedTile(slipIndex, gameIndex, sideIndex, side)),\n    ononCopyBetslip: postion => dispatch(actions.copyBetslip(postion)),\n    onRemoveRowFromBetSlip: deleteId => dispatch(actions.removeRowFromBetSlip(deleteId)),\n    onIsPurchasing: index => dispatch(actions.checkPurchasable(index)),\n    onSetAdding: (slipIndex, isAdded) => dispatch(actions.setAdding(slipIndex, isAdded)),\n    onSetRemoving: (slipIndex, isRemoved) => dispatch(actions.setRemoving(slipIndex, isRemoved)),\n    onSetEditIndex: index => dispatch(actions.setEditIndex(index)),\n    onCheckPurchasable: index => dispatch(actions.checkPurchasable(index)),\n    onSetPurchaseAll: () => dispatch(actions.setPurchaseAll()),\n    onSetTotalPrice: () => dispatch(actions.calculateGrandTtoalPriceOfAllSlips()),\n    onDeleteAndResetAll: () => dispatch(actions.deleteAndResetAll()),\n    onAddEmptySlip: basePrice => dispatch(actions.addEmptySlip(basePrice)),\n    onEmptyEditingISlip: () => dispatch(actions.EmptyEditingISlip()),\n    onCalculateOverAllPrice: (slip, game, side, basePrice) => dispatch(actions.calculateOverAllPrice(slip, game, side, basePrice)),\n    ongenerateSlip: (amount, slipIndex, basePrice) => dispatch(actions.generateSlip(amount, slipIndex, basePrice)),\n    onToggleShowHistory: gameIndex => dispatch(actions.toggleShowHistory(gameIndex)),\n    onSetIsPaying: isPaying => dispatch(actions.setIsPaying(isPaying)),\n    onSetIsPaid: isPaid => dispatch(actions.setIsPaid(isPaid)),\n    onFetchPredictionsAll: (FixturesList, gameIndex) => dispatch(actions.fetchPredictionsAll(FixturesList, gameIndex)),\n    onSetIsLoggedIn: value => dispatch(actions.setIsLoggedIn(value)),\n    onSetLoggedInUser: (username, password) => dispatch(actions.setLoggedInUser(username, password))\n  };\n};\n\nexport default connect(mapstateToProps, mapDispatchToProps)(WithErrorHandler(Board, axios));","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/containers/Board/Board.js"],"names":["React","Component","classes","Button","PlayRow","connect","actions","Betslips","TopBoard","Spinner","WithErrorHandler","axios","Payment","ArrowRight","Receipts","addCommaToAmounts","dateInYYYYMMDD","getNextPlayDate","firebase","Modal","LoginModal","Board","constructor","props","state","showModalSignin","funds","isGamesAvailable","loading","eventDate","togglePaymentButton","paying","paid","auth","onAuthStateChanged","user","emailVerified","onSetIsPaying","onSetIsPaid","setState","cancelLoginPopup","confirmPurchase","ExecutePurchase","onSetReceipt","userId","currentUser","uid","updateJackpot","totalPrice","userRef","database","ref","child","transaction","onSetFunds","off","gameDate","Jackpots","onSetBoard","basePrice","componentDidMount","setTimeout","orderByChild","limitToLast","once","then","snapshot","key","Object","keys","val","kickOffDate","daysOffset","hourToNextDay","Date","kickOffTime","componentWillUnmount","render","BoardLeft","isStarted","onEmptyEditingISlip","ongenerateSlip","editIndex","onFetchPredictionsAll","predictions","ontoggleSelectedTile","slips","onIsPurchasing","onSetPurchaseAll","playingGames","onCalculateOverAllPrice","onToggleShowHistory","BoardRight","Betslip","onSetAdding","onSetRemoving","onCheckPurchasable","onSetTotalPrice","onDeleteAndResetAll","onAddEmptySlip","onRemoveRowFromBetSlip","purchaseAll","onSetEditIndex","ononCopyBetslip","isPaying","isPaid","onToggleIsShowReceipt","isShowReceipt","length","receipts","ButtonsAndReceipt","PayButtons","isLoggedIn","PayButton","toString","color","textAlign","background","padding","marginBottom","TransferButton","history","push","fontWeight","onSetLoggedInUser","onSetIsLoggedIn","ConfrimePayments","mapstateToProps","config","isFACupNextWeek","board","evaluationDate","gameDateRaw","showFunds","pred","login","mapDispatchToProps","dispatch","setFunds","setBoard","onResetReduxBoard","resetReduxBoard","toggleIsShowReceipt","setReceipt","slipIndex","gameIndex","sideIndex","side","toggleSelectedTile","postion","copyBetslip","deleteId","removeRowFromBetSlip","index","checkPurchasable","isAdded","setAdding","isRemoved","setRemoving","setEditIndex","setPurchaseAll","calculateGrandTtoalPriceOfAllSlips","deleteAndResetAll","addEmptySlip","EmptyEditingISlip","slip","game","calculateOverAllPrice","amount","generateSlip","toggleShowHistory","setIsPaying","setIsPaid","FixturesList","fetchPredictionsAll","value","setIsLoggedIn","username","password","setLoggedInUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport classes from \"./Board.module.css\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport PlayRow from \"../PlayRow/PlayRow\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Betslips from \"../Betslips/Betslips\";\r\nimport TopBoard from \"../../components/topBoard/topBoard\";\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport WithErrorHandler from '../../hoc/WithErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-fixtures';\r\nimport Payment from '../../components/board/payment/payment';\r\nimport { ArrowRight } from \"react-bootstrap-icons\";\r\nimport Receipts from '../../components/board/receipts/receipts/receipts';\r\nimport { addCommaToAmounts, dateInYYYYMMDD, getNextPlayDate } from '../../shared/utility';\r\nimport firebase from '../../config/firebase/firebase';\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport LoginModal from '../../components/loginLogout/modalLogin/loginModal';\r\n\r\nclass Board extends Component {\r\n\r\n  state = {\r\n    showModalSignin: false,\r\n    funds: 0,\r\n    isGamesAvailable: true,\r\n    loading: false,\r\n    eventDate: null\r\n  }\r\n  constructor(props) {\r\n    super(props);\r\n    if (!this.props.loading) {\r\n      this.props.onSetBoard(this.props.basePrice);\r\n      this.state.funds = this.props.user.funds;\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (!this.state.loading) {\r\n      setTimeout(() => {\r\n        this.setState({ funds: this.props.user.funds });\r\n      }, 1000);\r\n      firebase.database().ref(\"board\").orderByChild(\"dateKey\").limitToLast(1).once(\"value\")\r\n        .then(snapshot => {\r\n          let key =  Object.keys(snapshot.val())[0];\r\n          let kickOffDate;\r\n          kickOffDate = getNextPlayDate(this.props.daysOffset,\r\n            this.props.hourToNextDay);\r\n            if(new Date(key + \"T\" + this.props.kickOffTime ) < new Date(kickOffDate)){\r\n                this.setState({isGamesAvailable: false})\r\n            }\r\n          this.setState({ eventDate: key + \"T\" + this.props.kickOffTime })\r\n        });\r\n\r\n    }\r\n    this.setState({ loading: true });\r\n  }\r\n  componentWillUnmount() {\r\n    firebase.database().ref(\"jackpots\").off();\r\n    firebase.database().ref(\"board\").off();\r\n\r\n  }\r\n  togglePaymentButton = (paying, paid) => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user && user.emailVerified) {\r\n        this.props.onSetIsPaying(paying);\r\n        this.props.onSetIsPaid(paid);\r\n      } else {\r\n        this.setState({ showModalSignin: true })\r\n      }\r\n    })\r\n  }\r\n\r\n  cancelLoginPopup = () => {\r\n    this.setState({ showModalSignin: false })\r\n  }\r\n\r\n  confirmPurchase = () => {\r\n    this.ExecutePurchase();\r\n    this.props.onSetReceipt(this.state.eventDate);\r\n    this.togglePaymentButton(false, true)\r\n  }\r\n  ExecutePurchase = () => {\r\n    let userId = firebase.auth().currentUser.uid;\r\n    this.updateJackpot(this.props.totalPrice);\r\n    let userRef = firebase.database().ref(\"users\").child(userId);\r\n    userRef.child('funds').transaction((funds) => {\r\n      this.props.onSetFunds(funds - this.props.totalPrice)\r\n      return funds - this.props.totalPrice\r\n    });\r\n    userRef.off();\r\n  }\r\n  updateJackpot = (totalPrice) => {\r\n    firebase.database().ref(\"jackpots\").child(dateInYYYYMMDD(this.props.gameDate)).child(\"jackpot\").transaction(Jackpots => {\r\n      return Jackpots + (totalPrice / 2);\r\n    })\r\n  }\r\n  render() {\r\n    return (this.props.loading ? (\r\n      // this.state.isGamesAvailable? \r\n    <div className={classes.Board}>\r\n      <div className={classes.BoardLeft}>\r\n        <div className={classes.TopBoard} >\r\n          <TopBoard\r\n            isStarted={this.props.isStarted}\r\n            clicked={this.props.onEmptyEditingISlip}\r\n            generateSlip={this.props.ongenerateSlip}\r\n            editIndex={this.props.editIndex}\r\n            basePrice={this.props.basePrice}\r\n          />\r\n        </div>\r\n        <div className={classes.PlayRow}>\r\n          <PlayRow\r\n            loading={this.props.loading}\r\n            fetchPredictionsAll={this.props.onFetchPredictionsAll}\r\n            predictions={this.props.predictions}\r\n            toggleSelectedTile={this.props.ontoggleSelectedTile}\r\n            slips={this.props.slips}\r\n            basePrice={this.props.basePrice}\r\n            checkPurchasable={this.props.onIsPurchasing}\r\n            setPurchaseAll={this.props.onSetPurchaseAll}\r\n            playingGames={this.props.playingGames}\r\n            editIndex={this.props.editIndex}\r\n            CalculateOverAllPrice={this.props.onCalculateOverAllPrice}\r\n            toggleShowHistory={this.props.onToggleShowHistory}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={classes.BoardRight}>\r\n        <div className={classes.Betslip}>\r\n          <Betslips\r\n            slips={this.props.slips}\r\n            setAdding={this.props.onSetAdding}\r\n            setRemoving={this.props.onSetRemoving}\r\n            setPurchaseAll={this.props.onSetPurchaseAll}\r\n            checkPurchasable={this.props.onCheckPurchasable}\r\n            setTotalPrice={this.props.onSetTotalPrice}\r\n            deleteAndResetAll={this.props.onDeleteAndResetAll}\r\n            addEmptySlip={this.props.onAddEmptySlip}\r\n            removeSlipSingle={this.props.onRemoveRowFromBetSlip}\r\n            purchaseAll={this.props.purchaseAll}\r\n            setEditIndex={this.props.onSetEditIndex}\r\n            addBetSlip={this.props.ononCopyBetslip}\r\n            editIndex={this.props.editIndex}\r\n            funds={this.state.funds}\r\n            totalPrice={this.props.totalPrice}\r\n            basePrice={this.props.basePrice}\r\n          />\r\n        </div>\r\n        <div className={classes.Payment} >\r\n          {(this.props.isPaying || this.props.isPaid) ?\r\n            <Payment totalPrice={this.props.totalPrice} toggleshowShowReceipt={this.props.onToggleIsShowReceipt}\r\n              isPaid={this.props.isPaid} closePayment={this.togglePaymentButton} isShowReceipt={this.props.isShowReceipt}\r\n              gamesCount={this.props.slips.length} setIsPaying={this.props.onSetIsPaying}\r\n              receipts={this.props.receipts}\r\n            />\r\n            : null}\r\n        </div>\r\n        <div className={classes.ButtonsAndReceipt}>\r\n          {(!this.props.isPaying && !this.props.isPaid) ?\r\n            <div>\r\n              <div className={classes.PayButtons}>\r\n                <Button\r\n                  disabled={this.props.totalPrice <= 0 || (this.props.isLoggedIn && this.state.funds < this.props.totalPrice)}\r\n                  variant=\"success\"\r\n                  className={classes.PayButton}\r\n                  onClick={() => this.togglePaymentButton(true, false)}\r\n\r\n                >\r\n                  PAY\r\n                  {\" \"}\r\n\r\n                  {\"â‚¦\" + addCommaToAmounts(this.props.totalPrice.toString(10))}\r\n\r\n                </Button>\r\n                {(this.state.funds < this.props.totalPrice && this.props.isLoggedIn) ? <div>\r\n                  <div style={{\r\n                    color: 'red', textAlign: 'center', background:\r\n                      'grey', padding: '10px 0', marginBottom: '10px'\r\n                  }}>Sorry, you do not have enough funds to make the purchase</div>\r\n                  <div><Button className={classes.TransferButton}\r\n                    onClick={() => (this.props.history.push(\"/transfers\"))}> <ArrowRight style={{ fontWeight: 'bolder' }} size=\"20\" /> GO TO FUNDS TRANSFER</Button></div>\r\n                </div> : null}\r\n                <Modal show={this.state.showModalSignin} modalClosed={this.cancelLoginPopup}>\r\n                  <LoginModal setLoggedInUser={this.props.onSetLoggedInUser}\r\n                    setIsPaying={this.props.onSetIsPaying} setIsLoggedIn={this.props.onSetIsLoggedIn}\r\n                    setIsPaid={this.props.onSetIsPaid} cancelLoginPopup={this.cancelLoginPopup}\r\n                  />\r\n                </Modal>\r\n              </div>\r\n            </div>\r\n\r\n            : this.props.isPaying ?\r\n              <div> <Button\r\n                disabled={!this.props.purchaseAll}\r\n                variant=\"success\"\r\n                onClick={this.confirmPurchase}\r\n                className={classes.ConfrimePayments}\r\n              >\r\n                CONFIRM {\" \"}\r\n                {this.props.purchaseAll ? \"â‚¦\" + addCommaToAmounts(this.props.totalPrice.toString(10)) : \"â‚¦0\"}\r\n              </Button>\r\n\r\n              </div>\r\n              : this.props.isShowReceipt ?\r\n                <div className={classes.Receipts}>\r\n                  <Receipts receipts={this.props.receipts}\r\n                    basePrice={this.props.basePrice} gameDate={this.props.gameDate} />\r\n                </div>\r\n                : null}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n    // : <div style={{background: 'skyblue', paddingLeft: '10vw'}}>Sorry there are no games available for this week</div>\r\n    )\r\n      : <div><Spinner /></div>\r\n\r\n    );\r\n  }\r\n}\r\nconst mapstateToProps = (state) => {\r\n  return {\r\n    hourToNextDay: state.config.hourToNextDay,\r\n    isFACupNextWeek: state.config.isFACupNextWeek,\r\n    daysOffset: state.config.daysOffset,\r\n    kickOffTime: state.config.kickOffTime,\r\n\r\n    gameDate: state.board.gameDate,\r\n    evaluationDate: state.board.evaluationDate,\r\n    gameDateRaw: state.board.gameDateRaw,\r\n    loading: state.board.loading,\r\n    showFunds: state.board.showFunds,\r\n    isShowReceipt: state.board.isShowReceipt,\r\n    receipts: state.board.receipts,\r\n    basePrice: state.config.basePrice,\r\n    slips: state.board.slips,\r\n    playingGames: state.board.playingGames,\r\n    totalPrice: state.board.totalPrice,\r\n    editIndex: state.board.editIndex,\r\n    purchaseAll: state.board.purchaseAll,\r\n    isStarted: state.board.isStarted,\r\n    isPaying: state.board.isPaying,\r\n    isPaid: state.board.isPaid,\r\n    predictions: state.pred.predictions,\r\n\r\n    isLoggedIn: state.login.isLoggedIn,\r\n    user: state.login.user,\r\n\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSetFunds: (funds) => dispatch(actions.setFunds(funds)),\r\n    onSetBoard: (basePrice) =>\r\n      dispatch(actions.setBoard(basePrice)),\r\n    onResetReduxBoard: () => dispatch(actions.resetReduxBoard()),\r\n    // onToggleShowFunds: () => dispatch(actions.toggleShowFunds()),\r\n    onToggleIsShowReceipt: () => dispatch(actions.toggleIsShowReceipt()),\r\n    onSetReceipt: () => dispatch(actions.setReceipt()),\r\n    ontoggleSelectedTile: (slipIndex, gameIndex, sideIndex, side) =>\r\n      dispatch(\r\n        actions.toggleSelectedTile(slipIndex, gameIndex, sideIndex, side)\r\n      ),\r\n    ononCopyBetslip: (postion) => dispatch(actions.copyBetslip(postion)),\r\n    onRemoveRowFromBetSlip: (deleteId) =>\r\n      dispatch(actions.removeRowFromBetSlip(deleteId)),\r\n    onIsPurchasing: (index) => dispatch(actions.checkPurchasable(index)),\r\n    onSetAdding: (slipIndex, isAdded) =>\r\n      dispatch(actions.setAdding(slipIndex, isAdded)),\r\n    onSetRemoving: (slipIndex, isRemoved) =>\r\n      dispatch(actions.setRemoving(slipIndex, isRemoved)),\r\n    onSetEditIndex: (index) => dispatch(actions.setEditIndex(index)),\r\n    onCheckPurchasable: (index) => dispatch(actions.checkPurchasable(index)),\r\n    onSetPurchaseAll: () => dispatch(actions.setPurchaseAll()),\r\n    onSetTotalPrice: () =>\r\n      dispatch(actions.calculateGrandTtoalPriceOfAllSlips()),\r\n    onDeleteAndResetAll: () => dispatch(actions.deleteAndResetAll()),\r\n    onAddEmptySlip: (basePrice) => dispatch(actions.addEmptySlip(basePrice)),\r\n    onEmptyEditingISlip: () => dispatch(actions.EmptyEditingISlip()),\r\n    onCalculateOverAllPrice: (slip, game, side, basePrice) =>\r\n      dispatch(actions.calculateOverAllPrice(slip, game, side, basePrice)),\r\n    ongenerateSlip: (amount, slipIndex, basePrice) =>\r\n      dispatch(actions.generateSlip(amount, slipIndex, basePrice)),\r\n    onToggleShowHistory: (gameIndex) =>\r\n      dispatch(actions.toggleShowHistory(gameIndex)),\r\n    onSetIsPaying: (isPaying) =>\r\n      dispatch(actions.setIsPaying(isPaying)),\r\n    onSetIsPaid: (isPaid) =>\r\n      dispatch(actions.setIsPaid(isPaid)),\r\n\r\n    onFetchPredictionsAll: (FixturesList, gameIndex) =>\r\n      dispatch(actions.fetchPredictionsAll(FixturesList, gameIndex)),\r\n    onSetIsLoggedIn: (value) => dispatch(actions.setIsLoggedIn(value)),\r\n    onSetLoggedInUser: (username, password) => dispatch(actions.setLoggedInUser(username, password)),\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapstateToProps, mapDispatchToProps)(WithErrorHandler(Board, axios));\r\n"]},"metadata":{},"sourceType":"module"}