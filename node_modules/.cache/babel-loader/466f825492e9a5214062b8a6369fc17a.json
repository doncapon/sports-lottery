{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from \"react-redux\";\nimport thunk from 'redux-thunk';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport logger from 'redux-logger';\nimport boardReducer from \"./store/reducers/board\";\nimport predictionReducer from \"./store/reducers/prediction\";\nimport loginReducer from \"./store/reducers/login\";\nimport configReducer from \"./store/reducers/config\";\nimport bankReducer from \"./store/reducers/banks\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nimport { PersistGate } from 'redux-persist/es/integration/react';\nconst composeEnhancers = process.env.NODE_ENV === \"development\" ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['config']\n};\nconst rootReducer = combineReducers({\n  board: boardReducer,\n  pred: predictionReducer,\n  config: configReducer,\n  login: loginReducer,\n  banks: bankReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nlet store = createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk, logger)));\nlet persistor = persistStore(store);\n\nconst app = /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(PersistGate, {\n      loading: null,\n      persistor: persistor,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 3\n}, this);\n\nReactDOM.render(app, document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","BrowserRouter","Provider","thunk","createStore","applyMiddleware","compose","combineReducers","logger","boardReducer","predictionReducer","loginReducer","configReducer","bankReducer","persistStore","persistReducer","storage","PersistGate","composeEnhancers","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","persistConfig","key","blacklist","rootReducer","board","pred","config","login","banks","persistedReducer","store","persistor","app","render","document","getElementById"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,sCAAP;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SACEC,WADF,EACeC,eADf,EACgCC,OADhC,EAEEC,eAFF,QAGO,OAHP;AAIA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAChD,SAASC,WAAT,QAA4B,oCAA5B;AAEA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyCC,MAAM,CAACC,oCAAhD,GAAuF,QAAQjB,OAAxH;AACA,MAAMkB,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBT,EAAAA,OAFoB;AAGpBU,EAAAA,SAAS,EAAE,CAAC,QAAD;AAHS,CAAtB;AAMA,MAAMC,WAAW,GAAGpB,eAAe,CAAC;AAClCqB,EAAAA,KAAK,EAAEnB,YAD2B;AAElCoB,EAAAA,IAAI,EAAEnB,iBAF4B;AAGlCoB,EAAAA,MAAM,EAAElB,aAH0B;AAIlCmB,EAAAA,KAAK,EAAEpB,YAJ2B;AAKlCqB,EAAAA,KAAK,EAAEnB;AAL2B,CAAD,CAAnC;AAQA,MAAMoB,gBAAgB,GAAGlB,cAAc,CAACS,aAAD,EAAgBG,WAAhB,CAAvC;AAGA,IAAIO,KAAK,GAAG9B,WAAW,CAAC6B,gBAAD,EAAmBf,gBAAgB,CACxDb,eAAe,CAACF,KAAD,EAAQK,MAAR,CADyC,CAAnC,CAAvB;AAEA,IAAI2B,SAAS,GAAGrB,YAAY,CAACoB,KAAD,CAA5B;;AAEA,MAAME,GAAG,gBACP,QAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA,yBACE,QAAC,aAAD;AAAA,2BACE,QAAC,WAAD;AAAa,MAAA,OAAO,EAAE,IAAtB;AACE,MAAA,SAAS,EAAEC,SADb;AAAA,6BAEI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;AAUArC,QAAQ,CAACuC,MAAT,CACED,GADF,EAGEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHF,E,CAMA;AACA;AACA;;AACAvC,eAAe","sourcesContent":["\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {\r\n  createStore, applyMiddleware, compose,\r\n  combineReducers\r\n} from 'redux';\r\nimport logger from 'redux-logger';\r\nimport boardReducer from \"./store/reducers/board\";\r\nimport predictionReducer from \"./store/reducers/prediction\";\r\nimport loginReducer from \"./store/reducers/login\";\r\nimport configReducer from \"./store/reducers/config\";\r\nimport bankReducer from \"./store/reducers/banks\";\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport { PersistGate } from 'redux-persist/es/integration/react';\r\n\r\nconst composeEnhancers = process.env.NODE_ENV === \"development\" ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['config']\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  board: boardReducer,\r\n  pred: predictionReducer,\r\n  config: configReducer,\r\n  login: loginReducer,\r\n  banks: bankReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\n\r\nlet store = createStore(persistedReducer, composeEnhancers(\r\n  applyMiddleware(thunk, logger)));\r\nlet persistor = persistStore(store);\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <PersistGate loading={null}\r\n        persistor={persistor}>\r\n          <App />\r\n      </PersistGate>\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\nReactDOM.render(\r\n  app\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"]},"metadata":{},"sourceType":"module"}