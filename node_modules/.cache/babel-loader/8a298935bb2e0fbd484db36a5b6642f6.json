{"ast":null,"code":"import produce from 'immer';\nimport * as actionTypes from '../actions/actionTypes';\nconst initialState = {\n  isFACup: false,\n  isFACupNextWeek: true,\n  daysOffset: 0,\n  hourToNextDay: 9,\n  //24 - kick-off time\n  kickOffTime: '15:00:00+00:00',\n  eventDate: null,\n  thirteenPercent: 0.5,\n  twelvePercent: 0.25,\n  elevenPercent: .15,\n  tenPercent: 0.1,\n  basePrice: 20,\n  insertResult: true,\n  isBoardSet: false,\n  numberofResultsDisplayed: 39,\n  currentResults: [],\n  loading: false\n};\n\nconst fetchWeeklyResults = (state, action) => {\n  return produce(state, draft => {\n    draft.currentResults = action.payload;\n  });\n};\n\nconst stopIintializeResults = (state, action) => {\n  return produce(state, draft => {\n    draft.loading = true;\n  });\n};\n\nconst setEventDate = (state, action) => {\n  return produce(state, draft => {\n    draft.eventDate = action.eventDate;\n  });\n};\n\nconst setIsBoardSet = (state, action) => {\n  return produce(state, draft => {\n    draft.isBoardSet = action.isBoardSet;\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_IS_BOARD_SET:\n      return setIsBoardSet(state, action);\n\n    case actionTypes.FETCH_RESULTS:\n      return fetchWeeklyResults(state, action);\n\n    case actionTypes.STOP_RESULT_INITIALIZE:\n      return stopIintializeResults(state, action);\n\n    case actionTypes.SET_EVENTDATE:\n      return setEventDate(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/store/reducers/config.js"],"names":["produce","actionTypes","initialState","isFACup","isFACupNextWeek","daysOffset","hourToNextDay","kickOffTime","eventDate","thirteenPercent","twelvePercent","elevenPercent","tenPercent","basePrice","insertResult","isBoardSet","numberofResultsDisplayed","currentResults","loading","fetchWeeklyResults","state","action","draft","payload","stopIintializeResults","setEventDate","setIsBoardSet","reducer","type","SET_IS_BOARD_SET","FETCH_RESULTS","STOP_RESULT_INITIALIZE","SET_EVENTDATE"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,OAAO,KAAKC,WAAZ,MAA6B,wBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,eAAe,EAAE,IAFA;AAGjBC,EAAAA,UAAU,EAAE,CAHK;AAIjBC,EAAAA,aAAa,EAAE,CAJE;AAIG;AACpBC,EAAAA,WAAW,EAAE,gBALI;AAMjBC,EAAAA,SAAS,EAAE,IANM;AAQjBC,EAAAA,eAAe,EAAE,GARA;AASjBC,EAAAA,aAAa,EAAE,IATE;AAUjBC,EAAAA,aAAa,EAAE,GAVE;AAWjBC,EAAAA,UAAU,EAAE,GAXK;AAajBC,EAAAA,SAAS,EAAE,EAbM;AAcjBC,EAAAA,YAAY,EAAE,IAdG;AAejBC,EAAAA,UAAU,EAAE,KAfK;AAiBjBC,EAAAA,wBAAwB,EAAE,EAjBT;AAkBjBC,EAAAA,cAAc,EAAE,EAlBC;AAmBjBC,EAAAA,OAAO,EAAE;AAnBQ,CAArB;;AAuBA,MAAMC,kBAAkB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAOrB,OAAO,CAACoB,KAAD,EAAQE,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACL,cAAN,GAAuBI,MAAM,CAACE,OAA9B;AACH,GAFa,CAAd;AAGH,CAJD;;AAKA,MAAMC,qBAAqB,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC7C,SAAOrB,OAAO,CAACoB,KAAD,EAAQE,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,GAFa,CAAd;AAGH,CAJD;;AAMA,MAAMO,YAAY,GAAG,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACpC,SAAOrB,OAAO,CAACoB,KAAD,EAAQE,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACd,SAAN,GAAkBa,MAAM,CAACb,SAAzB;AACH,GAFa,CAAd;AAGH,CAJD;;AAKA,MAAMkB,aAAa,GAAG,CAACN,KAAD,EAAQC,MAAR,KAAmB;AACrC,SAAOrB,OAAO,CAACoB,KAAD,EAAQE,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACP,UAAN,GAAmBM,MAAM,CAACN,UAA1B;AACH,GAFa,CAAd;AAGH,CAJD;;AAKA,MAAMY,OAAO,GAAG,CAACP,KAAK,GAAGlB,YAAT,EAAuBmB,MAAvB,KAAkC;AAC9C,UAAQA,MAAM,CAACO,IAAf;AACI,SAAK3B,WAAW,CAAC4B,gBAAjB;AACI,aAAOH,aAAa,CAACN,KAAD,EAAQC,MAAR,CAApB;;AACJ,SAAKpB,WAAW,CAAC6B,aAAjB;AACI,aAAOX,kBAAkB,CAACC,KAAD,EAAQC,MAAR,CAAzB;;AACJ,SAAKpB,WAAW,CAAC8B,sBAAjB;AACI,aAAOP,qBAAqB,CAACJ,KAAD,EAAQC,MAAR,CAA5B;;AACJ,SAAKpB,WAAW,CAAC+B,aAAjB;AACI,aAAOP,YAAY,CAACL,KAAD,EAAQC,MAAR,CAAnB;;AACJ;AACI,aAAOD,KAAP;AAVR;AAYH,CAbD;;AAgBA,eAAeO,OAAf","sourcesContent":["import produce from 'immer';\r\nimport * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isFACup: false,\r\n    isFACupNextWeek: true,\r\n    daysOffset: 0,\r\n    hourToNextDay: 9,   //24 - kick-off time\r\n    kickOffTime: '15:00:00+00:00',\r\n    eventDate: null,\r\n\r\n    thirteenPercent: 0.5,\r\n    twelvePercent: 0.25,\r\n    elevenPercent: .15,\r\n    tenPercent: 0.1,\r\n\r\n    basePrice: 20,\r\n    insertResult: true,\r\n    isBoardSet: false,\r\n\r\n    numberofResultsDisplayed: 39,\r\n    currentResults: [],\r\n    loading: false\r\n\r\n}\r\n\r\nconst fetchWeeklyResults = (state, action) => {\r\n    return produce(state, draft => {\r\n        draft.currentResults = action.payload;\r\n    });\r\n}\r\nconst stopIintializeResults = (state, action) => {\r\n    return produce(state, draft => {\r\n        draft.loading = true;\r\n    });\r\n}\r\n\r\nconst setEventDate = (state, action) => {\r\n    return produce(state, draft => {\r\n        draft.eventDate = action.eventDate\r\n    });\r\n}\r\nconst setIsBoardSet = (state, action) => {\r\n    return produce(state, draft => {\r\n        draft.isBoardSet = action.isBoardSet;\r\n    });\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.SET_IS_BOARD_SET:\r\n            return setIsBoardSet(state, action);\r\n        case actionTypes.FETCH_RESULTS:\r\n            return fetchWeeklyResults(state, action); \r\n        case actionTypes.STOP_RESULT_INITIALIZE:\r\n            return stopIintializeResults(state, action);\r\n        case actionTypes.SET_EVENTDATE:\r\n            return setEventDate(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport default reducer;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}