{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\components\\\\UI\\\\CountDown\\\\CountDown.js\";\nimport React from \"react\";\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\nimport Auxy from \"../../../hoc/Auxy/Auxy\";\nimport classes from \"./CountDown.module.css\";\nimport pin from '../../../assets/pin.png';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport moment from 'moment';\nconst minuteSeconds = 60;\nconst hourSeconds = 3600;\nconst daySeconds = 86400;\nconst timerProps = {\n  isPlaying: true,\n  size: 100,\n  strokeWidth: 3\n};\n\nconst renderTime = (dimension, time) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.time,\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dimensions,\n      children: dimension\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nconst getTimeSeconds = time => minuteSeconds - time | 0;\n\nconst getTimeMinutes = time => time % hourSeconds / minuteSeconds | 0;\n\nconst getTimeHours = time => time % daySeconds / hourSeconds | 0;\n\nconst getTimeDays = time => time / daySeconds | 0;\n\nconst CountDown = props => {\n  let endDate1 = moment(props.gamedate);\n  let diff = endDate1 - Date.now();\n  const remainingTime = diff / 1000;\n  const days = Math.ceil(diff / daySeconds);\n  const daysDuration = days * daySeconds;\n  return /*#__PURE__*/_jsxDEV(Auxy, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        margin: '0 auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: \"center\",\n          fontWeight: '700'\n        },\n        className: \"mt-4\",\n        children: \"Time Left To Play\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          width: '90%',\n          margin: '50px auto'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          lg: 3,\n          md: 3,\n          sm: 12,\n          style: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(CountdownCircleTimer, {\n            style: {\n              position: 'relative'\n            },\n            ...timerProps,\n            className: classes.circle,\n            colors: [[\"#000\"]],\n            duration: daysDuration,\n            initialRemainingTime: remainingTime,\n            children: ({\n              elapsedTime\n            }) => renderTime(\"days\", getTimeDays(daysDuration - elapsedTime))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.pin,\n            src: pin,\n            width: \"30px\",\n            style: {\n              position: 'absolute',\n              right: '70px',\n              top: '-5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 3,\n          md: 3,\n          sm: 12,\n          style: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(CountdownCircleTimer, { ...timerProps,\n            colors: [[\"#000\"]],\n            duration: daySeconds,\n            initialRemainingTime: remainingTime % daySeconds,\n            onComplete: totalElapsedTime => [diff - totalElapsedTime > hourSeconds],\n            children: ({\n              elapsedTime\n            }) => renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.pin,\n            src: pin,\n            width: \"30px\",\n            style: {\n              position: 'absolute',\n              right: '70px',\n              top: '-5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 3,\n          md: 3,\n          sm: 12,\n          style: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(CountdownCircleTimer, { ...timerProps,\n            colors: [[\"#000\"]],\n            duration: hourSeconds,\n            initialRemainingTime: remainingTime % hourSeconds,\n            onComplete: totalElapsedTime => [diff - totalElapsedTime > minuteSeconds],\n            children: ({\n              elapsedTime\n            }) => renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.pin,\n            src: pin,\n            width: \"30px\",\n            style: {\n              position: 'absolute',\n              right: '70px',\n              top: '-5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          lg: 3,\n          md: 3,\n          sm: 12,\n          style: {\n            display: 'flex',\n            justifyContent: 'center'\n          },\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(CountdownCircleTimer, { ...timerProps,\n            colors: [[\"#000\"]],\n            duration: minuteSeconds,\n            initialRemainingTime: remainingTime % minuteSeconds,\n            onComplete: totalElapsedTime => [diff - totalElapsedTime > 0],\n            children: ({\n              elapsedTime\n            }) => renderTime(\"seconds\", getTimeSeconds(elapsedTime))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.pin,\n            src: pin,\n            width: \"30px\",\n            style: {\n              position: 'absolute',\n              right: '70px',\n              top: '-5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CountDown;\nexport default CountDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountDown\");","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/components/UI/CountDown/CountDown.js"],"names":["React","CountdownCircleTimer","Auxy","classes","pin","Container","Row","Col","moment","minuteSeconds","hourSeconds","daySeconds","timerProps","isPlaying","size","strokeWidth","renderTime","dimension","time","dimensions","getTimeSeconds","getTimeMinutes","getTimeHours","getTimeDays","CountDown","props","endDate1","gamedate","diff","Date","now","remainingTime","days","Math","ceil","daysDuration","margin","textAlign","fontWeight","display","justifyContent","width","position","circle","elapsedTime","right","top","totalElapsedTime"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport Auxy from \"../../../hoc/Auxy/Auxy\";\r\nimport classes from \"./CountDown.module.css\";\r\nimport pin from '../../../assets/pin.png'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nimport moment from 'moment';\r\nconst minuteSeconds = 60;\r\nconst hourSeconds = 3600;\r\nconst daySeconds = 86400;\r\n\r\nconst timerProps = {\r\n  isPlaying: true,\r\n  size: 100,\r\n  strokeWidth: 3,\r\n};\r\nconst renderTime = (dimension, time) => {\r\n  return (\r\n    <div className=\"time-wrapper\">\r\n      <div className={classes.time}>{time}</div>\r\n      <div className={classes.dimensions}>{dimension}</div>\r\n    </div>\r\n  );\r\n};\r\nconst getTimeSeconds = (time) => (minuteSeconds - time) | 0;\r\nconst getTimeMinutes = (time) => ((time % hourSeconds) / minuteSeconds) | 0;\r\nconst getTimeHours = (time) => ((time % daySeconds) / hourSeconds) | 0;\r\nconst getTimeDays = (time) => (time / daySeconds) | 0;\r\nconst CountDown = (props) => {\r\n  let endDate1 = moment(props.gamedate);\r\n\r\n  let diff = endDate1 - Date.now();\r\n\r\n  const remainingTime = diff / 1000;\r\n  const days = Math.ceil(diff / daySeconds);\r\n  const daysDuration = days * daySeconds;\r\n\r\n  return (\r\n    <Auxy>\r\n      <Container style={{ margin: '0 auto' }}>\r\n        <h2 style={{ textAlign: \"center\", fontWeight: '700' }} className='mt-4'>Time Left To Play</h2>\r\n        <Row style={{ display: 'flex', justifyContent: 'center', width: '90%', margin: '50px auto' }}>\r\n          <Col lg={3} md={3} sm={12}  style={{display: 'flex', justifyContent: 'center'}} className='mb-2'>\r\n            <CountdownCircleTimer\r\n            style={{position: 'relative'}}\r\n              {...timerProps}\r\n              className={classes.circle}\r\n              colors={[[\"#000\"]]}\r\n              duration={daysDuration}\r\n              initialRemainingTime={remainingTime}\r\n            >\r\n              {({ elapsedTime }) =>\r\n                renderTime(\"days\", getTimeDays(daysDuration - elapsedTime))\r\n              }\r\n            </CountdownCircleTimer>\r\n            <img className={classes.pin} src={pin} width='30px' style={{position: 'absolute', right: '70px', top: '-5px'}}/>\r\n          </Col>\r\n          <Col lg={3} md={3} sm={12} style={{display: 'flex', justifyContent: 'center'}} className='mb-2'>\r\n            <CountdownCircleTimer\r\n             \r\n              {...timerProps}\r\n              colors={[[\"#000\"]]}\r\n              duration={daySeconds}\r\n              initialRemainingTime={remainingTime % daySeconds}\r\n              onComplete={(totalElapsedTime) => [\r\n                diff - totalElapsedTime > hourSeconds,\r\n              ]}\r\n            >\r\n              {({ elapsedTime }) =>\r\n                renderTime(\"hours\", getTimeHours(daySeconds - elapsedTime))\r\n              }\r\n            </CountdownCircleTimer>\r\n            <img className={classes.pin} src={pin} width='30px' style={{position: 'absolute', right: '70px', top: '-5px'}}/>\r\n          </Col>\r\n          <Col lg={3} md={3} sm={12} style={{display: 'flex', justifyContent: 'center'}} className='mb-2'>\r\n            <CountdownCircleTimer\r\n              {...timerProps}\r\n              colors={[[\"#000\"]]}\r\n              duration={hourSeconds}\r\n              initialRemainingTime={remainingTime % hourSeconds}\r\n              onComplete={(totalElapsedTime) => [\r\n                diff - totalElapsedTime > minuteSeconds,\r\n              ]}\r\n            >\r\n              {({ elapsedTime }) =>\r\n                renderTime(\"minutes\", getTimeMinutes(hourSeconds - elapsedTime))\r\n              }\r\n            </CountdownCircleTimer>\r\n            <img className={classes.pin} src={pin} width='30px' style={{position: 'absolute', right: '70px', top: '-5px'}}/>\r\n          </Col>\r\n          <Col lg={3} md={3} sm={12} style={{display: 'flex', justifyContent: 'center'}} className='mb-2'>\r\n            <CountdownCircleTimer\r\n              {...timerProps}\r\n              colors={[[\"#000\"]]}\r\n              duration={minuteSeconds}\r\n              initialRemainingTime={remainingTime % minuteSeconds}\r\n              onComplete={(totalElapsedTime) => [\r\n                diff - totalElapsedTime > 0,\r\n              ]}\r\n            >\r\n              {({ elapsedTime }) =>\r\n                renderTime(\"seconds\", getTimeSeconds(elapsedTime))\r\n              }\r\n            </CountdownCircleTimer>\r\n            <img className={classes.pin} src={pin} width='30px' style={{position: 'absolute', right: '70px', top: '-5px'}}/>\r\n          </Col>\r\n        </Row>\r\n      </Container >\r\n    </Auxy >\r\n  );\r\n};\r\nexport default CountDown;\r\n"]},"metadata":{},"sourceType":"module"}