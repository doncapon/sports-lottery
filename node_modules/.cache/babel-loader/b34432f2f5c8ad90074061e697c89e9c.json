{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\components\\\\gameHistory\\\\userPlayHistory\\\\UserPlayHistory.js\";\nimport classes from \"./UserPlayHistory.module.css\";\nimport React, { Component } from \"react\";\nimport moment from 'moment';\nimport Jackpot from \"../jackpotByUser/jackpotByUser\";\nimport * as actions from '../../../store/actions';\nimport { connect } from 'react-redux';\nimport { CaretDownFill, CaretUpFill } from \"react-bootstrap-icons\";\nimport Button from 'react-bootstrap/Button';\nimport firebase from '../../../config/firebase/firebase';\nimport _ from \"lodash\";\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport { addCommaToAmounts } from '../../../shared/utility';\n\nclass UserPlayHistory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setMatchResults = matchesPlayed => {\n      let matchResults = [];\n      matchesPlayed.forEach((matches, i) => {\n        matches[0].games.forEach((match, k) => {\n          let matchResRef = firebase.database().ref(\"match-results\").child(match.fixture_id);\n          matchResRef.once(\"value\", snapshot => {\n            let data = Object.assign({}, snapshot.val());\n            matchResults.splice(matchResults.length, matchResults.length + 1, data);\n          });\n        });\n      });\n      this.setState({\n        matchResults: matchResults\n      });\n    };\n\n    this.setWinAmount = () => {\n      if (this.state.winAmount.length <= 0) {\n        let matchesPlayed = [...this.state.matchesPlayed];\n        let matchResults = [...this.state.matchResults];\n        let winAmount = [];\n\n        if (this.state.winAmount.length <= 0 && matchResults.length > 0) {\n          for (let i = 0; i < matchesPlayed.length; i++) {\n            let matchRes = matchResults.filter(res => res.fixtureId === matchesPlayed[i][0].fixture_id)[0];\n            winAmount.push(this.calculateWins(matchesPlayed[i][0], matchRes).win);\n          }\n\n          this.setState({\n            winAmount: winAmount\n          });\n        }\n      }\n    };\n\n    this.rseetShowHistory = () => {\n      let smallShow = [...this.state.showHistory];\n      let newHistory = [];\n      smallShow.forEach(history => {\n        history = false;\n        newHistory.push(history);\n      });\n      this.setState({\n        showHistory: newHistory\n      });\n    };\n\n    this.toggleShowHistory = index => {\n      let smallShow = [...this.state.showHistory];\n      smallShow[index] = !smallShow[index];\n      this.setState({\n        showHistory: smallShow\n      });\n    };\n\n    this.translateResult = (goalHome, goalAway, endTime) => {\n      if (Date.now() > endTime) {\n        if (goalHome !== undefined && goalAway !== undefined) {\n          if (goalHome > goalAway) {\n            return \"H\";\n          } else if (goalHome < goalAway) {\n            return \"A\";\n          } else {\n            return \"D\";\n          }\n        } else {\n          return \"free pass\";\n        }\n      } else {\n        return \"\";\n      }\n    };\n\n    this.determineSelection = (choice, position) => {\n      if (choice) {\n        if (position === 0) {\n          return \"H\";\n        } else if (position === 1) {\n          return \"D\";\n        } else {\n          return \"A\";\n        }\n      } else {\n        return \"—\";\n      }\n    };\n\n    this.calculateWins = (match, matchHits) => {\n      let win = \"No wins\";\n      let searchTerm = \"\";\n\n      if (matchHits === 10) {\n        searchTerm = \"ten\";\n      } else if (matchHits === 11) {\n        searchTerm = \"eleven\";\n      } else if (matchHits === 12) {\n        searchTerm = \"twelve\";\n      } else if (matchHits === 13) {\n        searchTerm = \"thirteen\";\n      } else {\n        if (match.isEvaluated) return \"No wins\";else return \"Not evaluated yet\";\n      }\n\n      let potRef = firebase.database().ref(\"jackpot-win\").child(match.evaluationDate).child(searchTerm);\n      potRef.on(\"value\", snapshot => {\n        let data = snapshot.val();\n        win = \"₦\" + addCommaToAmounts(\"\" + data);\n      });\n      return win;\n    };\n\n    this.submitHandler = e => {\n      let value = e.target.value;\n\n      if (value !== \"select\") {\n        let matchesPlayed = [...this.state.matchesPlayed];\n        let matchesTransformed = matchesPlayed.sort((a, b) => {\n          return a[0][value] < b[0][value] ? 1 : -1;\n        });\n        this.setState({\n          matchesPlayed: matchesTransformed\n        });\n      }\n    };\n\n    this.handleWinsOnly = () => {\n      this.rseetShowHistory();\n      let matchesPlayed = [...this.state.matchesPlayed];\n      let matchFiltered = matchesPlayed.filter(match => match[0].hits >= 10);\n      this.setState({\n        matchesPlayed: matchFiltered\n      });\n    };\n\n    this.handleAll = () => {\n      this.rseetShowHistory();\n      firebase.auth().onAuthStateChanged(user => {\n        if (user && user.emailVerified) {\n          let playedRef = firebase.database().ref(\"game-history\").child(user.uid);\n          playedRef.on(\"value\", snapshot => {\n            let data = snapshot.val();\n\n            let grouped = _.groupBy(data, 'gameNumber');\n\n            let groupedArray = Object.keys(grouped).map(keys => grouped[keys]);\n            this.setState({\n              matchesPlayed: groupedArray\n            });\n          });\n        }\n      });\n    };\n\n    this.getMatchResults = (matchResults, match) => {\n      let finalMatches = [];\n\n      for (let i = 0; i < match.games.length; i++) {\n        let res = matchResults.filter(res => res.fixtureId === match.games[i].fixture_id);\n        finalMatches.splice(finalMatches.length, finalMatches.length + 1, res);\n      }\n\n      return finalMatches;\n    };\n\n    this.state = {\n      matchesPlayed: [],\n      matchResults: [],\n      winAmount: [],\n      loading: false,\n      showHistory: []\n    };\n    this.setMatchResults = this.setMatchResults.bind(this);\n  }\n\n  componentWillUnmount() {\n    firebase.database().ref(\"game-history\").off();\n    firebase.database().ref(\"match-results\").off();\n    firebase.database().ref(\"jackpot-win\").off();\n    this.setState({\n      matchResults: []\n    });\n    this.setState({\n      matchesPlayed: []\n    });\n    this.setState({\n      loading: false\n    });\n  }\n\n  componentDidMount() {\n    // window.location.reload();\n    if (!this.state.loading) {\n      firebase.auth().onAuthStateChanged(user => {\n        if (user && user.emailVerified) {\n          let playedRef = firebase.database().ref(\"game-history\").child(user.uid);\n          playedRef.once(\"value\").then(snapshot => {\n            let data = snapshot.val();\n\n            let grouped = _.groupBy(data, 'gameNumber');\n\n            let groupedArray = Object.keys(grouped).map(keys => grouped[keys]);\n            let myShow = [];\n            Object.keys(grouped).map(grp => myShow.push(false));\n            this.setMatchResults(groupedArray);\n            this.setState({\n              matchesPlayed: groupedArray\n            });\n            this.setState({\n              showHistory: myShow\n            });\n            this.setWinAmount();\n          });\n        } else {}\n      });\n    }\n\n    this.setState({\n      loading: true\n    });\n  }\n\n  render() {\n    if (!this.props.isLoggedIn) this.props.history.push(\"/\");\n    let matchesPlayed = [...this.state.matchesPlayed];\n    let matchResults = [...this.state.matchResults];\n    let userPlayHistoryTrannsformed = this.state.loading && matchesPlayed[0] ? matchesPlayed.sort((a, b) => a[0][\"datePlayed\"] < b[0][\"datePlayed\"] ? 1 : -1).map((match, k) => {\n      let matchRes = this.getMatchResults(matchResults, match[0]);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.userPlayHistoryAndShare,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.MainHeader,\n          onClick: () => this.toggleShowHistory(k),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.DateHead,\n            children: [\"Entry date : \", moment(match[0].datePlayed).format(\"DD.MM.YYYY\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.PriceHead,\n            children: [\"Price: \", \"₦\" + addCommaToAmounts(\"\" + match[0].slipPrice)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.DateHead1,\n            children: [\"Evaluation date : \", moment(match[0].evaluationDate).format(\"DD.MM.YYYY\")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.BtToggle,\n            size: \"sm\",\n            onClick: () => this.toggleShowHistory(k),\n            children: [!this.state.showHistory[k] ? /*#__PURE__*/_jsxDEV(CaretDownFill, {\n              className: classes.Icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 59\n            }, this) : /*#__PURE__*/_jsxDEV(CaretUpFill, {\n              className: classes.Icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 33\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this), this.state.showHistory[k] ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.ResultHead,\n          children: matchRes.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.userPlayHistory,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.ResultBody,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.BodyHeader,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.Head1,\n                  children: \"Match\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.Head,\n                  children: \"Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.Head2,\n                  children: \"Your Selections\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 239,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.BodyMain,\n                children: matchRes.map((eachRes, i) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: classes.SelectionRow,\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.Teams,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.RowNumber,\n                        children: [i + 1, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 245,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.TeamNames,\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          children: eachRes[0].homeTeam + \"  -  \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 247,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: eachRes[0].awayTeam\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 248,\n                          columnNumber: 61\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 244,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.ScoreResult,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.Score,\n                        children: eachRes[0].status === \"Match Finished\" ? eachRes[0].score : Date.now() > moment(match[0].endTime) ? \"free pass\" : \"-\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 57\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: this.translateResult(eachRes[0].homeGoals, eachRes[0].awayGoals, moment(match[0].endTime))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 253,\n                        columnNumber: 57\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.Selections,\n                      children: match[0].games[i].selections.map((select, y) => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: this.translateResult(eachRes[0].homeGoals, eachRes[0].awayGoals, moment(match[0].endTime)) === this.determineSelection(select.selected, y) ? Date.now() > moment(match[0].endTime) ? classes.Winner : null : classes.Selected,\n                        children: this.determineSelection(select.selected, y)\n                      }, y, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 257,\n                        columnNumber: 61\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 255,\n                      columnNumber: 53\n                    }, this)]\n                  }, i, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 56\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.AmountWon,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Number of hits:  \", match[0].isEvaluated ? match[0].hits : \"-\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Amount won: \", this.calculateWins(match[0], match[0].hits)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.JackPotShare,\n              children: match[0].isEvaluated ? /*#__PURE__*/_jsxDEV(Jackpot, {\n                basePrice: this.props.basePrice,\n                gameDay: moment(match[0].evaluationDate).format(\"YYYY-MM-DD\"),\n                gamesLength: match[0].games.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 45\n              }, this) : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.Footer,\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Game Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.FooterPrices,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.FooterPriceInner,\n                  children: [\"Price: \", \"₦\" + addCommaToAmounts(\"\" + match[0].slipPrice)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [\"Row Price: \", \"₦\" + addCommaToAmounts(\"\" + match[0].basePrice)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Played on : \", moment(match[0].datePlayed).format(\"DD.MM.YYYY HH:mm\")]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Game Id: \", match[0].gameNumber]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 55\n          }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this) : null]\n      }, k, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 24\n      }, this);\n    }) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 15\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.userPlayHistoryWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.OrderByHeader,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.WinsOnly,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.View,\n              children: \"VIEW\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.Buttons,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: classes.AllButton,\n                type: \"button\",\n                value: \"All\",\n                onClick: this.handleAll\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 59\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: classes.WinsButton,\n                type: \"button\",\n                value: \"Wins only\",\n                onClick: this.handleWinsOnly\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.OrderByWrap,\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              className: classes.OrderBy,\n              onChange: this.submitHandler,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"select\",\n                children: \"ORDER BY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"datePlayed\",\n                children: \"Entry date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"evaluationDate\",\n                children: \"Evaluation date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this), userPlayHistoryTrannsformed]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapstateToprops = state => {\n  return {\n    //board\n    gamesLength: state.board.gamesLength,\n    //Config\n    basePrice: state.config.basePrice,\n    loading: state.config.loading,\n    daysuserPlayHistory: state.board.receipts,\n    resultsFrom: state.config.resultsFrom,\n    insertResult: state.config.insertResult,\n    //Login\n    isLoggedIn: state.login.isLoggedIn\n  };\n};\n\nconst mapDispatchToprops = dispatch => {\n  return {\n    onFetchResults: startDate => dispatch(actions.fetchResults(startDate))\n  };\n};\n\nexport default connect(mapstateToprops, mapDispatchToprops)(UserPlayHistory);","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/components/gameHistory/userPlayHistory/UserPlayHistory.js"],"names":["classes","React","Component","moment","Jackpot","actions","connect","CaretDownFill","CaretUpFill","Button","firebase","_","Spinner","addCommaToAmounts","UserPlayHistory","constructor","props","setMatchResults","matchesPlayed","matchResults","forEach","matches","i","games","match","k","matchResRef","database","ref","child","fixture_id","once","snapshot","data","Object","assign","val","splice","length","setState","setWinAmount","state","winAmount","matchRes","filter","res","fixtureId","push","calculateWins","win","rseetShowHistory","smallShow","showHistory","newHistory","history","toggleShowHistory","index","translateResult","goalHome","goalAway","endTime","Date","now","undefined","determineSelection","choice","position","matchHits","searchTerm","isEvaluated","potRef","evaluationDate","on","submitHandler","e","value","target","matchesTransformed","sort","a","b","handleWinsOnly","matchFiltered","hits","handleAll","auth","onAuthStateChanged","user","emailVerified","playedRef","uid","grouped","groupBy","groupedArray","keys","map","getMatchResults","finalMatches","loading","bind","componentWillUnmount","off","componentDidMount","then","myShow","grp","render","isLoggedIn","userPlayHistoryTrannsformed","userPlayHistoryAndShare","MainHeader","DateHead","datePlayed","format","PriceHead","slipPrice","DateHead1","BtToggle","Icon","ResultHead","userPlayHistory","ResultBody","BodyHeader","Head1","Head","Head2","BodyMain","eachRes","SelectionRow","Teams","RowNumber","TeamNames","homeTeam","awayTeam","ScoreResult","Score","status","score","homeGoals","awayGoals","Selections","selections","select","y","selected","Winner","Selected","AmountWon","JackPotShare","basePrice","Footer","FooterPrices","FooterPriceInner","gameNumber","userPlayHistoryWrapper","OrderByHeader","WinsOnly","View","Buttons","AllButton","WinsButton","OrderByWrap","OrderBy","mapstateToprops","gamesLength","board","config","daysuserPlayHistory","receipts","resultsFrom","insertResult","login","mapDispatchToprops","dispatch","onFetchResults","startDate","fetchResults"],"mappings":"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","sourcesContent":["import classes from \"./UserPlayHistory.module.css\";\r\nimport React, { Component } from \"react\";\r\nimport moment from 'moment';\r\nimport Jackpot from \"../jackpotByUser/jackpotByUser\";\r\nimport * as actions from '../../../store/actions';\r\nimport { connect } from 'react-redux';\r\nimport { CaretDownFill, CaretUpFill } from \"react-bootstrap-icons\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport firebase from '../../../config/firebase/firebase';\r\nimport _ from \"lodash\";\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport { addCommaToAmounts } from '../../../shared/utility';\r\nclass UserPlayHistory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            matchesPlayed: [],\r\n            matchResults: [],\r\n            winAmount: [],\r\n            loading: false,\r\n            showHistory: [],\r\n        }\r\n\r\n        this.setMatchResults = this.setMatchResults.bind(this);\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        firebase.database().ref(\"game-history\").off();\r\n        firebase.database().ref(\"match-results\").off();\r\n        firebase.database().ref(\"jackpot-win\").off();\r\n        this.setState({ matchResults: [] });\r\n        this.setState({ matchesPlayed: [] });\r\n        this.setState({ loading: false });\r\n    }\r\n    componentDidMount() {\r\n        // window.location.reload();\r\n        if (!this.state.loading) {\r\n            firebase.auth().onAuthStateChanged((user) => {\r\n                if (user && user.emailVerified) {\r\n                    let playedRef = firebase.database().ref(\"game-history\").child(user.uid);\r\n                    playedRef.once(\"value\")\r\n                        .then(snapshot => {\r\n                            let data = snapshot.val();\r\n                            let grouped = _.groupBy(data, 'gameNumber');\r\n                            let groupedArray = Object.keys(grouped).map(keys => grouped[keys]);\r\n\r\n                            let myShow = []\r\n                            Object.keys(grouped).map(grp =>\r\n                                myShow.push(false)\r\n                            );\r\n                            this.setMatchResults(groupedArray)\r\n                            this.setState({ matchesPlayed: groupedArray });\r\n                            this.setState({ showHistory: myShow });\r\n                            this.setWinAmount();\r\n                        });\r\n                } else {\r\n\r\n                }\r\n\r\n            })\r\n\r\n        }\r\n        this.setState({ loading: true })\r\n    }\r\n    setMatchResults = (matchesPlayed) => {\r\n\r\n        let matchResults = [];\r\n        matchesPlayed.forEach((matches, i) => {\r\n            matches[0].games.forEach((match, k) => {\r\n\r\n                let matchResRef = firebase.database().ref(\"match-results\").child(match.fixture_id);\r\n                matchResRef.once(\"value\", snapshot => {\r\n                    let data = Object.assign({}, snapshot.val());\r\n                    matchResults.splice(matchResults.length,\r\n                        matchResults.length + 1, data)\r\n                });\r\n            })\r\n        })\r\n        this.setState({ matchResults: matchResults });\r\n    }\r\n    setWinAmount = () => {\r\n\r\n        if (this.state.winAmount.length <= 0) {\r\n\r\n            let matchesPlayed = [...this.state.matchesPlayed];\r\n            let matchResults = [...this.state.matchResults];\r\n            let winAmount = [];\r\n            if (this.state.winAmount.length <= 0 && matchResults.length > 0) {\r\n                for (let i = 0; i < matchesPlayed.length; i++) {\r\n                    let matchRes = matchResults.filter(res => res.fixtureId === matchesPlayed[i][0].fixture_id)[0]\r\n                    winAmount.push(this.calculateWins(matchesPlayed[i][0], matchRes).win);\r\n                }\r\n                this.setState({ winAmount: winAmount });\r\n            }\r\n        }\r\n    }\r\n\r\n    rseetShowHistory = () => {\r\n        let smallShow = [...this.state.showHistory];\r\n        let newHistory = []\r\n        smallShow.forEach(history => {\r\n            history = false;\r\n            newHistory.push(history);\r\n        });\r\n        this.setState({ showHistory: newHistory });\r\n\r\n    }\r\n    toggleShowHistory = (index) => {\r\n        let smallShow = [...this.state.showHistory];\r\n        smallShow[index] = !smallShow[index];\r\n        this.setState({ showHistory: smallShow });\r\n    }\r\n    translateResult = (goalHome, goalAway, endTime) => {\r\n        if (Date.now() > endTime) {\r\n            if (goalHome !== undefined && goalAway !== undefined) {\r\n                if (goalHome > goalAway) {\r\n                    return \"H\";\r\n                } else if (goalHome < goalAway) {\r\n                    return \"A\";\r\n                } else {\r\n                    return \"D\";\r\n                }\r\n            } else {\r\n                return \"free pass\";\r\n            }\r\n\r\n        } else {\r\n            return \"\";\r\n        }\r\n\r\n    }\r\n    determineSelection = (choice, position) => {\r\n        if (choice) {\r\n            if (position === 0) {\r\n                return \"H\"\r\n            } else if (position === 1) {\r\n                return \"D\"\r\n            } else {\r\n                return \"A\";\r\n            }\r\n        } else {\r\n            return \"—\";\r\n        }\r\n    }\r\n\r\n    calculateWins = (match, matchHits) => {\r\n        let win = \"No wins\";\r\n\r\n        let searchTerm = \"\";\r\n        if (matchHits === 10) {\r\n            searchTerm = \"ten\";\r\n        } else if (matchHits === 11) {\r\n            searchTerm = \"eleven\"\r\n        } else if (matchHits === 12) {\r\n            searchTerm = \"twelve\"\r\n        } else if (matchHits === 13) {\r\n            searchTerm = \"thirteen\";\r\n        } else {\r\n            if (match.isEvaluated)\r\n                return \"No wins\";\r\n            else\r\n                return \"Not evaluated yet\";\r\n        }\r\n\r\n        let potRef = firebase.database().ref(\"jackpot-win\").child(match.evaluationDate).child(searchTerm);\r\n        potRef.on(\"value\", snapshot => {\r\n            let data = snapshot.val();\r\n            win = \"₦\" + addCommaToAmounts(\"\" + data)\r\n        });\r\n        return win;\r\n    }\r\n    submitHandler = (e) => {\r\n        let value = e.target.value;\r\n        if (value !== \"select\") {\r\n            let matchesPlayed = [...this.state.matchesPlayed];\r\n            let matchesTransformed = matchesPlayed.sort((a, b) => {\r\n\r\n                return a[0][value] < b[0][value] ? 1 : -1\r\n            });\r\n            this.setState({ matchesPlayed: matchesTransformed });\r\n        }\r\n    }\r\n    handleWinsOnly = () => {\r\n        this.rseetShowHistory();\r\n        let matchesPlayed = [...this.state.matchesPlayed];\r\n        let matchFiltered = matchesPlayed.filter(match => match[0].hits >= 10);\r\n        this.setState({ matchesPlayed: matchFiltered });\r\n\r\n    }\r\n    handleAll = () => {\r\n        this.rseetShowHistory();\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user && user.emailVerified) {\r\n                let playedRef = firebase.database().ref(\"game-history\").child(user.uid);\r\n                playedRef.on(\"value\", (snapshot) => {\r\n                    let data = snapshot.val();\r\n                    let grouped = _.groupBy(data, 'gameNumber');\r\n                    let groupedArray = Object.keys(grouped).map(keys => grouped[keys]);\r\n                    this.setState({ matchesPlayed: groupedArray })\r\n                });\r\n            }\r\n        });\r\n    }\r\n    getMatchResults = (matchResults, match) => {\r\n        let finalMatches = [];\r\n        for (let i = 0; i < match.games.length; i++) {\r\n            let res = matchResults.filter(res => res.fixtureId === match.games[i].fixture_id);\r\n            finalMatches.splice(finalMatches.length, finalMatches.length + 1, res);\r\n        }\r\n        return finalMatches;\r\n    }\r\n    render() {\r\n        if (!this.props.isLoggedIn)\r\n            this.props.history.push(\"/\");\r\n\r\n        let matchesPlayed = [...this.state.matchesPlayed];\r\n        let matchResults = [...this.state.matchResults];\r\n        let userPlayHistoryTrannsformed = this.state.loading && matchesPlayed[0] ?\r\n            matchesPlayed.sort((a, b) => a[0][\"datePlayed\"] < b[0][\"datePlayed\"] ? 1 : -1).map((match, k) => {\r\n                let matchRes = this.getMatchResults(matchResults, match[0]);\r\n                return <div className={classes.userPlayHistoryAndShare} key={k}>\r\n                    <div className={classes.MainHeader} onClick={() => this.toggleShowHistory(k)} >\r\n                        <div className={classes.DateHead}>Entry date : {moment(match[0].datePlayed).format(\"DD.MM.YYYY\")}</div>\r\n                        <div className={classes.PriceHead}>Price: {\"₦\" + addCommaToAmounts(\"\" + match[0].slipPrice)}</div>\r\n                        <div className={classes.DateHead1}>Evaluation date : {moment(match[0].evaluationDate).format(\"DD.MM.YYYY\")}</div>\r\n                        <Button className={classes.BtToggle} size=\"sm\" onClick={() => this.toggleShowHistory(k)}>\r\n                            {!this.state.showHistory[k] ? <CaretDownFill className={classes.Icon} /> :\r\n                                <CaretUpFill className={classes.Icon} />} </Button>\r\n                    </div>\r\n                    {this.state.showHistory[k] ?\r\n                        <div className={classes.ResultHead} >\r\n                            {\r\n                                matchRes.length > 0 ? <div className={classes.userPlayHistory}>\r\n                                    <div className={classes.ResultBody} >\r\n                                        <div className={classes.BodyHeader}>\r\n                                            <div className={classes.Head1}>Match</div>\r\n                                            <div className={classes.Head}>Score</div>\r\n                                            <div className={classes.Head2}>Your Selections</div>\r\n                                        </div >\r\n                                        <div className={classes.BodyMain}>\r\n                                            {matchRes.map((eachRes, i) => {\r\n                                                return <div key={i} className={classes.SelectionRow}>\r\n                                                    <div className={classes.Teams}>\r\n                                                        <div className={classes.RowNumber}>{i + 1} </div>\r\n                                                        <div className={classes.TeamNames}>\r\n                                                            <div>{eachRes[0].homeTeam + \"  -  \"}</div>\r\n                                                            <div>{eachRes[0].awayTeam}</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className={classes.ScoreResult}>\r\n                                                        <div className={classes.Score}>{eachRes[0].status === \"Match Finished\" ? eachRes[0].score : Date.now() > moment(match[0].endTime) ? \"free pass\" : \"-\"}</div>\r\n                                                        <div >{this.translateResult(eachRes[0].homeGoals, eachRes[0].awayGoals, moment(match[0].endTime))}</div>\r\n                                                    </div>\r\n                                                    <div className={classes.Selections}>\r\n                                                        {match[0].games[i].selections.map((select, y) =>\r\n                                                            <div key={y} className={this.translateResult(eachRes[0].homeGoals, eachRes[0].awayGoals, moment(match[0].endTime)) ===\r\n                                                                this.determineSelection(select.selected, y) ?\r\n                                                                Date.now() > moment(match[0].endTime) ? classes.Winner : null : classes.Selected} >{this.determineSelection(select.selected, y)}</div>)}\r\n                                                    </div>\r\n\r\n                                                </div>\r\n                                            })}\r\n                                        </div>\r\n                                        <div className={classes.AmountWon}>\r\n                                            <div>Number of hits:  {match[0].isEvaluated ? match[0].hits : \"-\"}</div>\r\n                                            <div>Amount won: {this.calculateWins(match[0], match[0].hits)}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={classes.JackPotShare}>\r\n                                        {match[0].isEvaluated ?\r\n                                            <Jackpot basePrice={this.props.basePrice} gameDay=\r\n                                                {moment(match[0].evaluationDate).format(\"YYYY-MM-DD\")}\r\n                                                gamesLength={match[0].games.length}\r\n                                            />\r\n                                            : null}\r\n                                    </div>\r\n                                    <div className={classes.Footer}>\r\n                                        <h6>Game Info</h6>\r\n                                        <div className={classes.FooterPrices}>\r\n                                            <div className={classes.FooterPriceInner}>Price: {\"₦\" + addCommaToAmounts(\"\" + match[0].slipPrice)}</div>\r\n                                            <div>Row Price: {\"₦\" + addCommaToAmounts(\"\" + match[0].basePrice)}</div>\r\n                                        </div>\r\n                                        <div>Played on : {moment(match[0].datePlayed).format(\"DD.MM.YYYY HH:mm\")}</div>\r\n                                        <div>Game Id: {match[0].gameNumber}</div>\r\n                                    </div>\r\n                                </div> : <Spinner />\r\n                            }\r\n                        </div>\r\n                        : null}\r\n\r\n                </div>\r\n            })\r\n            : <Spinner />\r\n\r\n        return (<div className={classes.userPlayHistoryWrapper}>\r\n            <div className={classes.OrderByHeader}>\r\n                <form>\r\n                    <div className={classes.WinsOnly}>\r\n                        <div className={classes.View}>\r\n                            VIEW\r\n                        </div>\r\n                        <div className={classes.Buttons} ><input className={classes.AllButton} type=\"button\" value=\"All\" onClick={this.handleAll} />\r\n                            <input className={classes.WinsButton} type=\"button\" value=\"Wins only\" onClick={this.handleWinsOnly} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.OrderByWrap}>\r\n                        <select className={classes.OrderBy} onChange={this.submitHandler} >\r\n                            <option value=\"select\">ORDER BY</option>\r\n                            <option value=\"datePlayed\">Entry date</option>\r\n                            <option value=\"evaluationDate\" >Evaluation date</option>\r\n                        </select>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            {userPlayHistoryTrannsformed}</div>);\r\n    }\r\n}\r\n\r\n\r\nconst mapstateToprops = (state) => {\r\n    return {\r\n        //board\r\n        gamesLength: state.board.gamesLength,\r\n\r\n        //Config\r\n        basePrice: state.config.basePrice,\r\n        loading: state.config.loading,\r\n        daysuserPlayHistory: state.board.receipts,\r\n        resultsFrom: state.config.resultsFrom,\r\n\r\n        insertResult: state.config.insertResult,\r\n\r\n        //Login\r\n        isLoggedIn: state.login.isLoggedIn\r\n\r\n    }\r\n};\r\n\r\nconst mapDispatchToprops = (dispatch) => {\r\n    return {\r\n        onFetchResults: (startDate) => dispatch(actions.fetchResults(startDate)),\r\n    }\r\n}\r\nexport default connect(mapstateToprops, mapDispatchToprops)(UserPlayHistory);"]},"metadata":{},"sourceType":"module"}