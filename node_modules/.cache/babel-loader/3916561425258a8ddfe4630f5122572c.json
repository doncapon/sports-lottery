{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\components\\\\Payments\\\\ToBank\\\\DeletBankDetails\\\\DeleteBankDetails.js\";\nimport React, { Component } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport classes from './DeleteBankDetails.module.css';\nimport firebase from '../../../../config/firebase/firebase';\n\nclass DeleteBankDetail extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n      const ele = document.activeElement.name;\n      let error = {};\n      if (ele === \"name\") error[\"anameErr\"] = this.validateName(value).error;\n      if (ele === \"account\") error[\"bankErr\"] = this.validateBank(value).error;\n      this.setState({\n        formErrors: error\n      });\n    };\n\n    this.handleDelete = e => {\n      e.preventDefault();\n      firebase.auth().onAuthStateChanged(user => {\n        if (user && user.emailVerified) {\n          let savedBanks = [...this.props.savedBanks];\n          let account = savedBanks.filter(bank => bank.accountNumber === this.state.account)[0];\n\n          if (account && account.accountName === this.state.name && account.bank === this.state.bank) {\n            let bankRef = firebase.database().ref('bank-accounts/' + user.uid + \"/\" + account.accountNumber);\n            bankRef.remove();\n          } else {\n            alert(\"Account does not exist\");\n          }\n\n          firebase.database().ref(\"bank-accounts\").off();\n        } else {\n          alert(\"User is not logged in\");\n        }\n      });\n      setTimeout(() => {\n        window.location.reload(false);\n      }, 2500);\n    };\n\n    this.state = {\n      name: \"\",\n      account: \"\",\n      bank: '',\n      allowedBanks: [],\n      formErrors: {},\n      config: {},\n      apiError: '',\n      saveError: '',\n      showUpdate: '',\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.loading) {\n      this.setState({\n        allowedBanks: this.props.allowedBanks\n      });\n      this.setState({\n        name: this.props.name\n      });\n      this.setState({\n        bank: this.props.bank\n      });\n      this.setState({\n        account: this.props.account\n      });\n    }\n\n    this.setState({\n      loading: true\n    });\n  }\n\n  validateName(name) {\n    let formIsValid = true;\n    let error = \"\"; //Name   \n\n    if (!name) {\n      formIsValid = false;\n      error = \"Name is required.\";\n    }\n\n    return {\n      isValid: formIsValid,\n      error: error\n    };\n  }\n\n  validateBank(bank) {\n    let formIsValid = true;\n    let error = \"\";\n\n    if (bank === '' || bank === \"select\") {\n      formIsValid = false;\n      error = \"Select bank.\";\n    }\n\n    return {\n      isValid: formIsValid,\n      error: error\n    };\n  }\n\n  render() {\n    const {\n      nameErr,\n      accountErr,\n      bankErr\n    } = this.state.formErrors;\n    const banks = [classes.Banks];\n\n    if (bankErr) {\n      banks.push(classes.showError);\n    }\n\n    let banksallowed;\n    let optionsAllowed;\n\n    if (this.state.loading) {\n      banksallowed = [...this.state.allowedBanks];\n      optionsAllowed = banksallowed.sort((a, b) => a.bankName > b.bankName ? 1 : -1).map((detail, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: detail.bankCode,\n        children: detail.bankName\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this));\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.loading ? /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Delete bank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.label,\n            htmlFor: \"name\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: this.state.name,\n            disabled: true,\n            onChange: this.handleChange,\n            placeholder: \"Name: as in bank\",\n            className: classes.Text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), nameErr && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\"\n            },\n            children: nameErr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.label,\n            htmlFor: \"name\",\n            children: \"Bank:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"bank\",\n            value: this.state.bank,\n            onChange: this.handleChange,\n            disabled: true,\n            className: banks.join(\" \"),\n            children: optionsAllowed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), bankErr && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\",\n              paddingBottom: 10\n            },\n            children: bankErr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.label,\n            htmlFor: \"name\",\n            children: \"Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"account\",\n            value: this.state.account,\n            onChange: this.handleChange,\n            disabled: true,\n            placeholder: \"Account Number\",\n            className: classes.Number\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), accountErr && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"red\"\n            },\n            children: accountErr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), this.state.apiError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red'\n            },\n            children: \"Please check your bank details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 48\n          }, this) : null, this.state.saveError ? /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: 'red'\n            },\n            children: this.state.saveError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 49\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.ButtonInner,\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => this.props.setShowUpdate(false),\n              className: classes.Button1,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: classes.Button2,\n              onClick: this.handleDelete,\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default DeleteBankDetail;","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/components/Payments/ToBank/DeletBankDetails/DeleteBankDetails.js"],"names":["React","Component","Spinner","classes","firebase","DeleteBankDetail","constructor","props","handleChange","e","name","value","target","setState","ele","document","activeElement","error","validateName","validateBank","formErrors","handleDelete","preventDefault","auth","onAuthStateChanged","user","emailVerified","savedBanks","account","filter","bank","accountNumber","state","accountName","bankRef","database","ref","uid","remove","alert","off","setTimeout","window","location","reload","allowedBanks","config","apiError","saveError","showUpdate","loading","componentDidMount","formIsValid","isValid","render","nameErr","accountErr","bankErr","banks","Banks","push","showError","banksallowed","optionsAllowed","sort","a","b","bankName","map","detail","i","bankCode","label","Text","color","join","paddingBottom","Number","Buttons","ButtonInner","setShowUpdate","Button1","Button2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport classes from './DeleteBankDetails.module.css';\r\nimport firebase from '../../../../config/firebase/firebase';\r\n\r\nclass DeleteBankDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            account: \"\",\r\n            bank: '',\r\n\r\n            allowedBanks: [],\r\n            formErrors: {},\r\n            config: {},\r\n            apiError: '',\r\n            saveError: '',\r\n            showUpdate: '',\r\n            loading: false\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.state.loading) {\r\n            this.setState({ allowedBanks: this.props.allowedBanks });\r\n\r\n            this.setState({ name: this.props.name });\r\n            this.setState({ bank: this.props.bank });\r\n            this.setState({ account: this.props.account });\r\n        }\r\n        this.setState({ loading: true });\r\n    }\r\n    validateName(name) {\r\n        let formIsValid = true;\r\n        let error = \"\";\r\n        //Name   \r\n        if (!name) {\r\n            formIsValid = false;\r\n            error = \"Name is required.\";\r\n        }\r\n\r\n        return { isValid: formIsValid, error: error }\r\n    }\r\n    validateBank(bank) {\r\n        let formIsValid = true;\r\n        let error = \"\";\r\n        if (bank === '' || bank === \"select\") {\r\n            formIsValid = false;\r\n            error = \"Select bank.\";\r\n        }\r\n\r\n        return { isValid: formIsValid, error: error }\r\n    }\r\n\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n\r\n        const ele = document.activeElement.name;\r\n        let error = {};\r\n\r\n        if (ele === \"name\")\r\n            error[\"anameErr\"] = this.validateName(value).error;\r\n        if (ele === \"account\")\r\n            error[\"bankErr\"] = this.validateBank(value).error;\r\n\r\n        this.setState({ formErrors: error })\r\n\r\n    }\r\n\r\n    handleDelete = (e) => {\r\n        e.preventDefault();\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user && user.emailVerified) {\r\n                let savedBanks = [...this.props.savedBanks];\r\n                let account = savedBanks.filter(bank => bank.accountNumber === this.state.account)[0];\r\n\r\n                if (account && account.accountName === this.state.name && account.bank === this.state.bank) {\r\n                    let bankRef = firebase.database().ref('bank-accounts/' + user.uid + \"/\" + account.accountNumber);\r\n                    bankRef.remove();\r\n                } else {\r\n                    alert(\"Account does not exist\")\r\n                }\r\n                firebase.database().ref(\"bank-accounts\").off();\r\n\r\n                } else {\r\n                alert(\"User is not logged in\");\r\n            }\r\n        })\r\n        setTimeout(() => {\r\n            window.location.reload(false);\r\n        }, 2500);\r\n    }\r\n\r\n    render() {\r\n\r\n        const { nameErr, accountErr, bankErr } = this.state.formErrors;\r\n        const banks = [classes.Banks];\r\n        if (bankErr) {\r\n            banks.push(classes.showError);\r\n        }\r\n\r\n        let banksallowed;\r\n        let optionsAllowed;\r\n        if (this.state.loading) {\r\n            banksallowed = [...this.state.allowedBanks];\r\n            optionsAllowed = banksallowed.sort((a, b) => a.bankName > b.bankName ? 1 : -1).map((detail, i) => (\r\n                <option key={i} value={detail.bankCode}>{detail.bankName}</option>\r\n            ));\r\n        }\r\n\r\n        return (<div>\r\n            {this.state.loading ?\r\n                <form>\r\n                    <h2>Delete bank</h2>\r\n                    <div>\r\n                        <label className={classes.label} htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" name=\"name\"\r\n                            value={this.state.name}\r\n                            disabled={true}\r\n                            onChange={this.handleChange}\r\n                            placeholder=\"Name: as in bank\"\r\n                            className={classes.Text} />\r\n                        {nameErr &&\r\n                            <div style={{ color: \"red\" }}>{nameErr}</div>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <div>\r\n                        <label className={classes.label} htmlFor=\"name\">Bank:</label>\r\n                        <select name=\"bank\"\r\n                            value={this.state.bank}\r\n                            onChange={this.handleChange}\r\n                            disabled={true}\r\n\r\n                            className={banks.join(\" \")} >\r\n                            {optionsAllowed}\r\n                        </select>\r\n                        {bankErr &&\r\n                            <div style={{ color: \"red\", paddingBottom: 10 }}>{bankErr}</div>\r\n                        }\r\n                    </div>\r\n                    <div>\r\n                        <label className={classes.label} htmlFor=\"name\">Account</label>\r\n                        <input type=\"number\" name=\"account\"\r\n                            value={this.state.account}\r\n                            onChange={this.handleChange}\r\n                            disabled={true}\r\n                            placeholder=\"Account Number\"\r\n                            className={classes.Number} />\r\n                        {accountErr &&\r\n                            <div style={{ color: \"red\" }}>{accountErr}</div>\r\n                        }\r\n                        {this.state.apiError ? <div style={{ color: 'red' }}>Please check your bank details</div> : null}\r\n                        {this.state.saveError ? <div style={{ color: 'red' }}>{this.state.saveError}</div> : null}\r\n\r\n                    </div>\r\n                    <div className={classes.Buttons}>\r\n                        <div className={classes.ButtonInner}>\r\n                            <button type=\"button\" onClick={() => this.props.setShowUpdate(false)} className={classes.Button1}\r\n                            >Cancel</button>\r\n\r\n                            <button type=\"button\" className={classes.Button2} onClick={this.handleDelete}\r\n                            >Delete</button>\r\n                        </div>\r\n                    </div>\r\n                </form> : <Spinner />}\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default DeleteBankDetail;"]},"metadata":{},"sourceType":"module"}