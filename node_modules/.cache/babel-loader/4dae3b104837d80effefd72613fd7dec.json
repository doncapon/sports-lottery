{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\components\\\\loginLogout\\\\modalLogin\\\\loginModal.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport React, { useState } from 'react';\nimport classes from './loginModal.module.css';\nimport firebase from '../../../config/firebase/firebase';\n\nconst LoginModal = props => {\n  _s();\n\n  const [showPopup, setShowPopUp] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState('');\n  const [isNotVerified, setIsNotVerified] = useState('');\n  const [userData, setUserData] = useState({});\n  const [forgot, setForgot] = useState(false);\n  let history = useHistory();\n\n  const login = () => {\n    firebase.auth().signInWithEmailAndPassword(email, password).then(userCredential => {\n      // Signed in\n      var user = userCredential.user;\n\n      if (user.emailVerified === true) {\n        let userRef = firebase.database().ref(\"users/\" + user.uid);\n        userRef.on('value', snapshot => {\n          const dbUser = snapshot.val();\n          setUserData(user);\n          props.setIsLoggedIn(true);\n          popUpFunc();\n          props.setLoggedInUser(dbUser);\n          firebase.database().ref(\"users\").child(user.uid).child(\"funds\").on(\"value\", snapshot => {\n            if (snapshot.val() > 0) {\n              props.setIsPaying(true);\n            } else {\n              props.setIsPaying(false);\n            }\n          });\n          setTimeout(() => {\n            firebase.database().ref(\"users\").off();\n          }, 3000);\n          props.cancelLoginPopup();\n          history.push(\"/play\");\n          window.location.reload();\n        });\n      } else {\n        setIsNotVerified(\"User has not been verified\");\n        props.setIsLoggedIn(false);\n        props.setIsPaying(false);\n      }\n\n      setTimeout(() => {\n        firebase.database().ref(\"users\").off();\n      }, 3000);\n    }).catch(error => {\n      setUserData(error);\n      popUpFunc();\n      setForgot(true);\n      props.setIsLoggedIn(false);\n    });\n  };\n\n  const HandleSubmit = e => {\n    e.preventDefault();\n    setIsNotVerified(\"\");\n    login();\n  };\n\n  const HandleCancel = () => {\n    props.cancelLoginPopup();\n  };\n\n  const popUpFunc = () => {\n    setShowPopUp(true);\n    setTimeout(() => {\n      setShowPopUp(false);\n    }, 2000);\n    setShowPopUp(true);\n  };\n\n  const handleForgot = () => {\n    setForgot(false);\n    history.push(\"/forgot-password\");\n  };\n\n  let alerts = [\"alert\", \"alert-danger\"];\n  showPopup ? alerts.push(classes.alertShown) : alerts.push(classes.alertHidden);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.Wrapper,\n    children: [showPopup ? !userData.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: alerts.join(\" \"),\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Failure!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this), \" Invalid email or password / User Not Verified\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this) : null : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => HandleSubmit(e),\n        className: classes.Form,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.FormControl,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.Label,\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"email\",\n            type: \"email\",\n            onChange: e => setEmail(e.target.value),\n            value: email,\n            placeholder: \"email\",\n            className: classes.Input\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.FormControl,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.Label,\n            children: \"Password:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"password\",\n            type: \"password\",\n            onChange: e => setPassword(e.target.value),\n            value: password,\n            placeholder: \"password\",\n            className: classes.Input2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), isNotVerified ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: isNotVerified\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 34\n        }, this) : null, forgot ? /*#__PURE__*/_jsxDEV(Button, {\n          className: classes.Forgot,\n          onClick: handleForgot,\n          children: \"forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.Buttons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: HandleCancel,\n            variant: \"outline-danger\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"success\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LoginModal, \"SgJPOOJkpamy6Qrq0rEzlXdn+gM=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginModal;\nexport default LoginModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginModal\");","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/components/loginLogout/modalLogin/loginModal.js"],"names":["Button","useHistory","React","useState","classes","firebase","LoginModal","props","showPopup","setShowPopUp","email","setEmail","password","setPassword","isNotVerified","setIsNotVerified","userData","setUserData","forgot","setForgot","history","login","auth","signInWithEmailAndPassword","then","userCredential","user","emailVerified","userRef","database","ref","uid","on","snapshot","dbUser","val","setIsLoggedIn","popUpFunc","setLoggedInUser","child","setIsPaying","setTimeout","off","cancelLoginPopup","push","window","location","reload","catch","error","HandleSubmit","e","preventDefault","HandleCancel","handleForgot","alerts","alertShown","alertHidden","Wrapper","join","Form","FormControl","Label","target","value","Input","Input2","color","Forgot","Buttons"],"mappings":"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","sourcesContent":["import { Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport React, { useState } from 'react';\r\nimport classes from './loginModal.module.css';\r\nimport firebase from '../../../config/firebase/firebase';\r\n\r\nconst LoginModal = (props) => {\r\n    const [showPopup, setShowPopUp] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState('');\r\n    const [isNotVerified, setIsNotVerified] = useState('');\r\n    const [userData, setUserData] = useState({});\r\n    const [forgot, setForgot] = useState(false);\r\n    let history = useHistory();\r\n\r\n    const login = () => {\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then((userCredential) => {\r\n                // Signed in\r\n                var user = userCredential.user;\r\n                if (user.emailVerified === true) {\r\n                    let userRef = firebase.database().ref(\"users/\" + user.uid);\r\n                    userRef.on('value', (snapshot) => {\r\n                        const dbUser = snapshot.val();\r\n                        setUserData(user);\r\n                        props.setIsLoggedIn(true);\r\n                        popUpFunc();\r\n                        props.setLoggedInUser(dbUser);\r\n                        firebase.database().ref(\"users\").child(user.uid).child(\"funds\")\r\n                            .on(\"value\", snapshot => {\r\n                                if (snapshot.val() > 0) {\r\n                                    props.setIsPaying(true);\r\n\r\n                                } else {\r\n                                    props.setIsPaying(false);\r\n\r\n                                }\r\n                            })\r\n                        setTimeout(() => {\r\n                            firebase.database().ref(\"users\").off();\r\n\r\n                        }, 3000);\r\n\r\n                        props.cancelLoginPopup();\r\n                        history.push(\"/play\");\r\n                        window.location.reload();\r\n                    });\r\n                } else {\r\n                    setIsNotVerified(\"User has not been verified\");\r\n                    props.setIsLoggedIn(false);\r\n                    props.setIsPaying(false);\r\n                    \r\n\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    firebase.database().ref(\"users\").off();\r\n                }, 3000)\r\n            })\r\n            .catch((error) => {\r\n                setUserData(error);\r\n                popUpFunc();\r\n                setForgot(true);\r\n                props.setIsLoggedIn(false);\r\n\r\n            });\r\n\r\n    };\r\n\r\n\r\n    const HandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setIsNotVerified(\"\");\r\n        login();\r\n\r\n    }\r\n\r\n    const HandleCancel = () => {\r\n        props.cancelLoginPopup();\r\n    }\r\n    const popUpFunc = () => {\r\n        setShowPopUp(true);\r\n\r\n        setTimeout(() => {\r\n            setShowPopUp(false);\r\n        }, 2000);\r\n        setShowPopUp(true);\r\n    }\r\n    const handleForgot = () => {\r\n        setForgot(false);\r\n        history.push(\"/forgot-password\");\r\n    }\r\n    let alerts = [\"alert\", \"alert-danger\"]\r\n    showPopup ? alerts.push(classes.alertShown) : alerts.push(classes.alertHidden);\r\n    return (<div className={classes.Wrapper}>\r\n        {showPopup ?\r\n            !userData.email ?\r\n                <div className={alerts.join(\" \")}>\r\n                    <strong>Failure!</strong> Invalid email or password / User Not Verified\r\n                </div>\r\n                : null\r\n            : null\r\n        }\r\n        <div>\r\n            <form onSubmit={(e) => HandleSubmit(e)} className={classes.Form}>\r\n                <h3>Login</h3>\r\n                <div className={classes.FormControl}>\r\n                    <div className={classes.Label}  >Email:</div>\r\n                    <input name=\"email\" type=\"email\" onChange={(e) => setEmail(e.target.value)}\r\n                        value={email} placeholder=\"email\" className={classes.Input} />\r\n                    <br />\r\n                </div>\r\n                <div className={classes.FormControl}>\r\n                    <div className={classes.Label}>Password:</div>\r\n                    <input name=\"password\" type=\"password\" onChange={(e) => setPassword(e.target.value)}\r\n                        value={password} placeholder=\"password\" className={classes.Input2} />\r\n                </div>\r\n                {isNotVerified ? <div style={{ color: 'red' }}>{isNotVerified}</div> : null}\r\n                {forgot ?\r\n                    <Button className={classes.Forgot} onClick={handleForgot} >forgot password?</Button>\r\n                    : null}\r\n                <div className={classes.Buttons}>\r\n                    <Button onClick={HandleCancel} variant=\"outline-danger\">Cancel</Button>\r\n                    <Button type=\"submit\" variant=\"success\">Login</Button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>);\r\n}\r\n\r\n\r\n\r\nexport default LoginModal;"]},"metadata":{},"sourceType":"module"}