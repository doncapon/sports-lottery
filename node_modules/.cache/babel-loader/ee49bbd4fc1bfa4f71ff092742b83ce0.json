{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\containers\\\\Signup\\\\Signup.js\";\nimport React, { Component } from \"react\";\nimport classes from './Signup.module.css';\nimport axios from '../../axios-main';\nimport { connect } from \"react-redux\";\nimport { calculateAge, capitalizeFirstLetter } from '../../shared/utility';\nimport firebase from '../../config/firebase/firebase';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createUser = async () => {\n      try {\n        const userCredential = await firebase.auth().createUserWithEmailAndPassword(this.state.emailId, this.state.password);\n        const userId = userCredential.user.uid;\n        await firebase.database().ref('users/' + userId + '/').set({\n          name: capitalizeFirstLetter(this.state.name),\n          surname: capitalizeFirstLetter(this.state.surname),\n          phoneNumber: \"+234\" + this.state.phoneNumber.substr(1, this.state.phoneNumber.length),\n          email: this.state.emailId,\n          dob: this.state.dob,\n          role: \"user\",\n          funds: 0\n        });\n        return userId; //As per your comment below\n      } catch (error) {\n        return error;\n      }\n    };\n\n    this.handleFormValidation = () => {\n      const {\n        name,\n        surname,\n        emailId,\n        dob,\n        phoneNumber,\n        password,\n        passwordConf\n      } = this.state;\n      let formErrors = {};\n      let formIsValid = true; //Name\n\n      formErrors[\"nameErr\"] = this.validateName(name).error;\n      formIsValid = this.validateName(name).isValid && formIsValid; //Surname\n\n      formErrors[\"surnameErr\"] = this.validateSurname(surname).error;\n      formIsValid = this.validateSurname(surname).isValid && formIsValid; //Passwod Validations  \n\n      formErrors[\"passwordErr\"] = this.validatePassword(password).error;\n      formIsValid = this.validatePassword(password).isValid && formIsValid; //PasswodConf Validation \n\n      formErrors[\"passwordConfErr\"] = this.validatePasswordConf(password, passwordConf).error;\n      formIsValid = this.validatePasswordConf(password, passwordConf).isValid && formIsValid; //EmailId\n\n      formErrors[\"emailIdErr\"] = this.validateEmailId(emailId).error;\n      formIsValid = this.validateEmailId(emailId).isValid && formIsValid; //DOB    \n\n      formErrors[\"dobErr\"] = this.validateDob(dob).error;\n      formIsValid = this.validateDob(dob).isValid && formIsValid; //Phone number    \n\n      formErrors[\"phoneNumberErr\"] = this.validatePhoneNumber(phoneNumber).error;\n      formIsValid = this.validatePhoneNumber(phoneNumber).isValid && formIsValid;\n      this.setState({\n        formErrors: formErrors\n      });\n      return formIsValid;\n    };\n\n    this.handleChange = e => {\n      let {\n        name,\n        value\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n      const ele = document.activeElement.name;\n      let error = {};\n      if (ele === \"name\") error[\"nameErr\"] = this.validateName(value).error;\n      if (ele === \"surname\") error[\"surnameErr\"] = this.validateSurname(value).error;\n      if (ele === \"password\") error[\"passwordErr\"] = this.validatePassword(value).error;\n      if (ele === \"passwordConf\") error[\"passwordConfErr\"] = this.validatePasswordConf(this.state.password, value).error;\n      if (ele === \"emailId\") error[\"emailIdErr\"] = this.validateEmailId(value).error;\n      if (ele === \"dob\") error[\"dobErr\"] = this.validateDob(value).error;\n      if (ele === \"phoneNumber\") error[\"phoneNumberErr\"] = this.validatePhoneNumber(value).error;\n      this.setState({\n        formErrors: error\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let userByPhone;\n\n      if (this.handleFormValidation()) {\n        this.setState({\n          formErrors: {}\n        });\n        let promise = axios.get(\"/users.json\").then(response => {\n          let isExist = false;\n\n          if (response.data !== null) {\n            let keys = Object.keys(response.data);\n\n            for (let i = 0; i < keys.length; i++) {\n              if (response.data[keys[i]].phoneNumber === this.state.phoneNumber) {\n                isExist = true;\n                break;\n              }\n            }\n          }\n\n          if (response.data === null) {\n            isExist = false;\n          }\n\n          if (isExist) {\n            let formERror = this.state.formErrors;\n            if (response.data) formERror[\"phoneNumberErr\"] = \"Phone number is already in use\";\n            this.setState({\n              formErrors: formERror\n            });\n          }\n\n          userByPhone = isExist;\n          return response.data;\n        });\n        Promise.all([promise]).then(value => {\n          if (!userByPhone && !this.state.formErrors[\"phoneNumberErr\"]) {\n            this.createUser().then(response => {\n              if (response.message) {\n                let formERror = this.state.formErrors;\n                formERror[\"emailIdErr\"] = response.message;\n                this.setState({\n                  formErrors: formERror\n                });\n              } else {\n                firebase.auth().onAuthStateChanged(user => {\n                  if (user) {\n                    user.sendEmailVerification({\n                      url: process.env.REACT_APP_HOME\n                    });\n                    alert(\"Account registered. Please click link sent to your email to activate.\");\n                    this.props.history.push(\"/\");\n                  }\n                });\n              }\n            });\n          }\n        });\n      }\n    };\n\n    this.handleKeyUp = () => {\n      // eslint-disable-next-line\n      this.setState({\n        dob: this.state.dob.replace(/^(\\d\\d)(\\d)$/g, '$1/$2').replace(/^(\\d\\d\\/\\d\\d)(\\d+)$/g, '$1/$2').replace(/[^\\d\\/]/g, '')\n      });\n    };\n\n    this.togglePasswordShow = () => {\n      if (this.state.passwordType === \"password\") {\n        this.setState({\n          passwordType: \"text\"\n        });\n        this.setState({\n          showText: 'Hide password?'\n        });\n      } else {\n        this.setState({\n          passwordType: \"password\"\n        });\n        this.setState({\n          showText: 'Show password?'\n        });\n      }\n    };\n\n    this.state = {\n      name: '',\n      surname: '',\n      password: '',\n      passwordConf: '',\n      emailId: '',\n      dob: '',\n      phoneNumber: '',\n      formErrors: {},\n      apiError: '',\n      passwordType: 'password',\n      showText: 'Show password?'\n    };\n    this.initialState = this.state;\n  }\n\n  validateName(name) {\n    let formIsValid = true;\n    let error = \"\"; //Name   \n\n    if (!name) {\n      formIsValid = false;\n      error = \"Name is required.\";\n    }\n\n    return {\n      isValid: formIsValid,\n      error: error\n    };\n  }\n\n  validateSurname(surname) {\n    let formIsValid = true;\n    let error = \"\"; //Name   \n\n    if (!surname) {\n      formIsValid = false;\n      error = \"Surname is required.\";\n    }\n\n    return {\n      isValid: formIsValid,\n      error: error\n    };\n  }\n\n  validatePassword(password) {\n    let formIsValid = true;\n    let error = \"\"; //Password\n\n    if (!password) {\n      formIsValid = false;\n      error = \"Password is required.\";\n    } else {\n      if (password.length < 8 && formIsValid) {\n        formIsValid = false;\n        error = \"Password minumum length is 8 characters\";\n      }\n\n      if (!/(?=.*?[A-Z])/.test(password) && formIsValid) {\n        formIsValid = false;\n        error = \"Password must contain at least one Uppercase letter\";\n      }\n\n      if (!/(?=.*?[a-z])/.test(password) && formIsValid) {\n        formIsValid = false;\n        error = \"Password must contain at least one Lowercase letter\";\n      }\n\n      if (!/(?=.*?[0-9])/.test(password) && formIsValid) {\n        formIsValid = false;\n        error = \"Password must contain at least one number\";\n      }\n    }\n\n    return {\n      isValid: formIsValid,\n      error: error\n    };\n  }\n\n  validatePasswordConf(password, passwordConf) {\n    let formIsValid = true;\n    let error = \"\"; //PasswordConf\n\n    if (password !== passwordConf || passwordConf === \"\") {\n      formIsValid = false;\n      error = \"Passwords dont match\";\n      if (passwordConf === \"\") error = \"Re-Password is required\";\n    }\n\n    return {\n      isValid: formIsValid,\n      error: error\n    };\n  }\n\n  validateEmailId(emailId) {\n    let formIsValid = true;\n    let error = \"\"; //Email    \n\n    if (!emailId) {\n      formIsValid = false;\n      error = \"Email id is required.\";\n    } else {\n      if (!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(emailId.toLowerCase())) {\n        formIsValid = false;\n        error = \"Invalid email id.\";\n      }\n    }\n\n    return {\n      isValid: formIsValid,\n      error: error\n    };\n  }\n\n  validateDob(dob) {\n    let formIsValid = true;\n    let error = \"\"; //dob   \n\n    if (!dob) {\n      formIsValid = false;\n      error = \"Date of birth is required.\";\n    } else {\n      var pattern = /^(0[1-9]|1[0-9]|2[0-9]|3[0-1])\\/(0[1-9]|1[0-2])\\/([0-9]{4})$/;\n\n      if (!pattern.test(dob) && formIsValid) {\n        formIsValid = false;\n        error = \"Invalid date of birth. follow format \\\"dd/mm/yyyy\\\"\";\n      }\n\n      dob = dob.split(\"/\");\n\n      if (Number(dob[2]) < 1900 && formIsValid) {\n        formIsValid = false;\n        error = \"Sorry, you are too old\";\n      }\n\n      dob = dob[2] + \"-\" + dob[1] + \"-\" + dob[0];\n\n      if (calculateAge(dob) < 18 && formIsValid) {\n        formIsValid = false;\n        error = \"Sorry, you must be over 18\";\n      }\n    }\n\n    return {\n      isValid: formIsValid,\n      error: error\n    };\n  }\n\n  validatePhoneNumber(phoneNumber) {\n    let formIsValid = true;\n    let error = \"\";\n\n    if (!phoneNumber) {\n      formIsValid = false;\n      error = \"Phone number is required.\";\n    } else {\n      var mobPattern = /0\\d{2}\\d{4}\\d{4}/;\n\n      if (!mobPattern.test(phoneNumber)) {\n        formIsValid = false;\n        error = \"Invalid phone number.\";\n      }\n    }\n\n    return {\n      isValid: formIsValid,\n      error: error\n    };\n  }\n\n  render() {\n    const {\n      nameErr,\n      surnameErr,\n      emailIdErr,\n      dobErr,\n      phoneNumberErr,\n      passwordErr,\n      passwordConfErr\n    } = this.state.formErrors;\n\n    if (this.props.isLoggedIn) {\n      this.props.history.push(\"/\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.Wrapper,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.formDiv,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            textAlign: \"center\",\n            fontWeight: 700\n          },\n          className: \"pb-3\",\n          children: \"Registration Form \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.Form,\n            onSubmit: this.handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: classes.Label,\n                htmlFor: \"name\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: this.state.name,\n                onChange: this.handleChange,\n                placeholder: \"Your name..\",\n                className: classes.Text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 29\n              }, this), nameErr && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.ErrorText,\n                children: nameErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: classes.Label,\n                htmlFor: \"surname\",\n                children: \"Surname\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"surname\",\n                value: this.state.surname,\n                onChange: this.handleChange,\n                placeholder: \"Your Surame..\",\n                className: classes.Text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 29\n              }, this), surnameErr && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.ErrorText,\n                children: surnameErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: classes.Label,\n                htmlFor: \"emailId\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"emailId\",\n                value: this.state.emailId,\n                onChange: this.handleChange,\n                placeholder: \"Your email id..\",\n                className: classes.Text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 29\n              }, this), emailIdErr && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.ErrorText,\n                children: emailIdErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: classes.Label,\n                htmlFor: \"phoneNumber\",\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"phoneNumber\",\n                onChange: this.handleChange,\n                value: this.state.phoneNumber,\n                size: \"11\",\n                maxLength: \"11\",\n                placeholder: \"Your phone number..\",\n                className: classes.Text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 29\n              }, this), phoneNumberErr && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.ErrorText,\n                children: phoneNumberErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: classes.Label,\n                htmlFor: \"dob\",\n                children: \"Birth Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.LabelSmall,\n                htmlFor: \"dob\",\n                children: \"Birth Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"dob\",\n                value: this.state.dob,\n                size: \"10\",\n                maxLength: \"10\",\n                onKeyUp: this.handleKeyUp,\n                onChange: this.handleChange,\n                placeholder: \"dd/mm/yyyy\",\n                className: classes.Date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 29\n              }, this), dobErr && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.ErrorText,\n                children: dobErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                onClick: this.togglePasswordShow,\n                className: classes.TogglePassword,\n                children: this.state.showText\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: classes.Label,\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: this.state.passwordType,\n                name: \"password\",\n                value: this.state.password,\n                onChange: this.handleChange,\n                placeholder: \"Password...\",\n                className: classes.Password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 29\n              }, this), passwordErr && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.ErrorText,\n                children: passwordErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: classes.Label,\n                htmlFor: \"passwordConf\",\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: this.state.passwordType,\n                name: \"passwordConf\",\n                value: this.state.passwordConf,\n                onChange: this.handleChange,\n                placeholder: \"Re-password\",\n                className: classes.Password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 29\n              }, this), passwordConfErr && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.ErrorText,\n                children: passwordConfErr\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'center',\n                marginTop: '30px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                onClick: () => this.props.history.push(\"/\"),\n                className: classes.Button,\n                type: \"button\",\n                value: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: classes.Submit,\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapstateToProps = state => {\n  return {\n    isLoggedIn: state.login.isLoggedIn,\n    user: state.login.user\n  };\n};\n\nexport default connect(mapstateToProps)(Signup);","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/containers/Signup/Signup.js"],"names":["React","Component","classes","axios","connect","calculateAge","capitalizeFirstLetter","firebase","Signup","constructor","props","createUser","userCredential","auth","createUserWithEmailAndPassword","state","emailId","password","userId","user","uid","database","ref","set","name","surname","phoneNumber","substr","length","email","dob","role","funds","error","handleFormValidation","passwordConf","formErrors","formIsValid","validateName","isValid","validateSurname","validatePassword","validatePasswordConf","validateEmailId","validateDob","validatePhoneNumber","setState","handleChange","e","value","target","ele","document","activeElement","handleSubmit","preventDefault","userByPhone","promise","get","then","response","isExist","data","keys","Object","i","formERror","Promise","all","message","onAuthStateChanged","sendEmailVerification","url","process","env","REACT_APP_HOME","alert","history","push","handleKeyUp","replace","togglePasswordShow","passwordType","showText","apiError","initialState","test","toLowerCase","pattern","split","Number","mobPattern","render","nameErr","surnameErr","emailIdErr","dobErr","phoneNumberErr","passwordErr","passwordConfErr","isLoggedIn","Wrapper","formDiv","textAlign","fontWeight","Form","Label","Text","ErrorText","LabelSmall","Date","TogglePassword","Password","display","justifyContent","marginTop","Button","Submit","mapstateToProps","login"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport classes from './Signup.module.css'\r\nimport axios from '../../axios-main';\r\nimport { connect } from \"react-redux\";\r\nimport { calculateAge, capitalizeFirstLetter } from '../../shared/utility';\r\nimport firebase from '../../config/firebase/firebase';\r\n\r\nclass Signup extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            surname: '',\r\n            password: '',\r\n            passwordConf: '',\r\n            emailId: '',\r\n            dob: '',\r\n            phoneNumber: '',\r\n            formErrors: {},\r\n            apiError: '',\r\n            passwordType: 'password',\r\n            showText: 'Show password?'\r\n        };\r\n\r\n\r\n        this.initialState = this.state;\r\n    }\r\n\r\n    createUser = async () => {\r\n        try {\r\n\r\n            const userCredential = await firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(\r\n                    this.state.emailId,\r\n                    this.state.password\r\n                );\r\n\r\n            const userId = userCredential.user.uid;\r\n            await firebase\r\n                .database()\r\n                .ref('users/' + userId + '/')\r\n                .set({\r\n                    name: capitalizeFirstLetter(this.state.name),\r\n                    surname: capitalizeFirstLetter(this.state.surname),\r\n                    phoneNumber: \"+234\" + this.state.phoneNumber.substr(1, this.state.phoneNumber.length),\r\n                    email: this.state.emailId,\r\n                    dob: this.state.dob,\r\n                    role: \"user\",\r\n                    funds: 0\r\n                });\r\n            return userId;  //As per your comment below\r\n\r\n        } catch (error) {\r\n            return error;\r\n        }\r\n    };\r\n\r\n    validateName(name) {\r\n        let formIsValid = true;\r\n        let error = \"\";\r\n        //Name   \r\n        if (!name) {\r\n            formIsValid = false;\r\n            error = \"Name is required.\";\r\n        }\r\n\r\n        return { isValid: formIsValid, error: error }\r\n    }\r\n    validateSurname(surname) {\r\n        let formIsValid = true;\r\n        let error = \"\";\r\n        //Name   \r\n        if (!surname) {\r\n            formIsValid = false;\r\n            error = \"Surname is required.\";\r\n        }\r\n\r\n        return { isValid: formIsValid, error: error }\r\n    }\r\n\r\n    validatePassword(password) {\r\n        let formIsValid = true;\r\n        let error = \"\";\r\n        //Password\r\n        if (!password) {\r\n            formIsValid = false;\r\n            error = \"Password is required.\";\r\n        } else {\r\n            if (password.length < 8 && formIsValid) {\r\n                formIsValid = false;\r\n                error = \"Password minumum length is 8 characters\";\r\n            }\r\n\r\n            if (!/(?=.*?[A-Z])/.test(password) && formIsValid) {\r\n                formIsValid = false;\r\n                error = \"Password must contain at least one Uppercase letter\";\r\n            }\r\n            if (!/(?=.*?[a-z])/.test(password) && formIsValid) {\r\n                formIsValid = false;\r\n                error = \"Password must contain at least one Lowercase letter\";\r\n            }\r\n            if (!/(?=.*?[0-9])/.test(password) && formIsValid) {\r\n                formIsValid = false;\r\n                error = \"Password must contain at least one number\";\r\n            }\r\n\r\n        }\r\n\r\n        return { isValid: formIsValid, error: error }\r\n    }\r\n\r\n    validatePasswordConf(password, passwordConf) {\r\n        let formIsValid = true;\r\n        let error = \"\";\r\n        //PasswordConf\r\n        if (password !== passwordConf || passwordConf === \"\") {\r\n            formIsValid = false;\r\n            error = \"Passwords dont match\";\r\n            if (passwordConf === \"\")\r\n                error = \"Re-Password is required\";\r\n        }\r\n\r\n        return { isValid: formIsValid, error: error }\r\n    }\r\n\r\n\r\n\r\n    validateEmailId(emailId) {\r\n        let formIsValid = true;\r\n        let error = \"\";\r\n\r\n        //Email    \r\n        if (!emailId) {\r\n            formIsValid = false;\r\n            error = \"Email id is required.\";\r\n        }\r\n        else {\r\n            if (!(/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(emailId.toLowerCase()))) {\r\n\r\n                formIsValid = false;\r\n                error = \"Invalid email id.\";\r\n            }\r\n        }\r\n        return { isValid: formIsValid, error: error }\r\n    }\r\n\r\n\r\n    validateDob(dob) {\r\n        let formIsValid = true;\r\n        let error = \"\";\r\n        //dob   \r\n        if (!dob) {\r\n            formIsValid = false;\r\n            error = \"Date of birth is required.\";\r\n        }\r\n        else {\r\n            var pattern = /^(0[1-9]|1[0-9]|2[0-9]|3[0-1])\\/(0[1-9]|1[0-2])\\/([0-9]{4})$/;\r\n            if (!pattern.test(dob) && formIsValid) {\r\n                formIsValid = false;\r\n                error = \"Invalid date of birth. follow format \\\"dd/mm/yyyy\\\"\";\r\n            }\r\n\r\n            dob = dob.split(\"/\");\r\n            if (Number(dob[2]) < 1900 && formIsValid) {\r\n\r\n                formIsValid = false;\r\n                error = \"Sorry, you are too old\";\r\n            }\r\n            dob = dob[2] + \"-\" + dob[1] + \"-\" + dob[0];\r\n            if (calculateAge(dob) < 18 && formIsValid) {\r\n                formIsValid = false;\r\n                error = \"Sorry, you must be over 18\";\r\n            }\r\n        }\r\n\r\n        return { isValid: formIsValid, error: error }\r\n    }\r\n\r\n    validatePhoneNumber(phoneNumber) {\r\n        let formIsValid = true;\r\n        let error = \"\";\r\n        if (!phoneNumber) {\r\n            formIsValid = false;\r\n            error = \"Phone number is required.\";\r\n        }\r\n        else {\r\n            var mobPattern = /0\\d{2}\\d{4}\\d{4}/;\r\n            if (!mobPattern.test(phoneNumber)) {\r\n                formIsValid = false;\r\n                error = \"Invalid phone number.\";\r\n            }\r\n        }\r\n\r\n        return { isValid: formIsValid, error: error }\r\n    }\r\n\r\n    handleFormValidation = () => {\r\n        const { name, surname, emailId, dob, phoneNumber, password, passwordConf } = this.state;\r\n        let formErrors = {};\r\n        let formIsValid = true;\r\n        //Name\r\n        formErrors[\"nameErr\"] = this.validateName(name).error;\r\n        formIsValid = this.validateName(name).isValid && formIsValid;\r\n\r\n        //Surname\r\n        formErrors[\"surnameErr\"] = this.validateSurname(surname).error;\r\n        formIsValid = this.validateSurname(surname).isValid && formIsValid;\r\n\r\n        //Passwod Validations  \r\n        formErrors[\"passwordErr\"] = this.validatePassword(password).error;\r\n        formIsValid = this.validatePassword(password).isValid && formIsValid;\r\n\r\n        //PasswodConf Validation \r\n        formErrors[\"passwordConfErr\"] = this.validatePasswordConf(password, passwordConf).error;\r\n        formIsValid = this.validatePasswordConf(password, passwordConf).isValid && formIsValid;\r\n\r\n        //EmailId\r\n        formErrors[\"emailIdErr\"] = this.validateEmailId(emailId).error;\r\n        formIsValid = this.validateEmailId(emailId).isValid && formIsValid;\r\n\r\n        //DOB    \r\n        formErrors[\"dobErr\"] = this.validateDob(dob).error;\r\n        formIsValid = this.validateDob(dob).isValid && formIsValid;\r\n\r\n        //Phone number    \r\n        formErrors[\"phoneNumberErr\"] = this.validatePhoneNumber(phoneNumber).error;\r\n        formIsValid = this.validatePhoneNumber(phoneNumber).isValid && formIsValid;\r\n\r\n\r\n        this.setState({ formErrors: formErrors });\r\n        return formIsValid;\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        let { name, value } = e.target;\r\n        this.setState({ [name]: value });\r\n        const ele = document.activeElement.name;\r\n        let error = {};\r\n        if (ele === \"name\")\r\n            error[\"nameErr\"] = this.validateName(value).error;\r\n        if (ele === \"surname\")\r\n            error[\"surnameErr\"] = this.validateSurname(value).error;\r\n        if (ele === \"password\")\r\n            error[\"passwordErr\"] = this.validatePassword(value).error;\r\n        if (ele === \"passwordConf\")\r\n            error[\"passwordConfErr\"] = this.validatePasswordConf(this.state.password, value).error;\r\n        if (ele === \"emailId\")\r\n            error[\"emailIdErr\"] = this.validateEmailId(value).error;\r\n        if (ele === \"dob\")\r\n            error[\"dobErr\"] = this.validateDob(value).error;\r\n        if (ele === \"phoneNumber\")\r\n            error[\"phoneNumberErr\"] = this.validatePhoneNumber(value).error;\r\n        this.setState({ formErrors: error })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let userByPhone;\r\n        if (this.handleFormValidation()) {\r\n            this.setState({ formErrors: {} })\r\n\r\n            let promise = axios.get(\"/users.json\")\r\n                .then(response => {\r\n                    let isExist = false;\r\n                    if (response.data !== null) {\r\n                        let keys = Object.keys(response.data);\r\n                        for (let i = 0; i < keys.length; i++) {\r\n                            if (response.data[keys[i]].phoneNumber === this.state.phoneNumber) {\r\n                                isExist = true;\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                    if (response.data === null) {\r\n                        isExist = false;\r\n                    }\r\n                    if (isExist) {\r\n                        let formERror = this.state.formErrors;\r\n                        if (response.data)\r\n                            formERror[\"phoneNumberErr\"] = \"Phone number is already in use\";\r\n                        this.setState({ formErrors: formERror });\r\n\r\n                    }\r\n                    userByPhone = isExist;\r\n                    return response.data;\r\n\r\n                });\r\n            Promise.all([promise])\r\n                .then(value => {\r\n                    if (!userByPhone && !this.state.formErrors[\"phoneNumberErr\"]) {\r\n                        this.createUser()\r\n                            .then(response => {\r\n                                if (response.message) {\r\n                                    let formERror = this.state.formErrors;\r\n                                    formERror[\"emailIdErr\"] = response.message;\r\n                                    this.setState({ formErrors: formERror });\r\n                                } else {\r\n                                    firebase.auth().onAuthStateChanged((user) => {\r\n                                        if (user) {\r\n                                            user.sendEmailVerification({ url: process.env.REACT_APP_HOME });\r\n                                            alert(\"Account registered. Please click link sent to your email to activate.\");\r\n                                            this.props.history.push(\"/\");\r\n                                        }\r\n                                    })\r\n                                }\r\n                            })\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    handleKeyUp = () => {\r\n        // eslint-disable-next-line\r\n        this.setState({ dob: this.state.dob.replace(/^(\\d\\d)(\\d)$/g, '$1/$2').replace(/^(\\d\\d\\/\\d\\d)(\\d+)$/g, '$1/$2').replace(/[^\\d\\/]/g, '') });\r\n    }\r\n    togglePasswordShow = () => {\r\n        if (this.state.passwordType === \"password\") {\r\n            this.setState({ passwordType: \"text\" })\r\n            this.setState({ showText: 'Hide password?' });\r\n        } else {\r\n            this.setState({ passwordType: \"password\" })\r\n            this.setState({ showText: 'Show password?' });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const { nameErr, surnameErr, emailIdErr, dobErr, phoneNumberErr, passwordErr,\r\n            passwordConfErr } = this.state.formErrors;\r\n        if (this.props.isLoggedIn) {\r\n            this.props.history.push(\"/\")\r\n        }\r\n        return (<div className={classes.Wrapper}>\r\n            <div className={classes.formDiv}>\r\n                <h3 style={{ textAlign: \"center\", fontWeight: 700 }} className='pb-3'>Registration Form </ h3>\r\n                <div>\r\n                    <form className={classes.Form} onSubmit={this.handleSubmit}>\r\n                        <div>\r\n                            <label className={classes.Label} htmlFor=\"name\">Name</label>\r\n                            <input type=\"text\" name=\"name\"\r\n                                value={this.state.name}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Your name..\"\r\n                                className={classes.Text} />\r\n                            {nameErr &&\r\n                                <div className={classes.ErrorText}>{nameErr}</div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label className={classes.Label} htmlFor=\"surname\">Surname</label>\r\n                            <input type=\"text\" name=\"surname\"\r\n                                value={this.state.surname}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Your Surame..\"\r\n                                className={classes.Text} />\r\n                            {surnameErr &&\r\n                                <div className={classes.ErrorText}>{surnameErr}</div>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className={classes.Label} htmlFor=\"emailId\">Email</label>\r\n                            <input type=\"text\" name=\"emailId\"\r\n                                value={this.state.emailId}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Your email id..\"\r\n                                className={classes.Text} />\r\n                            {emailIdErr &&\r\n                                <div className={classes.ErrorText}>{emailIdErr}</div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div>\r\n                            <label className={classes.Label} htmlFor=\"phoneNumber\">Phone Number</label>\r\n                            <input type=\"text\" name=\"phoneNumber\"\r\n                                onChange={this.handleChange}\r\n                                value={this.state.phoneNumber}\r\n                                size=\"11\" maxLength=\"11\"\r\n                                placeholder=\"Your phone number..\"\r\n                                className={classes.Text} />\r\n                            {phoneNumberErr &&\r\n                                <div className={classes.ErrorText}>{phoneNumberErr}</div>\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <label className={classes.Label} htmlFor=\"dob\">Birth Date</label>\r\n                            <span className={classes.LabelSmall} htmlFor=\"dob\">Birth Date</span>\r\n                            <input type=\"text\" name=\"dob\"\r\n                                value={this.state.dob}\r\n                                size=\"10\" maxLength=\"10\" onKeyUp={this.handleKeyUp}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"dd/mm/yyyy\"\r\n                                className={classes.Date} />\r\n                            {dobErr &&\r\n                                <div className={classes.ErrorText}>{dobErr}</div>\r\n                            }\r\n                        </div>\r\n\r\n                        <div>\r\n                            <div onClick={this.togglePasswordShow} className={classes.TogglePassword}>{this.state.showText}</div>\r\n\r\n                            <label className={classes.Label} htmlFor=\"password\">Password</label>\r\n\r\n                            <input type={this.state.passwordType} name=\"password\"\r\n                                value={this.state.password}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Password...\"\r\n                                className={classes.Password} />\r\n                            {passwordErr &&\r\n                                <div className={classes.ErrorText}>{passwordErr}</div>\r\n                            }\r\n\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label className={classes.Label} htmlFor=\"passwordConf\">Confirm Password</label>\r\n                            <input type={this.state.passwordType} name=\"passwordConf\"\r\n                                value={this.state.passwordConf}\r\n                                onChange={this.handleChange}\r\n                                placeholder=\"Re-password\"\r\n                                className={classes.Password} />\r\n                            {passwordConfErr &&\r\n                                <div className={classes.ErrorText}>{passwordConfErr}</div>\r\n                            }\r\n\r\n                        </div>\r\n                        <div style={{display: 'flex', justifyContent: 'center', marginTop: '30px'}}>\r\n                        <input onClick={() => this.props.history.push(\"/\")}\r\n                            className={classes.Button}\r\n                            type=\"button\" value=\"Cancel\" />\r\n                        <button type=\"submit\"  className={classes.Submit} >Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div >\r\n        )\r\n    }\r\n}\r\nconst mapstateToProps = (state) => {\r\n    return {\r\n        isLoggedIn: state.login.isLoggedIn,\r\n        user: state.login.user,\r\n    }\r\n}\r\n\r\nexport default connect(mapstateToProps)(Signup);"]},"metadata":{},"sourceType":"module"}