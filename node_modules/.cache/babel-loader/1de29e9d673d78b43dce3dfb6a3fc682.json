{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport firebase from '../../config/firebase/firebase';\nexport const generateSlip = (amount, slipIndex, basePrice) => {\n  return dispatch => {\n    dispatch(EmptyEditingISlip());\n    dispatch(generateSlip2(amount, basePrice));\n    dispatch(setPurchaseAll());\n    dispatch(calculateSpecificSlipPrice(slipIndex, basePrice));\n    dispatch(calculateGrandTtoalPriceOfAllSlips());\n  };\n};\nexport const generateSlip2 = (amount, basePrice) => {\n  return {\n    type: actionTypes.GENERATE_SLIP,\n    amount: amount,\n    basePrice: basePrice\n  };\n};\nexport const setBoard = basePrice => {\n  return dispatch => {\n    firebase.database().ref(\"board\").orderByChild(\"dateKey\").limitToLast(1).once(\"value\").then(snapshot => {\n      let returned = Object.assign([], snapshot.val());\n      let wantedFixtures = [];\n      Object.keys(returned).map(key => {\n        let fixt = returned[key];\n        Object.keys(fixt).map(key2 => {\n          if (key2 !== \"isPaid\" && key2 !== \"dateKey\") wantedFixtures.push(fixt[key2]);\n          return null;\n        });\n        if (wantedFixtures.length === 13) dispatch(initializeBoard(wantedFixtures, basePrice));\n        return null;\n      });\n    });\n  };\n};\nexport const setFixtureIds = () => {\n  return {\n    type: actionTypes.SET_FIXTURE_IDS\n  };\n};\nexport const setIsToWallet = isToWallet => {\n  return {\n    type: actionTypes.SET_ISTOWALLET,\n    isToWallet: isToWallet\n  };\n};\nexport const resetReduxBoard = () => {\n  return {\n    type: actionTypes.RESET_BOARD\n  };\n};\nexport const toggleShowFunds = () => {\n  return {\n    type: actionTypes.TOGGLE_SHOWFUNDS\n  };\n};\nexport const setShowFunds = show => {\n  return {\n    type: actionTypes.SET_SHOW_FUNDS,\n    show: show\n  };\n};\nexport const toggleIsShowReceipt = () => {\n  return {\n    type: actionTypes.TOGGLE_SHOW_RECEIPT\n  };\n};\nexport const setReceipt = gameDay => {\n  return {\n    type: actionTypes.SET_RECEIPT,\n    gameDay: gameDay\n  };\n};\nexport const toggleReceiptShowHistory = receiptIndex => {\n  return {\n    type: actionTypes.TOGGLE_SHOW_RECEIPT_HISTORY,\n    receiptIndex: receiptIndex\n  };\n};\nexport const toggleShowHistory = gameIndex => {\n  return {\n    type: actionTypes.TOGGLE_SHOW_HISTORY,\n    gameIndex: gameIndex\n  };\n};\nexport const setPurchaseAll = () => {\n  return {\n    type: actionTypes.PURCHASE_ALL\n  };\n};\nexport const setIsPaying = isPaying => {\n  return {\n    type: actionTypes.SET_ISPAYING,\n    isPaying: isPaying\n  };\n};\nexport const setIsPaid = isPaid => {\n  return {\n    type: actionTypes.SET_ISPAID,\n    isPaid: isPaid\n  };\n};\nexport const checkPurchasable = index => {\n  return {\n    type: actionTypes.CHECK_PURCHASABLE,\n    slipIndex: index\n  };\n};\nexport const EmptyEditingISlip = () => {\n  return dispatch => {\n    dispatch(EmptyEditingIndexSlip());\n  };\n};\n_c = EmptyEditingISlip;\nexport const toggleSelectedTile = (slipIndex, gameIndex, sideIndex, side) => {\n  return dispatch => {\n    dispatch(toggleSelectedTile2(slipIndex, gameIndex, sideIndex, side));\n    dispatch(checkHasStartedPlaying());\n  };\n};\nexport const toggleSelectedTile2 = (slipIndex, gameIndex, sideIndex, side) => {\n  return {\n    type: actionTypes.TOGGLE_SELECTED_TILE,\n    slipIndex: slipIndex,\n    gameIndex: gameIndex,\n    sideIndex: sideIndex,\n    side: side\n  };\n};\nexport const checkHasStartedPlaying = () => {\n  return {\n    type: actionTypes.CHECK_HAS_STARED\n  };\n};\nexport const EmptyEditingIndexSlip = () => {\n  return {\n    type: actionTypes.EMPTY_EDITING_SLIP\n  };\n};\n_c2 = EmptyEditingIndexSlip;\nexport const calculateOverAllPrice = (slipIndex, gameIndex, sideIndex, basePrice) => {\n  return dispatch => {\n    dispatch(calulateGameAmount(slipIndex, gameIndex, sideIndex));\n    dispatch(calculateSpecificSlipPrice(slipIndex, basePrice));\n    dispatch(calculateGrandTtoalPriceOfAllSlips());\n  };\n};\nexport const initializeBoard = (fixtures, basePrice) => {\n  return {\n    type: actionTypes.INITIALIZE_BOARD,\n    fixtures: fixtures,\n    basePrice: basePrice\n  };\n};\nexport const addEmptySlip = basePrice => {\n  return {\n    type: actionTypes.ADD_EMPTY_SLIP,\n    basePrice: basePrice\n  };\n};\nexport const calculateSpecificSlipPrice = (slipIndex, basePrice) => {\n  return {\n    type: actionTypes.CALCULATE_EDIT_INDEX_PRICE,\n    slipIndex: slipIndex,\n    basePrice: basePrice\n  };\n};\nexport const calulateGameAmount = (slipIndex, gameIndex, sideIndex) => {\n  return {\n    type: actionTypes.CALCULATE_SLIP_PRICE,\n    slipIndex: slipIndex,\n    gameIndex: gameIndex,\n    sideIndex: sideIndex\n  };\n};\nexport const calculateGrandTtoalPriceOfAllSlips = () => {\n  return {\n    type: actionTypes.CALCULATE_GRAND_tOTAL\n  };\n};\nexport const setBoardLoading = loading => {\n  return {\n    type: actionTypes.SET_BOARD_LOADING,\n    loading: loading\n  };\n};\nexport const setEditIndex = index => {\n  return {\n    type: actionTypes.SET_EDITING_INDEX,\n    position: index\n  };\n};\nexport const setAdding = (slipIndex, isAdded) => {\n  return {\n    type: actionTypes.SET_ADDING,\n    slipIndex: slipIndex,\n    isAdded: isAdded\n  };\n};\nexport const setRemoving = (slipIndex, isRemoved) => {\n  return {\n    type: actionTypes.SET_REMOVING,\n    slipIndex: slipIndex - 1,\n    removing: isRemoved\n  };\n};\nexport const deleteAndResetAll = () => {\n  return {\n    type: actionTypes.DELETE_AND_RESET_ALL\n  };\n};\nexport const copyBetslip = position => {\n  return {\n    type: actionTypes.COPY_BETSLIP,\n    position: position\n  };\n};\nexport const removeRowFromBetSlip = deleteId => {\n  return dispatch => {\n    dispatch(removeRowFromBetSlip2(deleteId));\n    dispatch(calculateGrandTtoalPriceOfAllSlips());\n  };\n};\nexport const removeRowFromBetSlip2 = deleteId => {\n  return {\n    type: actionTypes.REMOVE_ROW_FROM_BETSLIP,\n    deleteId: deleteId\n  };\n};\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EmptyEditingISlip\");\n$RefreshReg$(_c2, \"EmptyEditingIndexSlip\");","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/store/actions/board.js"],"names":["actionTypes","firebase","generateSlip","amount","slipIndex","basePrice","dispatch","EmptyEditingISlip","generateSlip2","setPurchaseAll","calculateSpecificSlipPrice","calculateGrandTtoalPriceOfAllSlips","type","GENERATE_SLIP","setBoard","database","ref","orderByChild","limitToLast","once","then","snapshot","returned","Object","assign","val","wantedFixtures","keys","map","key","fixt","key2","push","length","initializeBoard","setFixtureIds","SET_FIXTURE_IDS","setIsToWallet","isToWallet","SET_ISTOWALLET","resetReduxBoard","RESET_BOARD","toggleShowFunds","TOGGLE_SHOWFUNDS","setShowFunds","show","SET_SHOW_FUNDS","toggleIsShowReceipt","TOGGLE_SHOW_RECEIPT","setReceipt","gameDay","SET_RECEIPT","toggleReceiptShowHistory","receiptIndex","TOGGLE_SHOW_RECEIPT_HISTORY","toggleShowHistory","gameIndex","TOGGLE_SHOW_HISTORY","PURCHASE_ALL","setIsPaying","isPaying","SET_ISPAYING","setIsPaid","isPaid","SET_ISPAID","checkPurchasable","index","CHECK_PURCHASABLE","EmptyEditingIndexSlip","toggleSelectedTile","sideIndex","side","toggleSelectedTile2","checkHasStartedPlaying","TOGGLE_SELECTED_TILE","CHECK_HAS_STARED","EMPTY_EDITING_SLIP","calculateOverAllPrice","calulateGameAmount","fixtures","INITIALIZE_BOARD","addEmptySlip","ADD_EMPTY_SLIP","CALCULATE_EDIT_INDEX_PRICE","CALCULATE_SLIP_PRICE","CALCULATE_GRAND_tOTAL","setBoardLoading","loading","SET_BOARD_LOADING","setEditIndex","SET_EDITING_INDEX","position","setAdding","isAdded","SET_ADDING","setRemoving","isRemoved","SET_REMOVING","removing","deleteAndResetAll","DELETE_AND_RESET_ALL","copyBetslip","COPY_BETSLIP","removeRowFromBetSlip","deleteId","removeRowFromBetSlip2","REMOVE_ROW_FROM_BETSLIP"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport firebase from '../../config/firebase/firebase';\r\n\r\nexport const generateSlip = (amount, slipIndex, basePrice) => {\r\n    return dispatch => {\r\n        dispatch(EmptyEditingISlip());\r\n        dispatch(generateSlip2(amount, basePrice));\r\n        dispatch(setPurchaseAll());\r\n        dispatch(calculateSpecificSlipPrice(slipIndex, basePrice));\r\n        dispatch(calculateGrandTtoalPriceOfAllSlips());\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const generateSlip2 = (amount, basePrice) => {\r\n    return {\r\n        type: actionTypes.GENERATE_SLIP,\r\n        amount: amount,\r\n        basePrice: basePrice,\r\n    }\r\n}\r\n\r\nexport const setBoard = (basePrice) => {\r\n    return dispatch => {\r\n\r\n        firebase.database().ref(\"board\").orderByChild(\"dateKey\").limitToLast(1)\r\n            .once(\"value\").then(snapshot => {\r\n                let returned = Object.assign([], snapshot.val());\r\n                let wantedFixtures = [];\r\n                Object.keys(returned).map(key => {\r\n                    let fixt = returned[key];\r\n                    Object.keys(fixt).map(key2 => {\r\n                        if (key2 !== \"isPaid\" && key2 !== \"dateKey\")\r\n                            wantedFixtures.push(fixt[key2]);\r\n                        return null;\r\n                    });\r\n                    if (wantedFixtures.length === 13)\r\n                        dispatch(initializeBoard(wantedFixtures, basePrice));\r\n                    return null;\r\n                })\r\n            });\r\n    };\r\n}\r\nexport const setFixtureIds = () => {\r\n    return {\r\n        type: actionTypes.SET_FIXTURE_IDS\r\n\r\n    }\r\n}\r\nexport const setIsToWallet = (isToWallet) => {\r\n    return {\r\n        type: actionTypes.SET_ISTOWALLET,\r\n        isToWallet: isToWallet,\r\n\r\n    }\r\n}\r\n\r\nexport const resetReduxBoard = () => {\r\n    return {\r\n        type: actionTypes.RESET_BOARD\r\n    }\r\n}\r\nexport const toggleShowFunds = () => {\r\n    return {\r\n        type: actionTypes.TOGGLE_SHOWFUNDS,\r\n    }\r\n}\r\n\r\nexport const setShowFunds = (show) => {\r\n    return {\r\n        type: actionTypes.SET_SHOW_FUNDS,\r\n        show: show\r\n    }\r\n}\r\n\r\nexport const toggleIsShowReceipt = () => {\r\n    return {\r\n        type: actionTypes.TOGGLE_SHOW_RECEIPT,\r\n    }\r\n}\r\n\r\nexport const setReceipt = (gameDay) => {\r\n    return {\r\n        type: actionTypes.SET_RECEIPT,\r\n        gameDay: gameDay\r\n    }\r\n}\r\n\r\nexport const toggleReceiptShowHistory = (receiptIndex) => {\r\n    return {\r\n        type: actionTypes.TOGGLE_SHOW_RECEIPT_HISTORY,\r\n        receiptIndex: receiptIndex\r\n    }\r\n}\r\n\r\n\r\nexport const toggleShowHistory = (gameIndex) => {\r\n    return {\r\n        type: actionTypes.TOGGLE_SHOW_HISTORY,\r\n        gameIndex: gameIndex\r\n    }\r\n}\r\n\r\nexport const setPurchaseAll = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_ALL\r\n    }\r\n}\r\n\r\nexport const setIsPaying = (isPaying) => {\r\n    return {\r\n        type: actionTypes.SET_ISPAYING,\r\n        isPaying: isPaying\r\n    }\r\n}\r\nexport const setIsPaid = (isPaid) => {\r\n    return {\r\n        type: actionTypes.SET_ISPAID,\r\n        isPaid: isPaid\r\n    }\r\n}\r\n\r\n\r\nexport const checkPurchasable = (index) => {\r\n    return {\r\n        type: actionTypes.CHECK_PURCHASABLE,\r\n        slipIndex: index\r\n    }\r\n}\r\n\r\nexport const EmptyEditingISlip = () => {\r\n    return dispatch => {\r\n        dispatch(EmptyEditingIndexSlip());\r\n    }\r\n}\r\nexport const toggleSelectedTile = (slipIndex, gameIndex, sideIndex, side) => {\r\n    return dispatch => {\r\n        dispatch(toggleSelectedTile2(slipIndex, gameIndex, sideIndex, side));\r\n        dispatch(checkHasStartedPlaying());\r\n    }\r\n}\r\nexport const toggleSelectedTile2 = (slipIndex, gameIndex, sideIndex, side) => {\r\n    return {\r\n        type: actionTypes.TOGGLE_SELECTED_TILE,\r\n        slipIndex: slipIndex,\r\n        gameIndex: gameIndex,\r\n        sideIndex: sideIndex,\r\n        side: side\r\n    };\r\n}\r\n\r\n\r\nexport const checkHasStartedPlaying = () => {\r\n    return {\r\n        type: actionTypes.CHECK_HAS_STARED\r\n    }\r\n}\r\n\r\nexport const EmptyEditingIndexSlip = () => {\r\n    return {\r\n        type: actionTypes.EMPTY_EDITING_SLIP\r\n    }\r\n}\r\nexport const calculateOverAllPrice = (slipIndex, gameIndex, sideIndex, basePrice) => {\r\n    return dispatch => {\r\n        dispatch(calulateGameAmount(slipIndex, gameIndex, sideIndex));\r\n        dispatch(calculateSpecificSlipPrice(slipIndex, basePrice))\r\n        dispatch(calculateGrandTtoalPriceOfAllSlips());\r\n    }\r\n}\r\n\r\nexport const initializeBoard = (fixtures, basePrice) => {\r\n    return {\r\n        type: actionTypes.INITIALIZE_BOARD,\r\n        fixtures: fixtures,\r\n        basePrice: basePrice\r\n    };\r\n}\r\n\r\nexport const addEmptySlip = (basePrice) => {\r\n    return {\r\n        type: actionTypes.ADD_EMPTY_SLIP,\r\n        basePrice: basePrice\r\n    };\r\n}\r\n\r\nexport const calculateSpecificSlipPrice = (slipIndex, basePrice) => {\r\n    return {\r\n        type: actionTypes.CALCULATE_EDIT_INDEX_PRICE,\r\n        slipIndex: slipIndex,\r\n        basePrice: basePrice\r\n    };\r\n}\r\n\r\n\r\nexport const calulateGameAmount = (slipIndex, gameIndex, sideIndex) => {\r\n    return {\r\n        type: actionTypes.CALCULATE_SLIP_PRICE,\r\n        slipIndex: slipIndex,\r\n        gameIndex: gameIndex,\r\n        sideIndex: sideIndex\r\n\r\n    };\r\n}\r\n\r\n\r\nexport const calculateGrandTtoalPriceOfAllSlips = () => {\r\n    return {\r\n        type: actionTypes.CALCULATE_GRAND_tOTAL,\r\n\r\n    };\r\n}\r\nexport const setBoardLoading = (loading) => {\r\n    return {\r\n        type: actionTypes.SET_BOARD_LOADING,\r\n        loading: loading\r\n    }\r\n}\r\n\r\nexport const setEditIndex = (index) => {\r\n    return {\r\n        type: actionTypes.SET_EDITING_INDEX,\r\n        position: index\r\n    }\r\n}\r\n\r\nexport const setAdding = (slipIndex, isAdded) => {\r\n    return {\r\n        type: actionTypes.SET_ADDING,\r\n        slipIndex: slipIndex,\r\n        isAdded: isAdded\r\n    }\r\n}\r\n\r\nexport const setRemoving = (slipIndex, isRemoved) => {\r\n    return {\r\n        type: actionTypes.SET_REMOVING,\r\n        slipIndex: slipIndex - 1,\r\n        removing: isRemoved\r\n    }\r\n}\r\n\r\n\r\nexport const deleteAndResetAll = () => {\r\n    return {\r\n        type: actionTypes.DELETE_AND_RESET_ALL\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const copyBetslip = (position) => {\r\n    return {\r\n        type: actionTypes.COPY_BETSLIP,\r\n        position: position\r\n    };\r\n}\r\n\r\n\r\nexport const removeRowFromBetSlip = (deleteId) => {\r\n    return dispatch => {\r\n        dispatch(removeRowFromBetSlip2(deleteId));\r\n        dispatch(calculateGrandTtoalPriceOfAllSlips());\r\n    };\r\n}\r\n\r\nexport const removeRowFromBetSlip2 = (deleteId) => {\r\n    return {\r\n        type: actionTypes.REMOVE_ROW_FROM_BETSLIP,\r\n        deleteId: deleteId\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}