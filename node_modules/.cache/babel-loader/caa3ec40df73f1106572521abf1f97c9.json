{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\containers\\\\PlayRow\\\\PlayRow.js\";\nimport SingleTile from \"../../components/board/tile/SingleTile/SingleTile\";\nimport Team from \"../../components/board/team/team\";\nimport classes from \"./PlayRow.module.css\";\nimport Button from 'react-bootstrap/Button';\nimport { Component } from \"react\";\nimport { CaretDownFill, CaretUpFill } from \"react-bootstrap-icons\";\nimport Stats from '../../components/board/Stats/Stats';\nimport WithErrorHandler from '../../hoc/WithErrorHandler/withErrorHandler';\nimport axios from '../../axios-fixtures';\n\nclass PlayRow extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoaded: false\n    };\n\n    this.HandlePredictions = (gameIndex, fixture_id) => {\n      this.props.fetchPredictionsAll(fixture_id, gameIndex);\n      this.props.toggleShowHistory(gameIndex);\n    };\n\n    this.HandlerAdd = (slipIndex, gameIndex, sideIndex, side, basePrice) => {\n      this.props.toggleSelectedTile(slipIndex, gameIndex, sideIndex, side);\n      this.props.checkPurchasable(slipIndex);\n      this.props.setPurchaseAll();\n      this.props.CalculateOverAllPrice(slipIndex, gameIndex, sideIndex, basePrice);\n      this.props.checkPurchasable(slipIndex);\n    };\n  }\n\n  render() {\n    let board = [];\n    const gameId = \"game_\";\n    board = this.props.slips[this.props.editIndex][\"slip_\" + (this.props.editIndex + 1)].games.map((game, k) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.PlayRow,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.TeamAndSelection,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.Teams,\n            children: /*#__PURE__*/_jsxDEV(Team, {\n              team1: game[gameId + (k + 1)].team1,\n              team2: game[gameId + (k + 1)].team2,\n              row: k + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.SingleTiles,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.SingleTilesInner,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.SingleTile,\n                children: /*#__PURE__*/_jsxDEV(SingleTile, {\n                  type: \"home\",\n                  selected: game[gameId + (k + 1)].sides[0].selected,\n                  clicked: () => this.HandlerAdd(this.props.editIndex, k, 0, game[gameId + (k + 1)].sides[0].selected, this.props.basePrice)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.SingleTile,\n                children: /*#__PURE__*/_jsxDEV(SingleTile, {\n                  type: \"draw\",\n                  selected: game[gameId + (k + 1)].sides[1].selected,\n                  clicked: () => this.HandlerAdd(this.props.editIndex, k, 1, game[gameId + (k + 1)].sides[1].selected, this.props.basePrice)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.SingleTileLast,\n                children: /*#__PURE__*/_jsxDEV(SingleTile, {\n                  type: \"away\",\n                  selected: game[gameId + (k + 1)].sides[2].selected,\n                  clicked: () => this.HandlerAdd(this.props.editIndex, k, 2, game[gameId + (k + 1)].sides[2].selected, this.props.basePrice)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.Toggler,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.BtToggle,\n                  size: \"sm\",\n                  onClick: () => this.HandlePredictions(k, game.fixture_id),\n                  children: [!game.showHistory ? /*#__PURE__*/_jsxDEV(CaretDownFill, {\n                    className: classes.Icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 44\n                  }, this) : /*#__PURE__*/_jsxDEV(CaretUpFill, {\n                    className: classes.Icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 89\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), game.showHistory && this.props.predictions !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: /*#__PURE__*/_jsxDEV(Stats, {\n            predictions: this.props.predictions.filter((pred, i) => {\n              return pred.gameIndex === k;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 68\n        }, this) : null]\n      }, k, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: board\n    }, void 0, false);\n  }\n\n}\n\n;\nexport default _c = WithErrorHandler(PlayRow, axios);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/containers/PlayRow/PlayRow.js"],"names":["SingleTile","Team","classes","Button","Component","CaretDownFill","CaretUpFill","Stats","WithErrorHandler","axios","PlayRow","state","isLoaded","HandlePredictions","gameIndex","fixture_id","props","fetchPredictionsAll","toggleShowHistory","HandlerAdd","slipIndex","sideIndex","side","basePrice","toggleSelectedTile","checkPurchasable","setPurchaseAll","CalculateOverAllPrice","render","board","gameId","slips","editIndex","games","map","game","k","TeamAndSelection","Teams","team1","team2","SingleTiles","SingleTilesInner","sides","selected","SingleTileLast","Toggler","BtToggle","showHistory","Icon","predictions","filter","pred","i"],"mappings":"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","sourcesContent":["import SingleTile from \"../../components/board/tile/SingleTile/SingleTile\";\r\nimport Team from \"../../components/board/team/team\";\r\nimport classes from \"./PlayRow.module.css\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { Component } from \"react\";\r\nimport { CaretDownFill, CaretUpFill } from \"react-bootstrap-icons\";\r\nimport Stats from '../../components/board/Stats/Stats';\r\nimport WithErrorHandler from '../../hoc/WithErrorHandler/withErrorHandler';\r\nimport axios from '../../axios-fixtures';\r\nclass PlayRow extends Component {\r\n  state = {\r\n    isLoaded: false\r\n  }\r\n  HandlePredictions = (gameIndex, fixture_id) => {\r\n    this.props.fetchPredictionsAll(fixture_id, gameIndex);\r\n    this.props.toggleShowHistory(gameIndex);\r\n\r\n  }\r\n  HandlerAdd = (slipIndex, gameIndex, sideIndex, side, basePrice) => {\r\n    this.props.toggleSelectedTile(slipIndex, gameIndex, sideIndex, side);\r\n    this.props.checkPurchasable(slipIndex);\r\n    this.props.setPurchaseAll();\r\n    this.props.CalculateOverAllPrice(slipIndex, gameIndex, sideIndex, basePrice);\r\n    this.props.checkPurchasable(slipIndex);\r\n\r\n  };\r\n  render() {\r\n    let board = [];\r\n\r\n    const gameId = \"game_\";\r\n    board = this.props.slips[this.props.editIndex][\r\n      \"slip_\" + (this.props.editIndex + 1)\r\n    ].games.map((game, k) => {\r\n      return (\r\n        <div className={classes.PlayRow} key={k}>\r\n          <div className={classes.TeamAndSelection} >\r\n            <div className={classes.Teams} >\r\n              <Team\r\n                team1={game[gameId + (k + 1)].team1}\r\n                team2={game[gameId + (k + 1)].team2}\r\n                row={k + 1}\r\n              />\r\n            </div>\r\n            <div className={classes.SingleTiles} >\r\n              {\r\n                <div className={classes.SingleTilesInner}  >\r\n                  <div className={classes.SingleTile}>\r\n                    <SingleTile\r\n                      type={\"home\"}\r\n                      selected={game[gameId + (k + 1)].sides[0].selected}\r\n                      clicked={() =>\r\n                        this.HandlerAdd(\r\n                          this.props.editIndex,\r\n                          k,\r\n                          0,\r\n                          game[gameId + (k + 1)].sides[0].selected,\r\n                          this.props.basePrice\r\n                        )\r\n                      }\r\n                    />\r\n                  </div>\r\n\r\n                  <div className={classes.SingleTile}>\r\n                    <SingleTile\r\n                      type={\"draw\"}\r\n                      selected={game[gameId + (k + 1)].sides[1].selected}\r\n                      clicked={() =>\r\n                        this.HandlerAdd(\r\n                          this.props.editIndex,\r\n                          k,\r\n                          1,\r\n                          game[gameId + (k + 1)].sides[1].selected,\r\n                          this.props.basePrice\r\n                        )\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className={classes.SingleTileLast}>\r\n\r\n                    <SingleTile\r\n                      type={\"away\"}\r\n                      selected={game[gameId + (k + 1)].sides[2].selected}\r\n                      clicked={() =>\r\n                        this.HandlerAdd(\r\n                          this.props.editIndex,\r\n                          k,\r\n                          2,\r\n                          game[gameId + (k + 1)].sides[2].selected,\r\n                          this.props.basePrice\r\n                        )\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className={classes.Toggler} >\r\n                    <Button className={classes.BtToggle} size=\"sm\" onClick={() => this.HandlePredictions(k, game.fixture_id)}>\r\n                      {!game.showHistory ? <CaretDownFill className={classes.Icon} /> : <CaretUpFill className={classes.Icon} />} </Button>\r\n                  </div>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n          {(game.showHistory && this.props.predictions !== null) ? <div className=\"\">\r\n              <Stats predictions={this.props.predictions.filter((pred, i) => {\r\n                return pred.gameIndex === k\r\n              })}\r\n\r\n              /></div> : null}\r\n        </div>\r\n      );\r\n    });\r\n    return <>{board}</>;\r\n  }\r\n};\r\n\r\nexport default WithErrorHandler(PlayRow, axios);\r\n"]},"metadata":{},"sourceType":"module"}