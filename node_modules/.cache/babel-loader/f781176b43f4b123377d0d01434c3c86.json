{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\components\\\\Payments\\\\ToBank\\\\ConfirmPassword\\\\ConfirmPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './ConfirmPassword.module.css';\nimport firebase from 'firebase';\n\nconst ConfirmPassword = props => {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const [counter, setCounter] = useState(3);\n\n  const HandleSubmit = e => {\n    e.preventDefault();\n    firebase.auth().onAuthStateChanged(user => {\n      if (user && user.emailVerified) {\n        var credential = firebase.auth.EmailAuthProvider.credential(user.email, password.trim());\n        user.reauthenticateWithCredential(credential).then(cred => {\n          if (props.isWithDraw) {\n            props.handleWithdraw();\n          } else {\n            props.HandleSave();\n          }\n\n          props.cancel();\n        }).catch(error => {\n          if (counter <= 1) props.cancel();\n          setCounter(counter - 1);\n          setError(\"Invalid Password\");\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Enter Your Password: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error + \" \" + counter + \" more attempts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 18\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => HandleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: classes.Input,\n          type: \"password\",\n          onChange: e => setPassword(e.target.value),\n          value: password,\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.cancel,\n        className: classes.CancelButton,\n        variant: \"light\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: classes.ConfirmButton,\n        style: {\n          background: 'green',\n          color: 'white'\n        },\n        variant: \"success\",\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ConfirmPassword, \"xNN6JHSMhJJNaurv8xHYGz+lMyY=\");\n\n_c = ConfirmPassword;\nexport default ConfirmPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmPassword\");","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/components/Payments/ToBank/ConfirmPassword/ConfirmPassword.js"],"names":["React","useState","classes","firebase","ConfirmPassword","props","password","setPassword","error","setError","counter","setCounter","HandleSubmit","e","preventDefault","auth","onAuthStateChanged","user","emailVerified","credential","EmailAuthProvider","email","trim","reauthenticateWithCredential","then","cred","isWithDraw","handleWithdraw","HandleSave","cancel","catch","color","Input","target","value","CancelButton","ConfirmButton","background"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport classes from './ConfirmPassword.module.css';\r\nimport firebase from 'firebase';\r\n\r\nconst ConfirmPassword = (props) => {\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [counter, setCounter] = useState(3);\r\n\r\n    const HandleSubmit = (e) => {\r\n        e.preventDefault();\r\n        firebase.auth().onAuthStateChanged((user) => {\r\n            if (user && user.emailVerified) {\r\n                var credential = firebase.auth.EmailAuthProvider.credential(\r\n                    user.email, password.trim());\r\n                user.reauthenticateWithCredential(credential)\r\n                    .then((cred) => {\r\n                        if (props.isWithDraw) {\r\n                            props.handleWithdraw();\r\n                        } else {\r\n                            props.HandleSave();\r\n                        }\r\n                        props.cancel();\r\n                    })\r\n                    .catch((error) => {\r\n                        if (counter <= 1)\r\n                            props.cancel();\r\n                        setCounter(counter - 1);\r\n                        setError(\"Invalid Password\");\r\n                    })\r\n\r\n\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    return <div>\r\n\r\n        <h3>Enter Your Password: </h3>\r\n        {error ? <div style={{ color: 'red' }}>{error + \" \" + counter + \" more attempts\"}</div> : null}\r\n        <form onSubmit={(e) => HandleSubmit(e)}>\r\n            <div>\r\n                <input className={classes.Input} type=\"password\" onChange={(e) => setPassword(e.target.value)}\r\n                    value={password} placeholder=\"password\" />\r\n            </div>\r\n            <button type=\"button\" onClick={props.cancel}\r\n                className={classes.CancelButton} variant=\"light\">Cancel</button>\r\n            <button type=\"submit\" className={classes.ConfirmButton} style={{ background: 'green', color: 'white' }} variant=\"success\">Confirm</button>\r\n        </form>\r\n\r\n    </div>\r\n}\r\n\r\nexport default ConfirmPassword;\r\n"]},"metadata":{},"sourceType":"module"}