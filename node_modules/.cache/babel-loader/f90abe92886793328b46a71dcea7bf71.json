{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\components\\\\UI\\\\LandingPage\\\\landing.jsx\";\nimport React, { Component } from \"react\";\nimport classes from \"./landing.module.css\";\nimport { connect } from \"react-redux\";\nimport CountDown from \"../CountDown/CountDown\";\nimport Footer from \"../Footer/Footer\";\nimport firebase from '../../../config/firebase/firebase';\nimport { Container } from 'react-bootstrap';\nimport { addCommaToAmounts, getNextPlayDate } from \"..//../../shared/utility\";\nimport moment from \"moment\";\nimport guy from '../../../assets/guy.png';\nimport ball from '../../../assets/ball.png';\n\nclass Landing extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getJackpo = () => {\n      firebase.database().ref(\"jackpots\").child(moment(this.kickOffDate).format(\"YYYY-MM-DD\")).on(\"value\", snapshot => {\n        this.setState({\n          jackpot: snapshot.val().jackpot\n        });\n      });\n    };\n\n    this.state = {\n      loading: false,\n      gameDateRaw: null,\n      jackpot: null,\n      isGamesAvailable: true\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.loading) {\n      firebase.database().ref(\"board\").orderByChild(\"dateKey\").limitToLast(1).once(\"value\").then(snapshot => {\n        let data = Object.keys(snapshot.val())[0];\n        this.kickOffDate = data;\n        let kickOffDate;\n        kickOffDate = getNextPlayDate(this.props.daysOffset, this.props.hourToNextDay);\n\n        if (new Date(data + \"T\" + this.props.kickOffTime) < new Date(kickOffDate)) {\n          this.setState({\n            isGamesAvailable: false\n          });\n        }\n\n        this.getJackpo();\n        this.setState({\n          gameDateRaw: this.kickOffDate + \"T\" + this.props.kickOffTime\n        });\n      });\n    }\n\n    this.setState({\n      loading: true\n    });\n    setTimeout(() => {\n      this.interval = setInterval(() => this.getJackpo(), 30 * 60 * 1000);\n    }, 2000);\n  }\n\n  componentWillUnmount() {\n    firebase.database().ref(\"jackpots\").off();\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: classes.wrapperLand,\n        style: {\n          position: 'relative'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [this.state.loading && this.state.gameDateRaw ? /*#__PURE__*/_jsxDEV(CountDown, {\n            gamedate: this.state.gameDateRaw\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 61\n          }, this) : null, this.state.jackpot >= 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.Jackpot,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.JapotText,\n              children: \"Jackpot: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 72\n            }, this), this.state.isGamesAvailable ? \" â‚¦ \" + addCommaToAmounts(this.state.jackpot) : \"Sorry, No games this week\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 39\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.ball_img,\n          src: ball,\n          width: \"200px\",\n          alt: \"ball\",\n          style: {\n            position: 'absolute',\n            right: '100px',\n            bottom: '200px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    gameDateRaw: state.board.gameDateRaw,\n    hourToNextDay: state.config.hourToNextDay,\n    daysOffset: state.config.daysOffset,\n    kickOffTime: state.config.kickOffTime\n  };\n};\n\nexport default connect(mapStateToProps)(Landing);","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/components/UI/LandingPage/landing.jsx"],"names":["React","Component","classes","connect","CountDown","Footer","firebase","Container","addCommaToAmounts","getNextPlayDate","moment","guy","ball","Landing","constructor","props","getJackpo","database","ref","child","kickOffDate","format","on","snapshot","setState","jackpot","val","state","loading","gameDateRaw","isGamesAvailable","componentDidMount","orderByChild","limitToLast","once","then","data","Object","keys","daysOffset","hourToNextDay","Date","kickOffTime","setTimeout","interval","setInterval","componentWillUnmount","off","clearInterval","render","wrapperLand","position","Jackpot","JapotText","ball_img","right","bottom","mapStateToProps","board","config"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport classes from \"./landing.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport CountDown from \"../CountDown/CountDown\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport firebase from '../../../config/firebase/firebase';\r\nimport { Container } from 'react-bootstrap'\r\nimport { addCommaToAmounts, getNextPlayDate } from \"..//../../shared/utility\";\r\nimport moment from \"moment\";\r\nimport guy from '../../../assets/guy.png'\r\nimport ball from '../../../assets/ball.png'\r\n\r\nclass Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      gameDateRaw: null,\r\n      jackpot: null,\r\n      isGamesAvailable: true\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (!this.state.loading) {\r\n      firebase.database().ref(\"board\").orderByChild(\"dateKey\").limitToLast(1).once(\"value\")\r\n        .then(snapshot => {\r\n          let data = Object.keys(snapshot.val())[0]\r\n          this.kickOffDate = data;\r\n          let kickOffDate;\r\n          kickOffDate = getNextPlayDate(this.props.daysOffset,\r\n            this.props.hourToNextDay);\r\n          if (new Date(data + \"T\" + this.props.kickOffTime) < new Date(kickOffDate)) {\r\n            this.setState({ isGamesAvailable: false })\r\n          }\r\n          this.getJackpo();\r\n          this.setState({ gameDateRaw: this.kickOffDate + \"T\" + this.props.kickOffTime });\r\n\r\n        })\r\n    }\r\n    this.setState({ loading: true })\r\n    setTimeout(() => {\r\n      this.interval = setInterval(() => this.getJackpo(), 30 * 60 * 1000)\r\n    }, 2000);\r\n  }\r\n  getJackpo = () => {\r\n    firebase.database().ref(\"jackpots\").child(moment(this.kickOffDate).format(\"YYYY-MM-DD\"))\r\n      .on(\"value\", snapshot => {\r\n        this.setState({ jackpot: snapshot.val().jackpot });\r\n      })\r\n  }\r\n  componentWillUnmount() {\r\n    firebase.database().ref(\"jackpots\").off();\r\n    clearInterval(this.interval);\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className={classes.wrapperLand} style={{position: 'relative'}}>\r\n          <div >\r\n            {this.state.loading && this.state.gameDateRaw ? <CountDown gamedate={this.state.gameDateRaw} /> : null}\r\n           \r\n         \r\n           {this.state.jackpot >= 0 ? <div className={classes.Jackpot}><div className={classes.JapotText}>Jackpot: </div>{this.state.isGamesAvailable ? \" â‚¦ \" + addCommaToAmounts(this.state.jackpot) : \"Sorry, No games this week\"}</div> : null}\r\n          \r\n\r\n          </div>\r\n          <img className={classes.ball_img} src={ball} width='200px' alt='ball' style={{position: 'absolute', right: '100px', bottom: '200px'}}/>\r\n        </Container>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    gameDateRaw: state.board.gameDateRaw,\r\n    hourToNextDay: state.config.hourToNextDay,\r\n    daysOffset: state.config.daysOffset,\r\n    kickOffTime: state.config.kickOffTime,\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Landing);\r\n"]},"metadata":{},"sourceType":"module"}