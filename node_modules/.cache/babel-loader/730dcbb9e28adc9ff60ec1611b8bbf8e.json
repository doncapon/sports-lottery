{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Emma\\\\Documents\\\\GitHub\\\\Emp\\\\sports-lottery\\\\src\\\\containers\\\\Settings\\\\Settings.js\";\nimport React, { Component } from 'react';\nimport { Button } from \"react-bootstrap\";\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\nimport classes from './Settings.module.css';\nimport { getNextPlayDate, dateInYYYYMMDD } from '../../shared/utility';\nimport firebase from '../../config/firebase/firebase';\nimport moment from 'moment';\n\nclass Settings extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      disable: false,\n      loading: false,\n      tenWinners: 0,\n      elevenWinners: 0,\n      twelveWinners: 0,\n      thirteenWinners: 0,\n      email: '',\n      gameDate: ''\n    };\n\n    this.handleUpdateBoard = () => {\n      firebase.database().ref(\"board\").orderByChild(\"dateKey\").limitToLast(1).once(\"value\").then(snapshot => {\n        let date = Object.keys(snapshot.val())[0];\n        let data = snapshot.val();\n        let fixturesToPush = [];\n        Object.keys(data).map(key => {\n          Object.keys(data[key]).map(keys2 => {\n            if (keys2 !== \"dateKey\" && keys2 !== \"isPaid\") {\n              fixturesToPush.push(data[key][keys2]);\n            }\n\n            return null;\n          });\n          return null;\n        });\n        this.props.onUpdateBoard(fixturesToPush, date);\n      });\n    };\n\n    this.handlecConfigureBoard = () => {\n      this.props.onSetIsBoardSet(false);\n      let kickOffDate;\n      kickOffDate = getNextPlayDate(this.props.daysOffset, this.props.hourToNextDay);\n      setTimeout(() => {\n        this.props.onConfigureBoard(false, this.props.kickOffTime, dateInYYYYMMDD(kickOffDate)); //this.state.gameDate\n      }, 3000);\n      setTimeout(() => {\n        if (this.props.isBoardSet === false) {\n          this.props.onConfigureBoard(true, this.props.kickOffTime, dateInYYYYMMDD(kickOffDate)); //this.state.gameDate\n        }\n      }, 6000);\n      let date = new Date(dateInYYYYMMDD(kickOffDate));\n      date.setDate(date.getDate() + 7);\n      let kickOffDateNew = moment(date).format(\"DD-MM-YYYY\");\n      setTimeout(() => {\n        if (this.props.isBoardSet === false) {\n          this.props.onConfigureBoard(false, this.props.kickOffTime, dateInYYYYMMDD(kickOffDateNew)); //this.state.gameDate\n        }\n      }, 9000);\n      setTimeout(() => {\n        if (this.props.isBoardSet === false) {\n          this.props.onConfigureBoard(true, this.props.kickOffTime, dateInYYYYMMDD(kickOffDateNew)); //this.state.gameDate\n        }\n      }, 12000);\n      setTimeout(() => {\n        window.localStorage.removeItem('firebase:host:betsoka-4b359-default-rtdb.europe-west1.firebasedatabase.app');\n        window.localStorage.removeItem('persist:root');\n        window.location.reload();\n      }, 13000);\n    };\n\n    this.handleSetResultss = () => {\n      this.props.onSetCurrentResult(this.props.slips[0][\"slip_1\"]);\n      alert(\"results hae been set or updated\");\n    };\n\n    this.translateResult = (goalHome, goalAway, status) => {\n      if (status === \"Match Finished\") {\n        if (goalHome > goalAway) {\n          return \"H\";\n        } else if (goalHome < goalAway) {\n          return \"A\";\n        } else {\n          return \"D\";\n        }\n      } else {\n        return \"-\";\n      }\n    };\n\n    this.determineSelection = (choice, position) => {\n      if (choice) {\n        if (position === 0) {\n          return \"H\";\n        } else if (position === 1) {\n          return \"D\";\n        } else {\n          return \"A\";\n        }\n      } else {\n        return \"-\";\n      }\n    };\n\n    this.calculateWins = (match, matchRes) => {\n      let allFinished = 0;\n      let sideWon = 0;\n\n      for (let i = 0; i < matchRes.length; i++) {\n        if (matchRes[i].status !== \"Match Finished\" && matchRes[i].status !== undefined) {\n          allFinished++;\n          break;\n        }\n      }\n\n      for (let i = 0; i < matchRes.length; i++) {\n        for (let k = 0; k < 3; k++) {\n          let left = this.translateResult(matchRes[i].homeGoals, matchRes[i].awayGoals, matchRes[i].status);\n          let right = this.determineSelection(match.games[i].selections[k].selected, k);\n\n          if (left === right && left !== \"-\" && right !== \"-\") {\n            sideWon++;\n          }\n        }\n      }\n\n      if (allFinished === 1) {\n        sideWon++;\n      }\n\n      return sideWon;\n    };\n\n    this.calculaterWiinerAmount = () => {\n      let jackpotRef = firebase.database().ref(\"jackpots\").child(dateInYYYYMMDD(this.state.gameDate));\n      jackpotRef.on(\"value\", snapshot => {\n        let data = snapshot.val();\n        let thirteen = 0;\n        let twelve = 0;\n        let eleven = 0;\n        let ten = 0;\n\n        if (data !== null) {\n          if (data.jackpot > 0) {\n            if (data.thirteenUser > 0) {\n              thirteen = data.jackpot * this.props.thirteenPercent / data.thirteenUser;\n              firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({\n                thirteen: thirteen\n              });\n            } else {\n              firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({\n                thirteen: 0\n              });\n            }\n\n            if (data.twelveUser > 0) {\n              twelve = data.jackpot * this.props.twelvePercent / data.twelveUser;\n              firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({\n                twelve: twelve\n              });\n            } else {\n              firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({\n                twelve: 0\n              });\n            }\n\n            if (data.elevenUser > 0) {\n              eleven = data.jackpot * this.props.elevenPercent / data.elevenUser;\n              firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({\n                eleven: eleven\n              });\n            } else {\n              firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({\n                eleven: 0\n              });\n            }\n\n            if (data.tenUser > 0) {\n              ten = data.jackpot * this.props.tenPercent / data.tenUser;\n              firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({\n                ten: ten\n              });\n            } else {\n              firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({\n                ten: 0\n              });\n            }\n          } else {\n            alert(\"there's no Jacpot, no players\");\n          }\n        } else {\n          alert(\"No games recorded for  chosen day \" + this.state.gameDate);\n        }\n\n        firebase.database().ref(\"jackpots\").off();\n        firebase.database().ref(\"jackpot-win\").off();\n      });\n    };\n\n    this.setMatchResults = matchesPlayed => {\n      let matchResults = [];\n      let inner = [];\n      matchesPlayed.games.forEach((match, k) => {\n        let matchResRef = firebase.database().ref(\"match-results\").child(match.fixture_id);\n        matchResRef.once(\"value\", snapshot => {\n          let data = Object.assign({}, snapshot.val());\n          inner.push(data);\n        });\n        matchResults.splice(matchResults.length, matchResults.length + 1, inner);\n      });\n      return matchResults;\n    };\n\n    this.shareJackpot = e => {\n      e.preventDefault();\n      this.setState({\n        disable: true\n      });\n      let matchesPlayedRef = firebase.database().ref(\"game-history\");\n      let boardRef = firebase.database().ref(\"board\").child(dateInYYYYMMDD(this.state.gameDate));\n      boardRef.once(\"value\").then(snapshot => {\n        let data = snapshot.val();\n\n        if (!data.isPaid) {\n          matchesPlayedRef.once(\"value\").then(snapshot => {\n            let data = snapshot.val();\n            Object.keys(data).map(keys => {\n              let matches = data[keys];\n              return Object.keys(matches).map(key => {\n                let matchesPlayed = matches[key];\n                let endDate = new Date(dateInYYYYMMDD(this.state.gameDate) + \"T\" + this.props.kickOffTime);\n                let startDate = endDate.getDate() - 7;\n                let matchDate = new Date(matchesPlayed.datePlayed);\n\n                if (matchesPlayed.evaluationDate === dateInYYYYMMDD(this.state.gameDate)) {\n                  if (matchDate <= endDate && matchDate >= startDate) {\n                    if (!matchesPlayed.isEvaluated) {\n                      let matchRes = this.setMatchResults(matchesPlayed);\n                      let hits;\n                      setTimeout(() => {\n                        hits = this.calculateWins(matchesPlayed, matchRes[0]);\n                      }, 500);\n                      setTimeout(() => {\n                        firebase.database().ref(\"game-history\").child(matchesPlayed.userId).child(matchesPlayed.gameNumber).update({\n                          hits: hits\n                        });\n\n                        if (hits === 10) {\n                          this.setState({\n                            tenWinners: this.state.tenWinners + 1\n                          });\n                        } else if (hits === 11) {\n                          this.setState({\n                            elevenWinners: this.state.elevenWinners + 1\n                          });\n                        } else if (hits === 12) {\n                          this.setState({\n                            twelveWinners: this.state.twelveWinners + 1\n                          });\n                        } else if (hits === 13) {\n                          this.setState({\n                            thirteenWinners: this.state.thirteenWinners + 1\n                          });\n                        }\n\n                        firebase.database().ref(\"game-history\").child(matchesPlayed.userId).child(matchesPlayed.gameNumber).update({\n                          isEvaluated: true\n                        });\n                        firebase.database().ref(\"jackpots\").child(matchesPlayed.evaluationDate).update({\n                          tenUser: this.state.tenWinners\n                        });\n                        firebase.database().ref(\"jackpots\").child(matchesPlayed.evaluationDate).update({\n                          elevenUser: this.state.elevenWinners\n                        });\n                        firebase.database().ref(\"jackpots\").child(matchesPlayed.evaluationDate).update({\n                          twelveUser: this.state.twelveWinners\n                        });\n                        firebase.database().ref(\"jackpots\").child(matchesPlayed.evaluationDate).update({\n                          thirteenUser: this.state.thirteenWinners\n                        });\n                      }, 2000);\n                    }\n                  }\n                }\n\n                return null;\n              });\n            });\n            firebase.database().ref(\"jackpots\").off();\n            firebase.database().ref(\"match-results\").off();\n            firebase.database().ref(\"game-history\").off();\n          });\n          setTimeout(() => {\n            this.calculaterWiinerAmount();\n            this.setState({\n              disable: false\n            });\n          }, 30000); //Subject to change with huge data possible to 1 hour\n\n          boardRef.update({\n            isPaid: true\n          });\n          firebase.database().ref(\"board\").off();\n          setTimeout(() => {\n            alert(\"Jackpot successfully shared\");\n          }, 30000); //Subject to change\n        } else {\n          setTimeout(() => {\n            alert(\"games have already been shared for this day and board\");\n          }, 2000);\n        }\n\n        setTimeout(() => {\n          window.location.reload();\n        }, 30000);\n      });\n    };\n\n    this.payOut = e => {\n      e.preventDefault();\n      this.setState({\n        disable: true\n      });\n      let matchesPlayedRef = firebase.database().ref(\"game-history\");\n      matchesPlayedRef.on(\"value\", snapshot => {\n        let data = snapshot.val();\n        Object.keys(data).map(keys => {\n          let matches = data[keys];\n          return Object.keys(matches).map(key => {\n            let matchesPlayed = matches[key];\n\n            if (matchesPlayed.evaluationDate === dateInYYYYMMDD(this.state.gameDate)) {\n              if (matchesPlayed.isEvaluated && !matchesPlayed.isPaid) {\n                let hits = matchesPlayed.hits;\n                let data;\n                firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).on(\"value\", snapshot => {\n                  data = snapshot.val();\n                });\n                setTimeout(() => {\n                  if (hits === 10) {\n                    firebase.database().ref(\"users\").child(matchesPlayed.userId).child(\"funds\").transaction(funds => {\n                      return funds + data.ten;\n                    });\n                  } else if (hits === 11) {\n                    firebase.database().ref(\"users\").child(matchesPlayed.userId).child(\"funds\").transaction(funds => {\n                      return funds + data.eleven;\n                    });\n                  } else if (hits === 12) {\n                    firebase.database().ref(\"users\").child(matchesPlayed.userId).child(\"funds\").transaction(funds => {\n                      return funds + data.twelve;\n                    });\n                  } else if (hits === 13) {\n                    firebase.database().ref(\"users\").child(matchesPlayed.userId).child(\"funds\").transaction(funds => {\n                      return funds + data.thirteen;\n                    });\n                  }\n\n                  matchesPlayedRef.child(matchesPlayed.userId).child(matchesPlayed.gameNumber).update({\n                    isPaid: true\n                  });\n                  setTimeout(() => {\n                    firebase.database().ref(\"users\").off();\n                  }, 1500);\n                }, 2000);\n              }\n            }\n\n            return null;\n          });\n        });\n        firebase.database().ref(\"jackpot-win\").off();\n        firebase.database().ref(\"users\").off();\n        firebase.database().ref(\"game-history\").off();\n      });\n      setTimeout(() => {\n        window.location.reload();\n      }, 10000);\n    };\n\n    this.setupJackpot = e => {\n      e.preventDefault();\n      firebase.database().ref(\"board\").limitToLast(1).on(\"value\", snapshot => {\n        let data = snapshot.val();\n        Object.keys(data).map(key => {\n          let jackpotData;\n          firebase.database().ref(\"jackpots\").child(key).on(\"value\", snapshot => {\n            jackpotData = snapshot.val();\n          });\n          setTimeout(() => {\n            if (jackpotData === null) {\n              firebase.database().ref(\"jackpots\").child(key).set({\n                jackpot: 0,\n                tenUser: 0,\n                elevenUser: 0,\n                twelveUser: 0,\n                thirteenUser: 0\n              });\n              alert(\"done\");\n            } else {\n              alert(\"this is already set, cannot reset\");\n            }\n          }, 3000);\n          firebase.database().ref(\"jackpots\").off();\n          firebase.database().ref(\"board\").off();\n          return null;\n        });\n      });\n    };\n\n    this.deleteUserByEmail = (e, email) => {\n      e.preventDefault();\n      let notfound = true;\n      firebase.database().ref(\"users\").on(\"value\", snapshot => {\n        let users = snapshot.val();\n        Object.keys(users).map(key => {\n          let user = users[key];\n\n          if (user.email === email && user.role.toLocaleLowerCase() !== \"admin\") {\n            firebase.database().ref('users').child(key).remove();\n            notfound = false;\n            alert(\"deleted\");\n            setTimeout(() => {\n              firebase.database().ref(\"users\").off();\n            }, 1000);\n          }\n\n          return null;\n        });\n        if (notfound) alert(\"User not found\");\n      });\n      setTimeout(() => {\n        firebase.database().ref(\"users\").off();\n      }, 5000);\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.loading) {\n      firebase.database().ref(\"board\").orderByChild(\"dateKey\").limitToLast(1).on(\"value\", snapshot => {\n        this.setState({\n          gameDate: Object.keys(snapshot.val())[0]\n        });\n      });\n    }\n\n    this.setState({\n      loading: true\n    });\n  }\n\n  render() {\n    if (this.props.user.role !== \"admin\" || !this.props.isLoggedIn) {\n      this.props.history.push(\"/\");\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.SettingsWrapper,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"user email to logut\",\n          onChange: e => this.setState({\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: e => this.deleteUserByEmail(e, this.state.email),\n          variant: \"outline-danger\",\n          children: \"Delete User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handlecConfigureBoard,\n          children: \"Configure Play Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          onClick: this.setupJackpot,\n          disabled: this.state.disable,\n          children: \"Set Starting Jakcpot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleSetResultss,\n          children: \"Set Last Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.shareJackpot,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"date\",\n          value: this.state.gameDate,\n          onChange: e => this.setState({\n            gameDate: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: this.handleUpdateBoard,\n          variant: \"outline-dark\",\n          children: \"Update Play Board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"outline-success\",\n          disabled: this.state.disable,\n          children: \"Share Jackpot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"button\",\n          variant: \"success\",\n          onClick: this.payOut,\n          disabled: this.state.disable,\n          children: \"Payout to Winners\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    hourToNextDay: state.config.hourToNextDay,\n    isFACup: state.config.isFACup,\n    isFACupNextWeek: state.config.isFACupNextWeek,\n    daysOffset: state.config.daysOffset,\n    kickOffTime: state.config.kickOffTime,\n    gameDate: state.board.gameDate,\n    slips: state.board.slips,\n    thirteenPercent: state.config.thirteenPercent,\n    twelvePercent: state.config.twelvePercent,\n    elevenPercent: state.config.elevenPercent,\n    tenPercent: state.config.tenPercent,\n    isBoardSet: state.config.isBoardSet,\n    user: state.login.user,\n    isLoggedIn: state.login.isLoggedIn\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onUpdateBoard: (fixturesToPush, kickOffDate) => dispatch(actions.updateBoard(fixturesToPush, kickOffDate)),\n    onConfigureBoard: (isFaCup, kickOffTime, kickOffDate) => dispatch(actions.configureBoard(isFaCup, kickOffTime, kickOffDate)),\n    onSetCurrentResult: slip => dispatch(actions.setCurrentResult(slip)),\n    onSetIsBoardSet: isBoardSet => dispatch(actions.setIsBoardSet(isBoardSet))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","map":{"version":3,"sources":["C:/Users/Emma/Documents/GitHub/Emp/sports-lottery/src/containers/Settings/Settings.js"],"names":["React","Component","Button","connect","actions","classes","getNextPlayDate","dateInYYYYMMDD","firebase","moment","Settings","state","disable","loading","tenWinners","elevenWinners","twelveWinners","thirteenWinners","email","gameDate","handleUpdateBoard","database","ref","orderByChild","limitToLast","once","then","snapshot","date","Object","keys","val","data","fixturesToPush","map","key","keys2","push","props","onUpdateBoard","handlecConfigureBoard","onSetIsBoardSet","kickOffDate","daysOffset","hourToNextDay","setTimeout","onConfigureBoard","kickOffTime","isBoardSet","Date","setDate","getDate","kickOffDateNew","format","window","localStorage","removeItem","location","reload","handleSetResultss","onSetCurrentResult","slips","alert","translateResult","goalHome","goalAway","status","determineSelection","choice","position","calculateWins","match","matchRes","allFinished","sideWon","i","length","undefined","k","left","homeGoals","awayGoals","right","games","selections","selected","calculaterWiinerAmount","jackpotRef","child","on","thirteen","twelve","eleven","ten","jackpot","thirteenUser","thirteenPercent","update","twelveUser","twelvePercent","elevenUser","elevenPercent","tenUser","tenPercent","off","setMatchResults","matchesPlayed","matchResults","inner","forEach","matchResRef","fixture_id","assign","splice","shareJackpot","e","preventDefault","setState","matchesPlayedRef","boardRef","isPaid","matches","endDate","startDate","matchDate","datePlayed","evaluationDate","isEvaluated","hits","userId","gameNumber","payOut","transaction","funds","setupJackpot","jackpotData","set","deleteUserByEmail","notfound","users","user","role","toLocaleLowerCase","remove","componentDidMount","render","isLoggedIn","history","SettingsWrapper","target","value","mapStateToProps","config","isFACup","isFACupNextWeek","board","login","mapDispatchToProps","dispatch","updateBoard","isFaCup","configureBoard","slip","setCurrentResult","setIsBoardSet"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Button } from \"react-bootstrap\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/index';\r\nimport classes from './Settings.module.css';\r\nimport {\r\n    getNextPlayDate,\r\n    dateInYYYYMMDD\r\n} from '../../shared/utility';\r\nimport firebase from '../../config/firebase/firebase';\r\nimport moment from 'moment';\r\n\r\n\r\nclass Settings extends Component {\r\n    state = {\r\n        disable: false,\r\n        loading: false,\r\n        tenWinners: 0,\r\n        elevenWinners: 0,\r\n        twelveWinners: 0,\r\n        thirteenWinners: 0,\r\n        email: '',\r\n        gameDate: '',\r\n\r\n    }\r\n    componentDidMount() {\r\n        if (!this.state.loading) {\r\n            firebase.database().ref(\"board\").orderByChild(\"dateKey\").limitToLast(1)\r\n                .on(\"value\", snapshot => {\r\n                    this.setState({ gameDate: Object.keys(snapshot.val())[0] });\r\n                })\r\n        }\r\n        this.setState({ loading: true })\r\n    }\r\n    handleUpdateBoard = () => {\r\n        firebase.database().ref(\"board\").orderByChild(\"dateKey\").limitToLast(1)\r\n            .once(\"value\").then(snapshot => {\r\n                let date = Object.keys(snapshot.val())[0];\r\n                let data = snapshot.val();\r\n                let fixturesToPush = [];\r\n                Object.keys(data).map(key => {\r\n                    Object.keys(data[key]).map(keys2 => {\r\n                        if (keys2 !== \"dateKey\" && keys2 !== \"isPaid\") {\r\n                            fixturesToPush.push(data[key][keys2])\r\n                        }\r\n                        return null;\r\n                    })\r\n                    return null;\r\n                })\r\n                this.props.onUpdateBoard(fixturesToPush, date)\r\n            })\r\n\r\n    }\r\n    handlecConfigureBoard = () => {\r\n        this.props.onSetIsBoardSet(false);\r\n        let kickOffDate;\r\n        kickOffDate = getNextPlayDate(this.props.daysOffset,\r\n            this.props.hourToNextDay);\r\n        setTimeout(() => {\r\n            this.props.onConfigureBoard(false,\r\n                this.props.kickOffTime, dateInYYYYMMDD(kickOffDate)); //this.state.gameDate\r\n        }, 3000);\r\n\r\n        setTimeout(() => {\r\n            if (this.props.isBoardSet === false) {\r\n                this.props.onConfigureBoard(true,\r\n                    this.props.kickOffTime, dateInYYYYMMDD(kickOffDate)); //this.state.gameDate\r\n            }\r\n        }, 6000)\r\n\r\n        let date = new Date(dateInYYYYMMDD(kickOffDate));\r\n        date.setDate(date.getDate() + 7);\r\n        let kickOffDateNew = moment(date).format(\"DD-MM-YYYY\");\r\n        setTimeout(() => {\r\n            if (this.props.isBoardSet === false) {\r\n                this.props.onConfigureBoard(false,\r\n                    this.props.kickOffTime, dateInYYYYMMDD(kickOffDateNew)); //this.state.gameDate\r\n            }\r\n        }, 9000)\r\n        setTimeout(() => {\r\n            if (this.props.isBoardSet === false) {\r\n                this.props.onConfigureBoard(true,\r\n                    this.props.kickOffTime, dateInYYYYMMDD(kickOffDateNew)); //this.state.gameDate\r\n            }\r\n        }, 12000)\r\n        setTimeout(() => {\r\n            window.localStorage.removeItem('firebase:host:betsoka-4b359-default-rtdb.europe-west1.firebasedatabase.app');\r\n            window.localStorage.removeItem('persist:root');\r\n            window.location.reload();\r\n        }, 13000);\r\n    }\r\n    handleSetResultss = () => {\r\n        this.props.onSetCurrentResult(this.props.slips[0][\"slip_1\"]);\r\n        alert(\"results hae been set or updated\")\r\n    }\r\n\r\n    translateResult = (goalHome, goalAway, status) => {\r\n        if (status === \"Match Finished\") {\r\n            if (goalHome > goalAway) {\r\n                return \"H\";\r\n            } else if (goalHome < goalAway) {\r\n                return \"A\";\r\n            } else {\r\n                return \"D\";\r\n            }\r\n        } else {\r\n            return \"-\";\r\n        }\r\n\r\n    }\r\n    determineSelection = (choice, position) => {\r\n        if (choice) {\r\n            if (position === 0) {\r\n                return \"H\"\r\n            } else if (position === 1) {\r\n                return \"D\"\r\n            } else {\r\n                return \"A\";\r\n            }\r\n        } else {\r\n            return \"-\";\r\n        }\r\n    }\r\n\r\n    calculateWins = (match, matchRes) => {\r\n        let allFinished = 0;\r\n        let sideWon = 0;\r\n        for (let i = 0; i < matchRes.length; i++) {\r\n            if (matchRes[i].status !== \"Match Finished\" && matchRes[i].status !== undefined) {\r\n                allFinished++;\r\n                break;\r\n            }\r\n        }\r\n        for (let i = 0; i < matchRes.length; i++) {\r\n            for (let k = 0; k < 3; k++) {\r\n                let left = this.translateResult(matchRes[i].homeGoals, matchRes[i].awayGoals, matchRes[i].status);\r\n                let right = this.determineSelection(match.games[i].selections[k].selected, k,);\r\n                if (left === right && left !== \"-\" && right !== \"-\") {\r\n                    sideWon++;\r\n                }\r\n            }\r\n        }\r\n        if (allFinished === 1) {\r\n            sideWon++;\r\n        }\r\n        return sideWon;\r\n    }\r\n    calculaterWiinerAmount = () => {\r\n        let jackpotRef = firebase.database().ref(\"jackpots\").child(\r\n            dateInYYYYMMDD(this.state.gameDate));\r\n        jackpotRef.on(\"value\", snapshot => {\r\n            let data = snapshot.val();\r\n            let thirteen = 0;\r\n            let twelve = 0;\r\n            let eleven = 0;\r\n            let ten = 0;\r\n            if (data !== null) {\r\n                if (data.jackpot > 0) {\r\n                    if (data.thirteenUser > 0) {\r\n                        thirteen = (data.jackpot * this.props.thirteenPercent) / data.thirteenUser;\r\n                        firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({ thirteen: thirteen });\r\n                    } else {\r\n                        firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({ thirteen: 0 });\r\n                    }\r\n                    if (data.twelveUser > 0) {\r\n                        twelve = (data.jackpot * this.props.twelvePercent) / data.twelveUser;\r\n                        firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({ twelve: twelve });\r\n                    } else {\r\n                        firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({ twelve: 0 });\r\n                    }\r\n                    if (data.elevenUser > 0) {\r\n                        eleven = (data.jackpot * this.props.elevenPercent) / data.elevenUser;\r\n                        firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({ eleven: eleven });\r\n                    } else {\r\n                        firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({ eleven: 0 });\r\n                    }\r\n                    if (data.tenUser > 0) {\r\n                        ten = (data.jackpot * this.props.tenPercent) / data.tenUser;\r\n                        firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({ ten: ten });\r\n                    } else {\r\n                        firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate)).update({ ten: 0 });\r\n                    }\r\n                } else {\r\n                    alert(\"there's no Jacpot, no players\")\r\n                }\r\n            } else {\r\n                alert(\"No games recorded for  chosen day \" + this.state.gameDate);\r\n            }\r\n            firebase.database().ref(\"jackpots\").off();\r\n            firebase.database().ref(\"jackpot-win\").off();\r\n        });\r\n    }\r\n\r\n    setMatchResults = (matchesPlayed) => {\r\n        let matchResults = [];\r\n        let inner = [];\r\n        matchesPlayed.games.forEach((match, k) => {\r\n            let matchResRef = firebase.database().ref(\"match-results\").child(match.fixture_id);\r\n            matchResRef.once(\"value\", snapshot => {\r\n                let data = Object.assign({}, snapshot.val());\r\n                inner.push(data)\r\n            });\r\n            matchResults.splice(matchResults.length,\r\n                matchResults.length + 1, inner)\r\n        });\r\n        return matchResults;\r\n    }\r\n\r\n    shareJackpot = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ disable: true });\r\n        let matchesPlayedRef = firebase.database().ref(\"game-history\");\r\n        let boardRef = firebase.database().ref(\"board\").child(dateInYYYYMMDD(this.state.gameDate));\r\n        boardRef.once(\"value\").then(snapshot => {\r\n            let data = snapshot.val();\r\n            if (!data.isPaid) {\r\n                matchesPlayedRef.once(\"value\").then(snapshot => {\r\n                    let data = snapshot.val();\r\n                    Object.keys(data).map(keys => {\r\n                        let matches = data[keys];\r\n                        return Object.keys(matches).map(key => {\r\n                            let matchesPlayed = matches[key];\r\n                            let endDate = new Date(dateInYYYYMMDD(this.state.gameDate) + \"T\" + this.props.kickOffTime);\r\n                            let startDate = endDate.getDate() - 7;\r\n                            let matchDate = new Date(matchesPlayed.datePlayed);\r\n                            if (matchesPlayed.evaluationDate === dateInYYYYMMDD(this.state.gameDate)) {\r\n                                if (matchDate <= endDate\r\n                                    && matchDate >= startDate) {\r\n                                    if (!matchesPlayed.isEvaluated) {\r\n                                        let matchRes = this.setMatchResults(matchesPlayed);\r\n                                        let hits\r\n                                        setTimeout(() => {\r\n                                            hits = this.calculateWins(matchesPlayed, matchRes[0]);\r\n                                        }, 500)\r\n                                        setTimeout(() => {\r\n                                            firebase.database().ref(\"game-history\").child(matchesPlayed.userId)\r\n                                                .child(matchesPlayed.gameNumber)\r\n                                                .update({ hits: hits });\r\n                                            if (hits === 10) {\r\n                                                this.setState({ tenWinners: this.state.tenWinners + 1 });\r\n                                            } else if (hits === 11) {\r\n                                                this.setState({ elevenWinners: this.state.elevenWinners + 1 });\r\n                                            } else if (hits === 12) {\r\n                                                this.setState({ twelveWinners: this.state.twelveWinners + 1 });\r\n                                            } else if (hits === 13) {\r\n                                                this.setState({ thirteenWinners: this.state.thirteenWinners + 1 });\r\n                                            }\r\n                                            firebase.database().ref(\"game-history\").child(matchesPlayed.userId)\r\n                                                .child(matchesPlayed.gameNumber).update({ isEvaluated: true })\r\n                                            firebase.database().ref(\"jackpots\").child(matchesPlayed.evaluationDate).update({ tenUser: this.state.tenWinners })\r\n                                            firebase.database().ref(\"jackpots\").child(matchesPlayed.evaluationDate).update({ elevenUser: this.state.elevenWinners })\r\n                                            firebase.database().ref(\"jackpots\").child(matchesPlayed.evaluationDate).update({ twelveUser: this.state.twelveWinners })\r\n                                            firebase.database().ref(\"jackpots\").child(matchesPlayed.evaluationDate).update({ thirteenUser: this.state.thirteenWinners })\r\n                                        }, 2000)\r\n                                    }\r\n                                }\r\n                            }\r\n                            return null;\r\n                        })\r\n                    });\r\n                    firebase.database().ref(\"jackpots\").off();\r\n                    firebase.database().ref(\"match-results\").off();\r\n                    firebase.database().ref(\"game-history\").off();\r\n                });\r\n                setTimeout(() => {\r\n                    this.calculaterWiinerAmount();\r\n                    this.setState({ disable: false });\r\n                }, 30000); //Subject to change with huge data possible to 1 hour\r\n\r\n                boardRef.update({ isPaid: true })\r\n                firebase.database().ref(\"board\").off();\r\n                setTimeout(() => {\r\n                    alert(\"Jackpot successfully shared\")\r\n                }, 30000); //Subject to change\r\n\r\n            } else {\r\n                setTimeout(() => {\r\n                    alert(\"games have already been shared for this day and board\")\r\n                }, 2000)\r\n            }\r\n\r\n            setTimeout(() => {\r\n                window.location.reload();\r\n            }, 30000)\r\n        })\r\n\r\n    }\r\n\r\n    payOut = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ disable: true });\r\n        let matchesPlayedRef = firebase.database().ref(\"game-history\");\r\n        matchesPlayedRef.on(\"value\", snapshot => {\r\n            let data = snapshot.val();\r\n            Object.keys(data).map(keys => {\r\n                let matches = data[keys];\r\n                return Object.keys(matches).map(key => {\r\n                    let matchesPlayed = matches[key];\r\n                    if (matchesPlayed.evaluationDate === dateInYYYYMMDD(this.state.gameDate)) {\r\n                        if (matchesPlayed.isEvaluated && !matchesPlayed.isPaid) {\r\n                            let hits = matchesPlayed.hits;\r\n                            let data;\r\n\r\n                            firebase.database().ref(\"jackpot-win\").child(dateInYYYYMMDD(this.state.gameDate))\r\n                                .on(\"value\", snapshot => {\r\n                                    data = snapshot.val();\r\n                                });\r\n                            setTimeout(() => {\r\n                                if (hits === 10) {\r\n                                    firebase.database().ref(\"users\").child(matchesPlayed.userId).child(\"funds\").transaction(funds => {\r\n                                        return funds + data.ten;\r\n                                    });\r\n                                }\r\n                                else if (hits === 11) {\r\n                                    firebase.database().ref(\"users\").child(matchesPlayed.userId).child(\"funds\").transaction(funds => {\r\n                                        return funds + data.eleven;\r\n                                    });\r\n                                } else if (hits === 12) {\r\n                                    firebase.database().ref(\"users\").child(matchesPlayed.userId).child(\"funds\").transaction(funds => {\r\n                                        return funds + data.twelve;\r\n                                    });\r\n                                } else if (hits === 13) {\r\n                                    firebase.database().ref(\"users\").child(matchesPlayed.userId).child(\"funds\").transaction(funds => {\r\n                                        return funds + data.thirteen;\r\n                                    });\r\n                                }\r\n\r\n                                matchesPlayedRef.child(matchesPlayed.userId).child(matchesPlayed.gameNumber).update({ isPaid: true })\r\n                                setTimeout(() => {\r\n                                    firebase.database().ref(\"users\").off();\r\n                                }, 1500);\r\n                            }, 2000)\r\n                        }\r\n                    }\r\n\r\n                    return null;\r\n                })\r\n            });\r\n            firebase.database().ref(\"jackpot-win\").off();\r\n            firebase.database().ref(\"users\").off();\r\n            firebase.database().ref(\"game-history\").off();\r\n        });\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 10000)\r\n\r\n    }\r\n\r\n    setupJackpot = (e) => {\r\n        e.preventDefault();\r\n        firebase.database().ref(\"board\").limitToLast(1).on(\"value\", snapshot => {\r\n            let data = snapshot.val();\r\n            Object.keys(data).map(key => {\r\n                let jackpotData;\r\n                firebase.database().ref(\"jackpots\").child(key)\r\n                    .on(\"value\", snapshot => {\r\n                        jackpotData = snapshot.val();\r\n                    })\r\n                setTimeout(() => {\r\n                    if (jackpotData === null) {\r\n                        firebase.database().ref(\"jackpots\").child(key).set({\r\n                            jackpot: 0,\r\n                            tenUser: 0,\r\n                            elevenUser: 0,\r\n                            twelveUser: 0,\r\n                            thirteenUser: 0\r\n                        })\r\n                        alert(\"done\");\r\n                    } else {\r\n                        alert(\"this is already set, cannot reset\");\r\n                    }\r\n                }, 3000)\r\n                firebase.database().ref(\"jackpots\").off();\r\n                firebase.database().ref(\"board\").off();\r\n                return null;\r\n            })\r\n        })\r\n\r\n\r\n    }\r\n    deleteUserByEmail = (e, email) => {\r\n        e.preventDefault();\r\n        let notfound = true;\r\n        firebase.database().ref(\"users\").on(\"value\", snapshot => {\r\n            let users = snapshot.val();\r\n            Object.keys(users).map(key => {\r\n                let user = users[key];\r\n                if (user.email === email && user.role.toLocaleLowerCase() !== \"admin\") {\r\n                    firebase.database().ref('users').child(key).remove();\r\n                    notfound = false;\r\n                    alert(\"deleted\");\r\n                    setTimeout(() => {\r\n                        firebase.database().ref(\"users\").off();\r\n                    }, 1000);\r\n                }\r\n\r\n                return null;\r\n            })\r\n            if (notfound)\r\n                alert(\"User not found\");\r\n\r\n        })\r\n        setTimeout(() => {\r\n            firebase.database().ref(\"users\").off();\r\n        }, 5000);\r\n    }\r\n    render() {\r\n        if (this.props.user.role !== \"admin\" || !this.props.isLoggedIn) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n        return (<div className={classes.SettingsWrapper}>\r\n            <form>\r\n                <input type=\"email\" placeholder=\"user email to logut\" onChange={(e) => this.setState({ email: e.target.value })} />\r\n                <Button type=\"button\" onClick={(e) => this.deleteUserByEmail(e, this.state.email)} variant=\"outline-danger\">Delete User</Button>\r\n            </form>\r\n            <div>\r\n                <Button onClick={this.handlecConfigureBoard} >Configure Play Board</Button>\r\n                <Button type=\"button\" onClick={this.setupJackpot} disabled={this.state.disable} >Set Starting Jakcpot</Button>\r\n                <Button onClick={this.handleSetResultss} >Set Last Results</Button>\r\n            </div>\r\n\r\n            <form onSubmit={this.shareJackpot}>\r\n                <input type=\"text\" name=\"date\" value={this.state.gameDate} onChange={(e) => this.setState({ gameDate: e.target.value })} />\r\n                <Button onClick={this.handleUpdateBoard} variant=\"outline-dark\">Update Play Board</Button>\r\n                <Button type=\"submit\" variant=\"outline-success\" disabled={this.state.disable} >Share Jackpot</Button>\r\n                <Button type=\"button\" variant=\"success\" onClick={this.payOut} disabled={this.state.disable} >Payout to Winners</Button>\r\n\r\n            </form>\r\n        </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        hourToNextDay: state.config.hourToNextDay,\r\n        isFACup: state.config.isFACup,\r\n        isFACupNextWeek: state.config.isFACupNextWeek,\r\n        daysOffset: state.config.daysOffset,\r\n        kickOffTime: state.config.kickOffTime,\r\n        gameDate: state.board.gameDate,\r\n        slips: state.board.slips,\r\n\r\n        thirteenPercent: state.config.thirteenPercent,\r\n        twelvePercent: state.config.twelvePercent,\r\n        elevenPercent: state.config.elevenPercent,\r\n        tenPercent: state.config.tenPercent,\r\n\r\n        isBoardSet: state.config.isBoardSet,\r\n\r\n        user: state.login.user,\r\n        isLoggedIn: state.login.isLoggedIn\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        onUpdateBoard: (fixturesToPush, kickOffDate) =>\r\n            dispatch(actions.updateBoard(fixturesToPush, kickOffDate)),\r\n        onConfigureBoard: (isFaCup, kickOffTime, kickOffDate) =>\r\n            dispatch(actions.configureBoard(isFaCup, kickOffTime, kickOffDate)),\r\n        onSetCurrentResult: (slip) =>\r\n            dispatch(actions.setCurrentResult(slip)),\r\n        onSetIsBoardSet: (isBoardSet) => dispatch(actions.setIsBoardSet(isBoardSet))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);"]},"metadata":{},"sourceType":"module"}